// Generated by Haxe 3.4.0 (git build development @ 4a40be3)
(function ($hx_exports, $global) { "use strict";
$hx_exports["hxPixels"] = $hx_exports["hxPixels"] || {};
$hx_exports["hxPixels"]["_Pixels"] = $hx_exports["hxPixels"]["_Pixels"] || {};
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = true;
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = true;
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = true;
Lambda.has = function(it,elt) {
	var x = $iterator(it)();
	while(x.hasNext()) if(x.next() == elt) {
		return true;
	}
	return false;
};
Lambda.count = function(it,pred) {
	var n = 0;
	if(pred == null) {
		var _ = $iterator(it)();
		while(_.hasNext()) {
			_.next();
			++n;
		}
	} else {
		var x = $iterator(it)();
		while(x.hasNext()) if(pred(x.next())) {
			++n;
		}
	}
	return n;
};
var List = function() {
	this.length = 0;
};
$hxClasses["List"] = List;
List.__name__ = true;
List.prototype = {
	push: function(item) {
		var x = new _$List_ListNode(item,this.h);
		this.h = x;
		if(this.q == null) {
			this.q = x;
		}
		this.length++;
	}
	,pop: function() {
		if(this.h == null) {
			return null;
		}
		var x = this.h.item;
		this.h = this.h.next;
		if(this.h == null) {
			this.q = null;
		}
		this.length--;
		return x;
	}
	,remove: function(v) {
		var prev = null;
		var l = this.h;
		while(l != null) {
			if(l.item == v) {
				if(prev == null) {
					this.h = l.next;
				} else {
					prev.next = l.next;
				}
				if(this.q == l) {
					this.q = prev;
				}
				this.length--;
				return true;
			}
			prev = l;
			l = l.next;
		}
		return false;
	}
	,iterator: function() {
		return new _$List_ListIterator(this.h);
	}
	,__class__: List
};
var _$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["_List.ListNode"] = _$List_ListNode;
_$List_ListNode.__name__ = true;
_$List_ListNode.prototype = {
	__class__: _$List_ListNode
};
var _$List_ListIterator = function(head) {
	this.head = head;
};
$hxClasses["_List.ListIterator"] = _$List_ListIterator;
_$List_ListIterator.__name__ = true;
_$List_ListIterator.prototype = {
	hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
	,__class__: _$List_ListIterator
};
var Luxe = function() { };
$hxClasses["Luxe"] = Luxe;
Luxe.__name__ = true;
Luxe.__properties__ = {set_fixed_frame_time:"set_fixed_frame_time",get_fixed_frame_time:"get_fixed_frame_time",get_fixed_alpha:"get_fixed_alpha",set_fixed_timestep:"set_fixed_timestep",get_fixed_timestep:"get_fixed_timestep",set_fixed_delta:"set_fixed_delta",get_fixed_delta:"get_fixed_delta",get_sim_delta:"get_sim_delta",get_sim_time:"get_sim_time",set_timescale:"set_timescale",get_timescale:"get_timescale",get_tick_delta:"get_tick_delta",get_tick_start_prev:"get_tick_start_prev",get_tick_start:"get_tick_start",set_update_rate:"set_update_rate",get_update_rate:"get_update_rate",set_frame_max_delta:"set_frame_max_delta",get_frame_max_delta:"get_frame_max_delta",get_frame_start_prev:"get_frame_start_prev",get_frame_start:"get_frame_start",get_dt:"get_dt",get_build:"get_build",get_version:"get_version",get_screen:"get_screen",get_time:"get_time",get_snow:"get_snow"}
Luxe.on = function(event,handler) {
	Luxe.core.emitter.on(event,handler);
};
Luxe.off = function(event,handler) {
	return Luxe.core.emitter.off(event,handler);
};
Luxe.next = function(func) {
	if(func != null) {
		snow_Snow.next_queue.push(func);
	}
};
Luxe.shutdown = function() {
	Luxe.core.shutdown();
};
Luxe.showConsole = function(_show) {
	Luxe.core.debug.set_visible(_show);
};
Luxe.get_snow = function() {
	return Luxe.core.app;
};
Luxe.get_screen = function() {
	return Luxe.core.screen;
};
Luxe.get_time = function() {
	return window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
};
Luxe.get_version = function() {
	return Luxe.core.version;
};
Luxe.get_build = function() {
	return Luxe.core.build;
};
Luxe.get_dt = function() {
	return Luxe.core.frame_delta;
};
Luxe.get_frame_start = function() {
	return Luxe.core.frame_start;
};
Luxe.get_frame_start_prev = function() {
	return Luxe.core.frame_start_prev;
};
Luxe.get_frame_max_delta = function() {
	return Luxe.core.frame_max_delta;
};
Luxe.get_update_rate = function() {
	return Luxe.core.update_rate;
};
Luxe.get_tick_start = function() {
	return Luxe.core.tick_start;
};
Luxe.get_tick_start_prev = function() {
	return Luxe.core.tick_start_prev;
};
Luxe.get_tick_delta = function() {
	return Luxe.core.tick_delta;
};
Luxe.get_timescale = function() {
	return Luxe.core.timescale;
};
Luxe.get_sim_time = function() {
	return Luxe.core.sim_time;
};
Luxe.get_sim_delta = function() {
	return Luxe.core.sim_delta;
};
Luxe.get_fixed_delta = function() {
	return Luxe.core.fixed_delta;
};
Luxe.get_fixed_timestep = function() {
	return Luxe.core.fixed_timestep;
};
Luxe.get_fixed_alpha = function() {
	return Luxe.core.fixed_alpha;
};
Luxe.get_fixed_frame_time = function() {
	return Luxe.core.fixed_frame_time;
};
Luxe.set_timescale = function(_val) {
	return Luxe.core.timescale = _val;
};
Luxe.set_fixed_delta = function(_val) {
	return Luxe.core.fixed_delta = _val;
};
Luxe.set_update_rate = function(_val) {
	return Luxe.core.update_rate = _val;
};
Luxe.set_fixed_timestep = function(_val) {
	return Luxe.core.fixed_timestep = _val;
};
Luxe.set_frame_max_delta = function(_val) {
	return Luxe.core.frame_max_delta = _val;
};
Luxe.set_fixed_frame_time = function(_val) {
	return Luxe.core.fixed_frame_time = _val;
};
var luxe_Game = function() {
	this.app = new luxe_Engine(this);
	this.app.run();
};
$hxClasses["luxe.Game"] = luxe_Game;
luxe_Game.__name__ = true;
luxe_Game.main = function() {
	new MainLuxe();
};
luxe_Game.prototype = {
	config: function(_config) {
		return _config;
	}
	,ready: function() {
	}
	,update: function(dt) {
	}
	,ondestroy: function() {
	}
	,onprerender: function() {
	}
	,onrender: function() {
	}
	,onpostrender: function() {
	}
	,oninputdown: function(event) {
	}
	,oninputup: function(event) {
	}
	,onmousedown: function(event) {
	}
	,onmouseup: function(event) {
	}
	,onmousewheel: function(event) {
	}
	,onmousemove: function(event) {
	}
	,onkeydown: function(event) {
	}
	,onkeyup: function(event) {
	}
	,ontextinput: function(event) {
	}
	,ontouchdown: function(event) {
	}
	,ontouchup: function(event) {
	}
	,ontouchmove: function(event) {
	}
	,ongamepadaxis: function(event) {
	}
	,ongamepaddown: function(event) {
	}
	,ongamepadup: function(event) {
	}
	,ongamepaddevice: function(event) {
	}
	,onwindowmoved: function(event) {
	}
	,onwindowresized: function(event) {
	}
	,onwindowsized: function(event) {
	}
	,onwindowminimized: function(event) {
	}
	,onwindowrestored: function(event) {
	}
	,onevent: function(event) {
	}
	,__class__: luxe_Game
};
var MainLuxe = function() {
	luxe_Game.call(this);
};
$hxClasses["MainLuxe"] = MainLuxe;
MainLuxe.__name__ = true;
MainLuxe.__super__ = luxe_Game;
MainLuxe.prototype = $extend(luxe_Game.prototype,{
	ready: function() {
		var this1 = new hxPixels__$Pixels_PixelsData(1024,768,true);
		var _g1 = 0;
		while(_g1 < 768) {
			var i = _g1++;
			var ci = i * 0.00260756192959582783 - 1.0;
			var _g3 = 0;
			while(_g3 < 1024) {
				var j = _g3++;
				var k = 0;
				var zr = 0.0;
				var zi = 0.0;
				var cr = j * 0.00293255131964809384 - 2.0;
				while(k <= 255 && zr * zr + zi * zi <= 4) {
					var temp = zr * zr - zi * zi + cr;
					zi = 2 * zr * zi + ci;
					zr = temp;
					++k;
				}
				var red = k > 255 ? 0 : k * 13569807;
				var pos = i * this1.width + j << 2;
				this1.bytes.b[pos + this1.format.ch0] = red >> 24 & 255 & 255;
				this1.bytes.b[pos + this1.format.ch1] = red >> 16 & 255 & 255;
				this1.bytes.b[pos + this1.format.ch2] = red >> 8 & 255 & 255;
				this1.bytes.b[pos + this1.format.ch3] = red & 255 & 255;
			}
		}
		var mandelbrot = this1;
		haxe_Log.trace(mandelbrot,{ fileName : "MainLuxe.hx", lineNumber : 9, className : "MainLuxe", methodName : "ready"});
		haxe_Log.trace(_$Mandelbrot_Mandelbrot_$Impl_$.toLuxeSprite(mandelbrot),{ fileName : "MainLuxe.hx", lineNumber : 11, className : "MainLuxe", methodName : "ready"});
	}
	,onmousemove: function(event) {
	}
	,onkeyup: function(e) {
		if(e.keycode == 27) {
			Luxe.core.shutdown();
		}
	}
	,update: function(delta) {
	}
	,config: function(config) {
		return config;
	}
	,__class__: MainLuxe
});
var _$Mandelbrot_Mandelbrot_$Impl_$ = {};
$hxClasses["_Mandelbrot.Mandelbrot_Impl_"] = _$Mandelbrot_Mandelbrot_$Impl_$;
_$Mandelbrot_Mandelbrot_$Impl_$.__name__ = true;
_$Mandelbrot_Mandelbrot_$Impl_$.toLuxeSprite = function(this1) {
	var renderTexture = new phoenix_RenderTexture({ id : Std.string("id" + _$Mandelbrot_Mandelbrot_$Impl_$.count++), width : this1.width, height : this1.height});
	hxPixels__$Pixels_Pixels_$Impl_$.applyToLuxeTexture(this1,renderTexture);
	var sprite = new luxe_Sprite({ texture : renderTexture, pos : Luxe.core.screen.get_mid()});
	haxe_Log.trace(sprite,{ fileName : "Mandelbrot.hx", lineNumber : 57, className : "_Mandelbrot.Mandelbrot_Impl_", methodName : "toLuxeSprite"});
	return sprite;
};
Math.__name__ = true;
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = true;
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
Std.random = function(x) {
	if(x <= 0) {
		return 0;
	} else {
		return Math.floor(Math.random() * x);
	}
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = true;
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.rpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	while(s.length < l) s += c;
	return s;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = true;
Type.resolveClass = function(name) {
	var cl = $hxClasses[name];
	if(cl == null || !cl.__name__) {
		return null;
	}
	return cl;
};
Type.createInstance = function(cl,args) {
	var _g = args.length;
	switch(_g) {
	case 0:
		return new cl();
	case 1:
		return new cl(args[0]);
	case 2:
		return new cl(args[0],args[1]);
	case 3:
		return new cl(args[0],args[1],args[2]);
	case 4:
		return new cl(args[0],args[1],args[2],args[3]);
	case 5:
		return new cl(args[0],args[1],args[2],args[3],args[4]);
	case 6:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5]);
	case 7:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);
	case 8:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
	case 9:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8]);
	case 10:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9]);
	case 11:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10]);
	case 12:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11]);
	case 13:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12]);
	case 14:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12],args[13]);
	default:
		throw new js__$Boot_HaxeError("Too many arguments");
	}
};
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = true;
haxe_IMap.prototype = {
	__class__: haxe_IMap
};
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = true;
haxe_Log.trace = function(v,infos) {
	js_Boot.__trace(v,infos);
};
var haxe_Resource = function() { };
$hxClasses["haxe.Resource"] = haxe_Resource;
haxe_Resource.__name__ = true;
haxe_Resource.getString = function(name) {
	var _g = 0;
	var _g1 = haxe_Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) {
				return x.str;
			}
			return haxe_crypto_Base64.decode(x.data).toString();
		}
	}
	return null;
};
haxe_Resource.getBytes = function(name) {
	var _g = 0;
	var _g1 = haxe_Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) {
				return haxe_io_Bytes.ofString(x.str);
			}
			return haxe_crypto_Base64.decode(x.data);
		}
	}
	return null;
};
var haxe_Timer = function() { };
$hxClasses["haxe.Timer"] = haxe_Timer;
haxe_Timer.__name__ = true;
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = true;
haxe_io_Bytes.alloc = function(length) {
	return new haxe_io_Bytes(new ArrayBuffer(length));
};
haxe_io_Bytes.ofString = function(s) {
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		}
		if(c <= 127) {
			a.push(c);
		} else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.fastGet = function(b,pos) {
	return b.bytes[pos];
};
haxe_io_Bytes.prototype = {
	blit: function(pos,src,srcpos,len) {
		if(pos < 0 || srcpos < 0 || len < 0 || pos + len > this.length || srcpos + len > src.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(srcpos == 0 && len == src.b.byteLength) {
			this.b.set(src.b,pos);
		} else {
			this.b.set(src.b.subarray(srcpos,srcpos + len),pos);
		}
	}
	,getString: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var s = "";
		var b = this.b;
		var fcc = String.fromCharCode;
		var i = pos;
		var max = pos + len;
		while(i < max) {
			var c = b[i++];
			if(c < 128) {
				if(c == 0) {
					break;
				}
				s += fcc(c);
			} else if(c < 224) {
				s += fcc((c & 63) << 6 | b[i++] & 127);
			} else if(c < 240) {
				s += fcc((c & 31) << 12 | (b[i++] & 127) << 6 | b[i++] & 127);
			} else {
				var u = (c & 15) << 18 | (b[i++] & 127) << 12 | (b[i++] & 127) << 6 | b[i++] & 127;
				s += fcc((u >> 10) + 55232);
				s += fcc(u & 1023 | 56320);
			}
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_crypto_Base64 = function() { };
$hxClasses["haxe.crypto.Base64"] = haxe_crypto_Base64;
haxe_crypto_Base64.__name__ = true;
haxe_crypto_Base64.decode = function(str,complement) {
	if(complement == null) {
		complement = true;
	}
	if(complement) {
		while(HxOverrides.cca(str,str.length - 1) == 61) str = HxOverrides.substr(str,0,-1);
	}
	return new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).decodeBytes(haxe_io_Bytes.ofString(str));
};
var haxe_crypto_BaseCode = function(base) {
	var len = base.length;
	var nbits = 1;
	while(len > 1 << nbits) ++nbits;
	if(nbits > 8 || len != 1 << nbits) {
		throw new js__$Boot_HaxeError("BaseCode : base length must be a power of two.");
	}
	this.base = base;
	this.nbits = nbits;
};
$hxClasses["haxe.crypto.BaseCode"] = haxe_crypto_BaseCode;
haxe_crypto_BaseCode.__name__ = true;
haxe_crypto_BaseCode.prototype = {
	initTable: function() {
		var tbl = [];
		var _g = 0;
		while(_g < 256) tbl[_g++] = -1;
		var _g1 = 0;
		var _g2 = this.base.length;
		while(_g1 < _g2) {
			var i = _g1++;
			tbl[this.base.b[i]] = i;
		}
		this.tbl = tbl;
	}
	,decodeBytes: function(b) {
		var nbits = this.nbits;
		if(this.tbl == null) {
			this.initTable();
		}
		var tbl = this.tbl;
		var size = b.length * nbits >> 3;
		var out = new haxe_io_Bytes(new ArrayBuffer(size));
		var buf = 0;
		var curbits = 0;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < 8) {
				curbits += nbits;
				buf <<= nbits;
				var i = tbl[b.b[pin++]];
				if(i == -1) {
					throw new js__$Boot_HaxeError("BaseCode : invalid encoded char");
				}
				buf |= i;
			}
			curbits -= 8;
			out.b[pout++] = buf >> curbits & 255 & 255;
		}
		return out;
	}
	,__class__: haxe_crypto_BaseCode
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = true;
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	set: function(key,value) {
		this.h[key] = value;
	}
	,get: function(key) {
		return this.h[key];
	}
	,exists: function(key) {
		return this.h.hasOwnProperty(key);
	}
	,remove: function(key) {
		if(!this.h.hasOwnProperty(key)) {
			return false;
		}
		delete(this.h[key]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) {
			a.push(key | 0);
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = true;
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.assignId = function(obj) {
	return obj.__id__ = ++haxe_ds_ObjectMap.count;
};
haxe_ds_ObjectMap.getId = function(obj) {
	return obj.__id__;
};
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,exists: function(key) {
		return this.h.__keys__[key.__id__] != null;
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i.__id__];
		}};
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds__$StringMap_StringMapIterator = function(map,keys) {
	this.map = map;
	this.keys = keys;
	this.index = 0;
	this.count = keys.length;
};
$hxClasses["haxe.ds._StringMap.StringMapIterator"] = haxe_ds__$StringMap_StringMapIterator;
haxe_ds__$StringMap_StringMapIterator.__name__ = true;
haxe_ds__$StringMap_StringMapIterator.prototype = {
	hasNext: function() {
		return this.index < this.count;
	}
	,next: function() {
		var _this = this.map;
		var key = this.keys[this.index++];
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	,__class__: haxe_ds__$StringMap_StringMapIterator
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = true;
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	set: function(key,value) {
		if(__map_reserved[key] != null) {
			this.setReserved(key,value);
		} else {
			this.h[key] = value;
		}
	}
	,get: function(key) {
		if(__map_reserved[key] != null) {
			return this.getReserved(key);
		}
		return this.h[key];
	}
	,exists: function(key) {
		if(__map_reserved[key] != null) {
			return this.existsReserved(key);
		}
		return this.h.hasOwnProperty(key);
	}
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,iterator: function() {
		return new haxe_ds__$StringMap_StringMapIterator(this,this.arrayKeys());
	}
	,__class__: haxe_ds_StringMap
};
var haxe_io_Error = { __ename__ : true, __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"] };
haxe_io_Error.Blocked = ["Blocked",0];
haxe_io_Error.Blocked.toString = $estr;
haxe_io_Error.Blocked.__enum__ = haxe_io_Error;
haxe_io_Error.Overflow = ["Overflow",1];
haxe_io_Error.Overflow.toString = $estr;
haxe_io_Error.Overflow.__enum__ = haxe_io_Error;
haxe_io_Error.OutsideBounds = ["OutsideBounds",2];
haxe_io_Error.OutsideBounds.toString = $estr;
haxe_io_Error.OutsideBounds.__enum__ = haxe_io_Error;
haxe_io_Error.Custom = function(e) { var $x = ["Custom",3,e]; $x.__enum__ = haxe_io_Error; $x.toString = $estr; return $x; };
var haxe_io_FPHelper = function() { };
$hxClasses["haxe.io.FPHelper"] = haxe_io_FPHelper;
haxe_io_FPHelper.__name__ = true;
haxe_io_FPHelper.i32ToFloat = function(i) {
	var exp = i >>> 23 & 255;
	var sig = i & 8388607;
	if(sig == 0 && exp == 0) {
		return 0.0;
	}
	return (1 - (i >>> 31 << 1)) * (1 + Math.pow(2,-23) * sig) * Math.pow(2,exp - 127);
};
haxe_io_FPHelper.floatToI32 = function(f) {
	if(f == 0) {
		return 0;
	}
	var af = f < 0 ? -f : f;
	var exp = Math.floor(Math.log(af) / 0.6931471805599453);
	if(exp < -127) {
		exp = -127;
	} else if(exp > 128) {
		exp = 128;
	}
	var sig = Math.round((af / Math.pow(2,exp) - 1) * 8388608);
	if(sig == 8388608 && exp < 128) {
		sig = 0;
		++exp;
	}
	return (f < 0 ? -2147483648 : 0) | exp + 127 << 23 | sig;
};
var haxe_io_Path = function(path) {
	switch(path) {
	case ".":case "..":
		this.dir = path;
		this.file = "";
		return;
	}
	var c1 = path.lastIndexOf("/");
	var c2 = path.lastIndexOf("\\");
	if(c1 < c2) {
		this.dir = HxOverrides.substr(path,0,c2);
		path = HxOverrides.substr(path,c2 + 1,null);
		this.backslash = true;
	} else if(c2 < c1) {
		this.dir = HxOverrides.substr(path,0,c1);
		path = HxOverrides.substr(path,c1 + 1,null);
	} else {
		this.dir = null;
	}
	var cp = path.lastIndexOf(".");
	if(cp != -1) {
		this.ext = HxOverrides.substr(path,cp + 1,null);
		this.file = HxOverrides.substr(path,0,cp);
	} else {
		this.ext = null;
		this.file = path;
	}
};
$hxClasses["haxe.io.Path"] = haxe_io_Path;
haxe_io_Path.__name__ = true;
haxe_io_Path.directory = function(path) {
	var s = new haxe_io_Path(path);
	if(s.dir == null) {
		return "";
	}
	return s.dir;
};
haxe_io_Path.extension = function(path) {
	var s = new haxe_io_Path(path);
	if(s.ext == null) {
		return "";
	}
	return s.ext;
};
haxe_io_Path.join = function(paths) {
	var paths1 = paths.filter(function(s) {
		if(s != null) {
			return s != "";
		} else {
			return false;
		}
	});
	if(paths1.length == 0) {
		return "";
	}
	var path = paths1[0];
	var _g1 = 1;
	var _g = paths1.length;
	while(_g1 < _g) {
		path = haxe_io_Path.addTrailingSlash(path);
		path += paths1[_g1++];
	}
	return haxe_io_Path.normalize(path);
};
haxe_io_Path.normalize = function(path) {
	path = path.split("\\").join("/");
	if(path == "/") {
		return "/";
	}
	var target = [];
	var _g = 0;
	var _g1 = path.split("/");
	while(_g < _g1.length) {
		var token = _g1[_g];
		++_g;
		if(token == ".." && target.length > 0 && target[target.length - 1] != "..") {
			target.pop();
		} else if(token != ".") {
			target.push(token);
		}
	}
	var tmp = target.join("/");
	var regex_r = new RegExp("([^:])/+","g".split("u").join(""));
	tmp.replace(regex_r,"$1" + "/");
	var acc_b = "";
	var colon = false;
	var slashes = false;
	var _g11 = 0;
	var _g2 = tmp.length;
	while(_g11 < _g2) {
		var _g21 = HxOverrides.cca(tmp,_g11++);
		if(_g21 == null) {
			colon = false;
			if(slashes) {
				acc_b += "/";
				slashes = false;
			}
			acc_b += Std.string(String.fromCharCode(_g21));
		} else {
			switch(_g21) {
			case 47:
				if(!colon) {
					slashes = true;
				} else {
					colon = false;
					if(slashes) {
						acc_b += "/";
						slashes = false;
					}
					acc_b += Std.string(String.fromCharCode(_g21));
				}
				break;
			case 58:
				acc_b += ":";
				colon = true;
				break;
			default:
				colon = false;
				if(slashes) {
					acc_b += "/";
					slashes = false;
				}
				acc_b += Std.string(String.fromCharCode(_g21));
			}
		}
	}
	return acc_b;
};
haxe_io_Path.addTrailingSlash = function(path) {
	if(path.length == 0) {
		return "/";
	}
	var c1 = path.lastIndexOf("/");
	var c2 = path.lastIndexOf("\\");
	if(c1 < c2) {
		if(c2 != path.length - 1) {
			return path + "\\";
		} else {
			return path;
		}
	} else if(c1 != path.length - 1) {
		return path + "/";
	} else {
		return path;
	}
};
haxe_io_Path.prototype = {
	__class__: haxe_io_Path
};
var haxe_io__$UInt32Array_UInt32Array_$Impl_$ = {};
$hxClasses["haxe.io._UInt32Array.UInt32Array_Impl_"] = haxe_io__$UInt32Array_UInt32Array_$Impl_$;
haxe_io__$UInt32Array_UInt32Array_$Impl_$.__name__ = true;
haxe_io__$UInt32Array_UInt32Array_$Impl_$.fromBytes = function(bytes,bytePos,length) {
	if(bytePos == null) {
		bytePos = 0;
	}
	if(length == null) {
		length = bytes.length - bytePos >> 2;
	}
	return new Uint32Array(bytes.b.bufferValue,bytePos,length);
};
var haxe_io__$UInt8Array_UInt8Array_$Impl_$ = {};
$hxClasses["haxe.io._UInt8Array.UInt8Array_Impl_"] = haxe_io__$UInt8Array_UInt8Array_$Impl_$;
haxe_io__$UInt8Array_UInt8Array_$Impl_$.__name__ = true;
haxe_io__$UInt8Array_UInt8Array_$Impl_$.fromBytes = function(bytes,bytePos,length) {
	if(bytePos == null) {
		bytePos = 0;
	}
	if(length == null) {
		length = bytes.length - bytePos;
	}
	return new Uint8Array(bytes.b.bufferValue,bytePos,length);
};
var hxPixels__$Pixels_Pixels_$Impl_$ = $hx_exports["hxPixels"]["_Pixels"]["Pixels_Impl_"] = {};
$hxClasses["hxPixels._Pixels.Pixels_Impl_"] = hxPixels__$Pixels_Pixels_$Impl_$;
hxPixels__$Pixels_Pixels_$Impl_$.__name__ = true;
hxPixels__$Pixels_Pixels_$Impl_$.applyToLuxeTexture = function(this1,texture) {
	var data = new haxe_io_Bytes(new ArrayBuffer(texture.width_actual * texture.height_actual * 4));
	var padded_width = texture.width_actual;
	var stride = this1.width * 4;
	var _g1 = 0;
	var _g = this1.height;
	while(_g1 < _g) {
		var y = _g1++;
		data.blit(y * padded_width * 4,this1.bytes,y * stride,stride);
	}
	texture.submit(new Uint8Array(data.b.bufferValue));
};
var hxPixels__$Pixels_PixelsData = function(width,height,alloc,format) {
	if(alloc == null) {
		alloc = true;
	}
	this.uint32Array = null;
	this.uint8Array = null;
	this.count = width * height;
	if(alloc) {
		this.set_bytes(new haxe_io_Bytes(new ArrayBuffer(this.count << 2)));
	}
	this.width = width;
	this.height = height;
	this.format = format != null ? format : hxPixels_PixelFormat.ARGB;
};
$hxClasses["hxPixels._Pixels.PixelsData"] = hxPixels__$Pixels_PixelsData;
hxPixels__$Pixels_PixelsData.__name__ = true;
hxPixels__$Pixels_PixelsData.prototype = {
	set_bytes: function(bytes) {
		this.bytes = bytes;
		this.uint8Array = haxe_io__$UInt8Array_UInt8Array_$Impl_$.fromBytes(bytes);
		this.uint32Array = haxe_io__$UInt32Array_UInt32Array_$Impl_$.fromBytes(bytes);
		return this.bytes;
	}
	,__class__: hxPixels__$Pixels_PixelsData
	,__properties__: {set_bytes:"set_bytes"}
};
var hxPixels_PixelFormat = $hx_exports["hxPixels"]["PixelFormat"] = function(a,r,g,b,name) {
	if(name == null) {
		name = "PixelFormat";
	}
	this.channelMap = [a,r,g,b];
	this.ch0 = a;
	this.ch1 = r;
	this.ch2 = g;
	this.ch3 = b;
	this.name = name;
};
$hxClasses["hxPixels.PixelFormat"] = hxPixels_PixelFormat;
hxPixels_PixelFormat.__name__ = true;
hxPixels_PixelFormat.prototype = {
	__class__: hxPixels_PixelFormat
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = true;
js_Boot.__unhtml = function(s) {
	return s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
};
js_Boot.__trace = function(v,i) {
	var msg = i != null ? i.fileName + ":" + i.lineNumber + ": " : "";
	msg += js_Boot.__string_rec(v,"");
	if(i != null && i.customParams != null) {
		var _g = 0;
		var _g1 = i.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			msg += "," + js_Boot.__string_rec(v1,"");
		}
	}
	var d;
	var tmp;
	if(typeof(document) != "undefined") {
		d = document.getElementById("haxe:trace");
		tmp = d != null;
	} else {
		tmp = false;
	}
	if(tmp) {
		d.innerHTML += js_Boot.__unhtml(msg) + "<br/>";
	} else if(typeof console != "undefined" && console.log != null) {
		console.log(msg);
	}
};
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = intf[_g1++];
			if(i == cl || js_Boot.__interfLoop(i,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_html__$CanvasElement_CanvasUtil = function() { };
$hxClasses["js.html._CanvasElement.CanvasUtil"] = js_html__$CanvasElement_CanvasUtil;
js_html__$CanvasElement_CanvasUtil.__name__ = true;
js_html__$CanvasElement_CanvasUtil.getContextWebGL = function(canvas,attribs) {
	var _g = 0;
	var _g1 = ["webgl","experimental-webgl"];
	while(_g < _g1.length) {
		var name = _g1[_g];
		++_g;
		var ctx = canvas.getContext(name,attribs);
		if(ctx != null) {
			return ctx;
		}
	}
	return null;
};
var js_html_compat_ArrayBuffer = function(a) {
	if((a instanceof Array) && a.__enum__ == null) {
		this.a = a;
		this.byteLength = a.length;
	} else {
		var len = a;
		this.a = [];
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) this.a[_g1++] = 0;
		this.byteLength = len;
	}
};
$hxClasses["js.html.compat.ArrayBuffer"] = js_html_compat_ArrayBuffer;
js_html_compat_ArrayBuffer.__name__ = true;
js_html_compat_ArrayBuffer.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null ? null : end - begin);
	var result = new ArrayBuffer(u.byteLength);
	new Uint8Array(result).set(u);
	return result;
};
js_html_compat_ArrayBuffer.prototype = {
	slice: function(begin,end) {
		return new js_html_compat_ArrayBuffer(this.a.slice(begin,end));
	}
	,__class__: js_html_compat_ArrayBuffer
};
var js_html_compat_Float32Array = function() { };
$hxClasses["js.html.compat.Float32Array"] = js_html_compat_Float32Array;
js_html_compat_Float32Array.__name__ = true;
js_html_compat_Float32Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = 0;
		var _g2 = [];
		var _g21 = 0;
		var _g11 = arr.length << 2;
		while(_g21 < _g11) {
			var i1 = _g21++;
			_g2.push(0);
		}
		arr.buffer = new js_html_compat_ArrayBuffer(_g2);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset >> 2;
		}
		arr = [];
		var _g12 = 0;
		var _g3 = length;
		while(_g12 < _g3) {
			var i2 = _g12++;
			var val = buffer.a[offset++] | buffer.a[offset++] << 8 | buffer.a[offset++] << 16 | buffer.a[offset++] << 24;
			arr.push(haxe_io_FPHelper.i32ToFloat(val));
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		var buffer1 = [];
		var _g4 = 0;
		while(_g4 < arr.length) {
			var f = arr[_g4];
			++_g4;
			var i3 = haxe_io_FPHelper.floatToI32(f);
			buffer1.push(i3 & 255);
			buffer1.push(i3 >> 8 & 255);
			buffer1.push(i3 >> 16 & 255);
			buffer1.push(i3 >>> 24);
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(buffer1);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Float32Array._subarray;
	arr.set = js_html_compat_Float32Array._set;
	return arr;
};
js_html_compat_Float32Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Float32Array._subarray = function(start,end) {
	var a = js_html_compat_Float32Array._new(this.slice(start,end));
	a.byteOffset = start * 4;
	return a;
};
var js_html_compat_Uint8Array = function() { };
$hxClasses["js.html.compat.Uint8Array"] = js_html_compat_Uint8Array;
js_html_compat_Uint8Array.__name__ = true;
js_html_compat_Uint8Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset;
		}
		if(offset == 0) {
			arr = buffer.a;
		} else {
			arr = buffer.a.slice(offset,offset + length);
		}
		arr.byteLength = arr.length;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Uint8Array._subarray;
	arr.set = js_html_compat_Uint8Array._set;
	return arr;
};
js_html_compat_Uint8Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Uint8Array._subarray = function(start,end) {
	var a = js_html_compat_Uint8Array._new(this.slice(start,end));
	a.byteOffset = start;
	return a;
};
var luxe_Audio = function(_core) {
	this.core = _core;
};
$hxClasses["luxe.Audio"] = luxe_Audio;
luxe_Audio.__name__ = true;
luxe_Audio.prototype = {
	__class__: luxe_Audio
};
var luxe_SizeMode = { __ename__ : true, __constructs__ : ["fit","cover","contain"] };
luxe_SizeMode.fit = ["fit",0];
luxe_SizeMode.fit.toString = $estr;
luxe_SizeMode.fit.__enum__ = luxe_SizeMode;
luxe_SizeMode.cover = ["cover",1];
luxe_SizeMode.cover.toString = $estr;
luxe_SizeMode.cover.__enum__ = luxe_SizeMode;
luxe_SizeMode.contain = ["contain",2];
luxe_SizeMode.contain.toString = $estr;
luxe_SizeMode.contain.__enum__ = luxe_SizeMode;
var luxe_Emitter = function() {
	this._checking = false;
	this._to_remove = new List();
	this.connected = new List();
	this.bindings = new haxe_ds_IntMap();
};
$hxClasses["luxe.Emitter"] = luxe_Emitter;
luxe_Emitter.__name__ = true;
luxe_Emitter.prototype = {
	_emitter_destroy: function() {
		while(this._to_remove.length > 0) {
			var _node = this._to_remove.pop();
			_node.event = null;
			_node.handler = null;
			_node = null;
		}
		while(this.connected.length > 0) {
			var _node1 = this.connected.pop();
			_node1.event = null;
			_node1.handler = null;
			_node1 = null;
		}
		this._to_remove = null;
		this.connected = null;
		this.bindings = null;
	}
	,emit: function(event,data) {
		if(this.bindings == null) {
			return;
		}
		this._check();
		this._checking = true;
		var _list = this.bindings.h[event];
		if(_list != null && _list.length > 0) {
			var _g = 0;
			while(_g < _list.length) {
				var handler = _list[_g];
				++_g;
				handler(data);
			}
		}
		this._checking = false;
		this._check();
	}
	,on: function(event,handler) {
		if(this.bindings == null) {
			return;
		}
		this._check();
		if(!this.bindings.h.hasOwnProperty(event)) {
			this.bindings.h[event] = [handler];
			this.connected.push({ handler : handler, event : event});
		} else {
			var _list = this.bindings.h[event];
			if(_list.indexOf(handler) == -1) {
				_list.push(handler);
				this.connected.push({ handler : handler, event : event});
			}
		}
	}
	,off: function(event,handler) {
		if(this.bindings == null) {
			return false;
		}
		this._check();
		var _success = false;
		if(this.bindings.h.hasOwnProperty(event)) {
			this._to_remove.push({ event : event, handler : handler});
			var _g_head = this.connected.h;
			while(_g_head != null) {
				var val = _g_head.item;
				_g_head = _g_head.next;
				if(val.event == event && val.handler == handler) {
					this.connected.remove(val);
				}
			}
			_success = true;
		}
		return _success;
	}
	,_check: function() {
		if(this._checking || this._to_remove == null) {
			return;
		}
		this._checking = true;
		if(this._to_remove.length > 0) {
			var _g_head = this._to_remove.h;
			while(_g_head != null) {
				var val = _g_head.item;
				_g_head = _g_head.next;
				var _list = this.bindings.h[val.event];
				if(_list != null) {
					HxOverrides.remove(_list,val.handler);
					if(_list.length == 0) {
						this.bindings.remove(val.event);
					}
				}
			}
			this._to_remove = null;
			this._to_remove = new List();
		}
		this._checking = false;
	}
	,__class__: luxe_Emitter
};
var luxe_Objects = function(_name,_id) {
	if(_id == null) {
		_id = "";
	}
	if(_name == null) {
		_name = "";
	}
	this.name = "";
	this.id = "";
	luxe_Emitter.call(this);
	this.set_name(_name);
	this.set_id(_id == "" ? Luxe.utils.uniqueid() : _id);
};
$hxClasses["luxe.Objects"] = luxe_Objects;
luxe_Objects.__name__ = true;
luxe_Objects.__super__ = luxe_Emitter;
luxe_Objects.prototype = $extend(luxe_Emitter.prototype,{
	set_name: function(_name) {
		return this.name = _name;
	}
	,set_id: function(_id) {
		return this.id = _id;
	}
	,get_name: function() {
		return this.name;
	}
	,get_id: function() {
		return this.id;
	}
	,__class__: luxe_Objects
	,__properties__: {set_name:"set_name",get_name:"get_name",set_id:"set_id",get_id:"get_id"}
});
var luxe_Entity = function(_options) {
	this.component_count = 0;
	this.active = true;
	this.fixed_rate = 0;
	this.started = false;
	this.inited = false;
	this.destroyed = false;
	luxe_Objects.call(this,"entity");
	var _g = this;
	_g.set_name(_g.get_name() + ("." + this.get_id()));
	this.options = _options;
	this._components = new luxe_components_Components(this);
	this.children = [];
	this.events = new luxe_Events();
	if(this.options != null && this.options.transform != null) {
		this.set_transform(this.options.transform);
	} else {
		this.set_transform(new phoenix_Transform());
	}
	var _this = this.get_transform();
	if(_this._pos_handlers == null) {
		_this._pos_handlers = [];
	}
	_this._pos_handlers.push($bind(this,this.set_pos_from_transform));
	var _this1 = this.get_transform();
	if(_this1._scale_handlers == null) {
		_this1._scale_handlers = [];
	}
	_this1._scale_handlers.push($bind(this,this.set_scale_from_transform));
	var _this2 = this.get_transform();
	if(_this2._origin_handlers == null) {
		_this2._origin_handlers = [];
	}
	_this2._origin_handlers.push($bind(this,this.set_origin_from_transform));
	var _this3 = this.get_transform();
	if(_this3._parent_handlers == null) {
		_this3._parent_handlers = [];
	}
	_this3._parent_handlers.push($bind(this,this.set_parent_from_transform));
	var _this4 = this.get_transform();
	if(_this4._rotation_handlers == null) {
		_this4._rotation_handlers = [];
	}
	_this4._rotation_handlers.push($bind(this,this.set_rotation_from_transform));
	if(this.options != null) {
		if(this.options.name_unique == null) {
			this.options.name_unique = false;
		}
		if(this.options.name != null) {
			this.set_name(this.options.name);
			if(this.options.name_unique) {
				var _g1 = this;
				_g1.set_name(_g1.get_name() + ("." + this.get_id()));
			}
		}
		if(this.options.pos != null) {
			var _op = this.options.pos;
			this.set_pos(new phoenix_Vector(_op.x,_op.y,_op.z,_op.w));
		}
		if(this.options.scale != null) {
			var _os = this.options.scale;
			this.set_scale(new phoenix_Vector(_os.x,_os.y,_os.z,_os.w));
		}
		var _should_add = true;
		if(this.options.no_scene != null) {
			if(this.options.no_scene == true) {
				_should_add = false;
			}
		}
		if(this.options.parent != null) {
			_should_add = false;
			this.set_parent(this.options.parent);
		}
		if(_should_add) {
			if(this.options.scene != null) {
				this.set_scene(this.options.scene);
			} else {
				this.set_scene(Luxe.scene);
			}
		}
	} else {
		this.set_scene(Luxe.scene);
	}
	if(this.get_scene() != null) {
		this.get_scene().add(this);
	}
};
$hxClasses["luxe.Entity"] = luxe_Entity;
luxe_Entity.__name__ = true;
luxe_Entity.__super__ = luxe_Objects;
luxe_Entity.prototype = $extend(luxe_Objects.prototype,{
	init: function() {
	}
	,update: function(dt) {
	}
	,ondestroy: function() {
	}
	,_init: function() {
		var _g_index;
		this.init();
		this.emit(2);
		if(this.component_count > 0) {
			var _this = this._components.components;
			_g_index = 0;
			while(_g_index < _this._keys.length) _this.map.get(_this._keys[_g_index++]);
		}
		if(this.children.length > 0) {
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var _child = _g1[_g];
				++_g;
				_child._init();
			}
		}
		this.inited = true;
	}
	,_reset: function(_) {
		var _g_index;
		this.emit(3);
		if(this.component_count > 0) {
			var _this = this._components.components;
			_g_index = 0;
			while(_g_index < _this._keys.length) _this.map.get(_this._keys[_g_index++]);
		}
		if(this.children.length > 0) {
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var _child = _g1[_g];
				++_g;
				_child._reset(_);
			}
		}
		var _rate = this.fixed_rate;
		if(this.fixed_rate_timer != null) {
			this.fixed_rate_timer.stop();
			this.fixed_rate_timer = null;
		}
		if(_rate != 0 && this.get_parent() == null && !this.destroyed) {
			this.fixed_rate_timer = new snow_api_Timer(_rate);
			this.fixed_rate_timer.run = $bind(this,this._fixed_update);
		}
		this.started = true;
	}
	,destroy: function(_from_parent) {
		if(_from_parent == null) {
			_from_parent = false;
		}
		var _g_index;
		if(this.destroyed != false) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("destroyed == false" + (" ( " + ("entity / destroying repeatedly " + this.get_name()) + " )")));
		}
		if(this.children.length > 0) {
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var _child = _g1[_g];
				++_g;
				_child.destroy(true);
				_child = null;
			}
		}
		if(this.component_count > 0) {
			var _this = this._components.components;
			_g_index = 0;
			while(_g_index < _this._keys.length) {
				var _component = _this.map.get(_this._keys[_g_index++]);
				_component = null;
			}
		}
		this.children = null;
		this._components.destroy();
		this._components = null;
		this.emit(8);
		this.ondestroy();
		if(this.get_parent() != null && !_from_parent) {
			this.get_parent()._remove_child(this);
		}
		if(this.fixed_rate_timer != null) {
			this.fixed_rate_timer.stop();
			this.fixed_rate_timer = null;
		}
		this.destroyed = true;
		this.inited = false;
		this.started = false;
		if(this.get_scene() != null) {
			this.get_scene().remove(this);
		}
		if(this.events != null) {
			this.events.destroy();
			this.events = null;
		}
		if(this.get_transform() != null) {
			this.get_transform().destroy();
			this.set_transform(null);
		}
		this._emitter_destroy();
		this.set_id(null);
	}
	,_update: function(dt) {
		var _g_index;
		if(this.destroyed) {
			return;
		}
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		var _this = this.get_transform();
		if(_this.parent != null && _this.parent.dirty) {
			_this.parent.clean_check();
		}
		if(_this.dirty && !_this._cleaning && !_this.manual_update) {
			_this.clean();
		}
		this.update(dt);
		if(this.events != null) {
			this.events.process();
		}
		if(this.component_count > 0) {
			var _this1 = this._components.components;
			_g_index = 0;
			while(_g_index < _this1._keys.length) _this1.map.get(_this1._keys[_g_index++]);
		}
		if(this.children != null && this.children.length > 0) {
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var _child = _g1[_g];
				++_g;
				_child._update(dt);
			}
		}
	}
	,_fixed_update: function() {
		var _g_index;
		if(this.destroyed) {
			return;
		}
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(7);
		if(this.component_count > 0) {
			var _this = this._components.components;
			_g_index = 0;
			while(_g_index < _this._keys.length) _this.map.get(_this._keys[_g_index++]);
		}
		if(this.children.length > 0) {
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var _child = _g1[_g];
				++_g;
				_child._fixed_update();
			}
		}
	}
	,_detach_scene: function() {
		if(this.get_scene() != null) {
			this.get_scene().off(3,$bind(this,this._reset));
			this.get_scene().off(8,$bind(this,this.destroy));
			this.get_scene().off(13,$bind(this,this._keyup));
			this.get_scene().off(12,$bind(this,this._keydown));
			this.get_scene().off(14,$bind(this,this._textinput));
			this.get_scene().off(17,$bind(this,this._mousedown));
			this.get_scene().off(18,$bind(this,this._mouseup));
			this.get_scene().off(19,$bind(this,this._mousemove));
			this.get_scene().off(20,$bind(this,this._mousewheel));
			this.get_scene().off(21,$bind(this,this._touchdown));
			this.get_scene().off(22,$bind(this,this._touchup));
			this.get_scene().off(23,$bind(this,this._touchmove));
			this.get_scene().off(16,$bind(this,this._inputup));
			this.get_scene().off(15,$bind(this,this._inputdown));
			this.get_scene().off(25,$bind(this,this._gamepaddown));
			this.get_scene().off(26,$bind(this,this._gamepadup));
			this.get_scene().off(24,$bind(this,this._gamepadaxis));
			this.get_scene().off(27,$bind(this,this._gamepaddevice));
			this.get_scene().off(29,$bind(this,this._windowmoved));
			this.get_scene().off(30,$bind(this,this._windowresized));
			this.get_scene().off(31,$bind(this,this._windowsized));
			this.get_scene().off(32,$bind(this,this._windowminimized));
			this.get_scene().off(33,$bind(this,this._windowrestored));
		}
	}
	,_attach_scene: function() {
		if(this.get_scene() != null) {
			this.get_scene().on(3,$bind(this,this._reset));
			this.get_scene().on(8,$bind(this,this.destroy));
		}
	}
	,_keyup: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(13,_event);
	}
	,_keydown: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(12,_event);
	}
	,_textinput: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(14,_event);
	}
	,_mousedown: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(17,_event);
	}
	,_mouseup: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(18,_event);
	}
	,_mousewheel: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(20,_event);
	}
	,_mousemove: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(19,_event);
	}
	,_touchdown: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(21,_event);
	}
	,_touchup: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(22,_event);
	}
	,_touchmove: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(23,_event);
	}
	,_gamepadaxis: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(24,_event);
	}
	,_gamepaddown: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(25,_event);
	}
	,_gamepadup: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(26,_event);
	}
	,_gamepaddevice: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(27,_event);
	}
	,_windowmoved: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(29,_event);
	}
	,_windowresized: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(30,_event);
	}
	,_windowsized: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(31,_event);
	}
	,_windowminimized: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(32,_event);
	}
	,_windowrestored: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(33,_event);
	}
	,_inputdown: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(15,_event);
	}
	,_inputup: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) {
			return;
		}
		this.emit(16,_event);
	}
	,_add_child: function(child) {
		this.children.push(child);
		child.set_scene_root(this.scene_root);
		if(child.get_scene() != null) {
			child.get_scene().remove(child);
		} else {
			if(this.inited && !child.inited) {
				this.scene_root._delayed_init_entities.push(child);
			}
			if(this.started && !child.started) {
				this.scene_root._delayed_reset_entities.push(child);
			}
		}
	}
	,_remove_child: function(child) {
		HxOverrides.remove(this.children,child);
	}
	,set_pos_from_transform: function(_pos) {
		var _g_index;
		if(this.component_count > 0) {
			var _this = this._components.components;
			_g_index = 0;
			while(_g_index < _this._keys.length) _this.map.get(_this._keys[_g_index++]);
		}
	}
	,set_rotation_from_transform: function(_rotation) {
		var _g_index;
		if(this.component_count > 0) {
			var _this = this._components.components;
			_g_index = 0;
			while(_g_index < _this._keys.length) _this.map.get(_this._keys[_g_index++]);
		}
	}
	,set_scale_from_transform: function(_scale) {
		var _g_index;
		if(this.component_count > 0) {
			var _this = this._components.components;
			_g_index = 0;
			while(_g_index < _this._keys.length) _this.map.get(_this._keys[_g_index++]);
		}
	}
	,set_origin_from_transform: function(_origin) {
		var _g_index;
		if(this.component_count > 0) {
			var _this = this._components.components;
			_g_index = 0;
			while(_g_index < _this._keys.length) _this.map.get(_this._keys[_g_index++]);
		}
	}
	,set_parent_from_transform: function(_parent) {
		var _g_index;
		if(this.component_count > 0) {
			var _this = this._components.components;
			_g_index = 0;
			while(_g_index < _this._keys.length) _this.map.get(_this._keys[_g_index++]);
		}
	}
	,set_pos: function(_p) {
		var _this = this.get_transform().local;
		_this.pos = _p;
		if(_p != null) {
			var _v = _this.pos;
			var listener = $bind(_this,_this._pos_change);
			_v.listen_x = listener;
			_v.listen_y = listener;
			_v.listen_z = listener;
			if(_this.pos_changed != null && !_this.ignore_listeners) {
				_this.pos_changed(_this.pos);
			}
		}
		return _this.pos;
	}
	,get_pos: function() {
		return this.get_transform().local.pos;
	}
	,set_rotation: function(_r) {
		var _this = this.get_transform().local;
		_this.rotation = _r;
		if(_r != null) {
			var _q = _this.rotation;
			var listener = $bind(_this,_this._rotation_change);
			_q.listen_x = listener;
			_q.listen_y = listener;
			_q.listen_z = listener;
			_q.listen_w = listener;
			if(_this.rotation_changed != null && !_this.ignore_listeners) {
				_this.rotation_changed(_this.rotation);
			}
		}
		return _this.rotation;
	}
	,set_scale: function(_s) {
		var _this = this.get_transform().local;
		_this.scale = _s;
		if(_s != null) {
			var _v = _this.scale;
			var listener = $bind(_this,_this._scale_change);
			_v.listen_x = listener;
			_v.listen_y = listener;
			_v.listen_z = listener;
			if(_this.scale_changed != null && !_this.ignore_listeners) {
				_this.scale_changed(_this.scale);
			}
		}
		return _this.scale;
	}
	,set_origin: function(_origin) {
		var _this = this.get_transform();
		_this.dirty = true;
		if(_this.dirty && !_this._setup && _this._dirty_handlers != null && _this._dirty_handlers.length > 0) {
			var _g = 0;
			var _g1 = _this._dirty_handlers;
			while(_g < _g1.length) {
				var _handler = _g1[_g];
				++_g;
				if(_handler != null) {
					_handler(_this);
				}
			}
		}
		_this.origin = _origin;
		if(_this._origin_handlers != null && _this._origin_handlers.length > 0) {
			var _origin1 = _this.origin;
			var _g2 = 0;
			var _g11 = _this._origin_handlers;
			while(_g2 < _g11.length) {
				var _handler1 = _g11[_g2];
				++_g2;
				if(_handler1 != null) {
					_handler1(_origin1);
				}
			}
		}
		return _this.origin;
	}
	,set_transform: function(_transform) {
		return this.transform = _transform;
	}
	,get_transform: function() {
		return this.transform;
	}
	,set_parent: function(other) {
		if(other == this) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("other != this" + (" ( " + "Entity setting itself as parent makes no sense" + " )")));
		}
		if(this.get_parent() != null) {
			this.get_parent()._remove_child(this);
		}
		this.parent = other;
		if(this.get_parent() != null) {
			this.get_parent()._add_child(this);
			var _this = this.get_transform();
			var _p = this.get_parent().get_transform();
			_this.dirty = true;
			if(_this.dirty && !_this._setup && _this._dirty_handlers != null && _this._dirty_handlers.length > 0) {
				var _g = 0;
				var _g1 = _this._dirty_handlers;
				while(_g < _g1.length) {
					var _handler = _g1[_g];
					++_g;
					if(_handler != null) {
						_handler(_this);
					}
				}
			}
			if(_this.parent != null) {
				var _this1 = _this.parent;
				if(_this1._clean_handlers != null) {
					HxOverrides.remove(_this1._clean_handlers,$bind(_this,_this.on_parent_cleaned));
				}
			}
			_this.parent = _p;
			if(_this._parent_handlers != null && _this._parent_handlers.length > 0) {
				var _parent = _this.parent;
				var _g2 = 0;
				var _g11 = _this._parent_handlers;
				while(_g2 < _g11.length) {
					var _handler1 = _g11[_g2];
					++_g2;
					if(_handler1 != null) {
						_handler1(_parent);
					}
				}
			}
			if(_this.parent != null) {
				var _this2 = _this.parent;
				if(_this2._clean_handlers == null) {
					_this2._clean_handlers = [];
				}
				_this2._clean_handlers.push($bind(_this,_this.on_parent_cleaned));
			}
		} else {
			var _this3 = this.get_transform();
			_this3.dirty = true;
			if(_this3.dirty && !_this3._setup && _this3._dirty_handlers != null && _this3._dirty_handlers.length > 0) {
				var _g3 = 0;
				var _g12 = _this3._dirty_handlers;
				while(_g3 < _g12.length) {
					var _handler2 = _g12[_g3];
					++_g3;
					if(_handler2 != null) {
						_handler2(_this3);
					}
				}
			}
			if(_this3.parent != null) {
				var _this4 = _this3.parent;
				if(_this4._clean_handlers != null) {
					HxOverrides.remove(_this4._clean_handlers,$bind(_this3,_this3.on_parent_cleaned));
				}
			}
			_this3.parent = null;
			if(_this3._parent_handlers != null && _this3._parent_handlers.length > 0) {
				var _parent1 = _this3.parent;
				var _g4 = 0;
				var _g13 = _this3._parent_handlers;
				while(_g4 < _g13.length) {
					var _handler3 = _g13[_g4];
					++_g4;
					if(_handler3 != null) {
						_handler3(_parent1);
					}
				}
			}
			if(_this3.parent != null) {
				var _this5 = _this3.parent;
				if(_this5._clean_handlers == null) {
					_this5._clean_handlers = [];
				}
				_this5._clean_handlers.push($bind(_this3,_this3.on_parent_cleaned));
			}
			this.scene_root.add(this);
		}
		return this.get_parent();
	}
	,get_parent: function() {
		return this.parent;
	}
	,set_scene: function(_scene) {
		this._detach_scene();
		this.scene = _scene;
		this._attach_scene();
		return this.get_scene();
	}
	,get_scene: function() {
		return this.scene;
	}
	,set_scene_root: function(_scene) {
		this.scene_root = _scene;
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var _child = _g1[_g];
			++_g;
			_child.set_scene_root(_scene);
		}
		return this.scene_root;
	}
	,set_name: function(_name) {
		var _scene = this.get_scene();
		if(_scene != null && this.get_name() != null) {
			_scene.entities.remove(this.get_name());
			if(_scene.entities.exists(_name)) {
				haxe_Log.trace("    i / scene / " + ("" + _scene.get_name() + " / adding a second entity named " + _name + "!\n                This will replace the existing one, possibly leaving the previous one in limbo."),{ fileName : "Scene.hx", lineNumber : 96, className : "luxe.Scene", methodName : "handle_duplicate_warning"});
			}
			var _this = _scene.entities;
			if(__map_reserved[_name] != null) {
				_this.setReserved(_name,this);
			} else {
				_this.h[_name] = this;
			}
			_scene._has_changed = true;
		}
		return this.name = _name;
	}
	,get_active: function() {
		return this.active;
	}
	,__class__: luxe_Entity
	,__properties__: $extend(luxe_Objects.prototype.__properties__,{set_scene_root:"set_scene_root",set_origin:"set_origin",set_scale:"set_scale",set_rotation:"set_rotation",set_pos:"set_pos",get_pos:"get_pos",set_transform:"set_transform",get_transform:"get_transform",get_active:"get_active",set_scene:"set_scene",get_scene:"get_scene",set_parent:"set_parent",get_parent:"get_parent"})
});
var luxe_Camera = function(_options) {
	this._connected = false;
	this.minimum_shake = 0.1;
	this.shaking = false;
	this._size_factor = new phoenix_Vector();
	this._rotation_radian = new phoenix_Vector();
	this._rotation_cache = new phoenix_Quaternion();
	this.set_size_mode(luxe_SizeMode.fit);
	var _name = "untitled camera";
	if(_options != null) {
		if(_options.name != null) {
			_name = _options.name;
			_options.camera_name = "" + _name + ".view";
		}
	} else {
		_options = { no_scene : false};
	}
	if(_options.view == null) {
		_options.view = new phoenix_Camera(_options);
	}
	this.view = _options.view;
	luxe_Entity.call(this,{ name : _name, no_scene : _options.no_scene});
};
$hxClasses["luxe.Camera"] = luxe_Camera;
luxe_Camera.__name__ = true;
luxe_Camera.__super__ = luxe_Entity;
luxe_Camera.prototype = $extend(luxe_Entity.prototype,{
	get_viewport: function() {
		return this.view.viewport;
	}
	,set_viewport: function(_v) {
		return this.view.set_viewport(_v);
	}
	,set_center: function(_c) {
		this.set_pos(new phoenix_Vector(_c.x - this.get_viewport().w / 2,_c.y - this.get_viewport().h / 2));
		return this.view.set_center(_c);
	}
	,get_zoom: function() {
		return this.view.zoom;
	}
	,set_zoom: function(_z) {
		this.view.set_zoom(_z);
		if(this.get_size() != null) {
			var _g = this.view.transform.local.scale;
			var _x = _g.x * (1 / this._size_factor.x);
			_g.x = _x;
			if(!_g._construct) {
				if(_g.listen_x != null && !_g.ignore_listeners) {
					_g.listen_x(_x);
				}
			}
			var _g1 = this.view.transform.local.scale;
			var _y = _g1.y * (1 / this._size_factor.y);
			_g1.y = _y;
			if(!_g1._construct) {
				if(_g1.listen_y != null && !_g1.ignore_listeners) {
					_g1.listen_y(_y);
				}
			}
		}
		return this.view.zoom;
	}
	,get_size: function() {
		return this.size;
	}
	,get_size_mode: function() {
		return this.size_mode;
	}
	,set_size_mode: function(_m) {
		if(this.get_size_mode() != null) {
			this.size_mode = _m;
			if(this.get_size() != null) {
				this.set_size(this.get_size());
			}
		}
		return this.size_mode = _m;
	}
	,_onwindowsized: function(_event) {
		if(this.get_size() != null) {
			this.set_viewport(new phoenix_Rectangle(this.get_viewport().x,this.get_viewport().y,_event.x,_event.y));
			this.set_size(this.get_size());
		}
	}
	,set_size: function(_size) {
		if(_size == null) {
			this.set_center(new phoenix_Vector(this.get_viewport().w / 2,this.get_viewport().h / 2));
			this.size = null;
			var _this = this._size_factor;
			var _this1 = this._size_factor;
			_this1.y = 1;
			var _x;
			if(_this1._construct) {
				_x = _this1.y;
			} else {
				if(_this1.listen_y != null && !_this1.ignore_listeners) {
					_this1.listen_y(1);
				}
				_x = _this1.y;
			}
			_this.x = _x;
			if(!_this._construct) {
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_x);
				}
			}
			this.set_zoom(this.get_zoom());
			this._connected = false;
			Luxe.off(31,$bind(this,this._onwindowsized));
			return this.get_size();
		}
		if(!this._connected) {
			Luxe.on(31,$bind(this,this._onwindowsized));
			this._connected = true;
		}
		var _ratio_x = this.get_viewport().w / _size.x;
		var _ratio_y = this.get_viewport().h / _size.y;
		var _shortest = Math.max(_ratio_x,_ratio_y);
		var _longest = Math.min(_ratio_x,_ratio_y);
		switch(this.get_size_mode()[1]) {
		case 0:
			_ratio_y = _longest;
			_ratio_x = _longest;
			break;
		case 1:
			_ratio_y = _shortest;
			_ratio_x = _shortest;
			break;
		case 2:
			break;
		}
		var _this2 = this._size_factor;
		_this2.x = _ratio_x;
		if(!_this2._construct) {
			if(_this2.listen_x != null && !_this2.ignore_listeners) {
				_this2.listen_x(_ratio_x);
			}
		}
		var _this3 = this._size_factor;
		_this3.y = _ratio_y;
		if(!_this3._construct) {
			if(_this3.listen_y != null && !_this3.ignore_listeners) {
				_this3.listen_y(_ratio_y);
			}
		}
		var _this4 = this.view.transform.local.scale;
		var _x1 = 1 / (this._size_factor.x * this.get_zoom());
		_this4.x = _x1;
		if(!_this4._construct) {
			if(_this4.listen_x != null && !_this4.ignore_listeners) {
				_this4.listen_x(_x1);
			}
		}
		var _this5 = this.view.transform.local.scale;
		var _y = 1 / (this._size_factor.y * this.get_zoom());
		_this5.y = _y;
		if(!_this5._construct) {
			if(_this5.listen_y != null && !_this5.ignore_listeners) {
				_this5.listen_y(_y);
			}
		}
		this.set_center(new phoenix_Vector(_size.x / 2,_size.y / 2));
		return this.size = new phoenix_Vector(_size.x,_size.y,_size.z,_size.w);
	}
	,set_pos_from_transform: function(_pos) {
		var _vw = this.view.viewport.w;
		var _vh = this.view.viewport.h;
		var _hvw = _vw / 2;
		var _hvh = _vh / 2;
		var _px = _pos.x;
		var _py = _pos.y;
		if(this.bounds != null) {
			if(_px < this.bounds.x) {
				_px = this.bounds.x;
			}
			if(_py < this.bounds.y) {
				_py = this.bounds.y;
			}
			if(_px + _hvw > this.bounds.w - _vw) {
				_px = this.bounds.w - _vw - _hvw;
			}
			if(_py + _hvh > this.bounds.h - _vh) {
				_py = this.bounds.h - _vh - _hvh;
			}
		}
		var _prev = _pos.ignore_listeners;
		_pos.ignore_listeners = true;
		var prev = _pos.ignore_listeners;
		_pos.ignore_listeners = true;
		_pos.x = _px;
		if(!_pos._construct) {
			if(_pos.listen_x != null && !_pos.ignore_listeners) {
				_pos.listen_x(_px);
			}
		}
		_pos.y = _py;
		if(!_pos._construct) {
			if(_pos.listen_y != null && !_pos.ignore_listeners) {
				_pos.listen_y(_py);
			}
		}
		_pos.ignore_listeners = prev;
		if(_pos.listen_x != null && !_pos.ignore_listeners) {
			_pos.listen_x(_pos.x);
		}
		if(_pos.listen_y != null && !_pos.ignore_listeners) {
			_pos.listen_y(_pos.y);
		}
		_pos.ignore_listeners = _prev;
		luxe_Entity.prototype.set_pos_from_transform.call(this,_pos);
		var tmp = this.view;
		var _this = this.view.pos;
		var _x = _pos.x;
		var _y = _pos.y;
		var _z = _pos.z;
		var prev1 = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = _x;
		if(!_this._construct) {
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(_x);
			}
		}
		_this.y = _y;
		if(!_this._construct) {
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(_y);
			}
		}
		_this.z = _z;
		if(!_this._construct) {
			if(_this.listen_z != null && !_this.ignore_listeners) {
				_this.listen_z(_z);
			}
		}
		_this.ignore_listeners = prev1;
		if(_this.listen_x != null && !_this.ignore_listeners) {
			_this.listen_x(_this.x);
		}
		if(_this.listen_y != null && !_this.ignore_listeners) {
			_this.listen_y(_this.y);
		}
		if(_this.listen_z != null && !_this.ignore_listeners) {
			_this.listen_z(_this.z);
		}
		tmp.set_pos(_this);
	}
	,set_rotation_from_transform: function(_rotation) {
		luxe_Entity.prototype.set_rotation_from_transform.call(this,_rotation);
		if(this.view != null) {
			var _this = this.view.transform.local;
			_this.rotation = _rotation;
			if(_rotation != null) {
				var _q = _this.rotation;
				var listener = $bind(_this,_this._rotation_change);
				_q.listen_x = listener;
				_q.listen_y = listener;
				_q.listen_z = listener;
				_q.listen_w = listener;
				if(_this.rotation_changed != null && !_this.ignore_listeners) {
					_this.rotation_changed(_this.rotation);
				}
			}
		}
	}
	,set_scale_from_transform: function(_scale) {
		luxe_Entity.prototype.set_scale_from_transform.call(this,_scale);
		if(this.view != null) {
			var _this = this.view.transform.local;
			_this.scale = _scale;
			if(_scale != null) {
				var _v = _this.scale;
				var listener = $bind(_this,_this._scale_change);
				_v.listen_x = listener;
				_v.listen_y = listener;
				_v.listen_z = listener;
				if(_this.scale_changed != null && !_this.ignore_listeners) {
					_this.scale_changed(_this.scale);
				}
			}
		}
	}
	,update: function(dt) {
		if(this.shaking) {
			this.shake_vector = Luxe.utils.geometry.random_point_in_unit_circle();
			var _g = this.shake_vector;
			var _x = _g.x * this.shake_amount;
			_g.x = _x;
			if(!_g._construct) {
				if(_g.listen_x != null && !_g.ignore_listeners) {
					_g.listen_x(_x);
				}
			}
			var _g1 = this.shake_vector;
			var _y = _g1.y * this.shake_amount;
			_g1.y = _y;
			if(!_g1._construct) {
				if(_g1.listen_y != null && !_g1.ignore_listeners) {
					_g1.listen_y(_y);
				}
			}
			var _g2 = this.shake_vector;
			var _z = _g2.z * this.shake_amount;
			_g2.z = _z;
			if(!_g2._construct) {
				if(_g2.listen_z != null && !_g2.ignore_listeners) {
					_g2.listen_z(_z);
				}
			}
			this.shake_amount *= 0.9;
			if(this.shake_amount <= this.minimum_shake) {
				this.shake_amount = 0;
				this.shaking = false;
			}
			var tmp = this.view;
			var _this = this.view.pos;
			var _x1 = this.get_transform().local.pos.x + this.shake_vector.x;
			var _y1 = this.get_transform().local.pos.y + this.shake_vector.y;
			var _z1 = this.get_transform().local.pos.z + this.shake_vector.z;
			var prev = _this.ignore_listeners;
			_this.ignore_listeners = true;
			_this.x = _x1;
			if(!_this._construct) {
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_x1);
				}
			}
			_this.y = _y1;
			if(!_this._construct) {
				if(_this.listen_y != null && !_this.ignore_listeners) {
					_this.listen_y(_y1);
				}
			}
			_this.z = _z1;
			if(!_this._construct) {
				if(_this.listen_z != null && !_this.ignore_listeners) {
					_this.listen_z(_z1);
				}
			}
			_this.ignore_listeners = prev;
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(_this.x);
			}
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(_this.y);
			}
			if(_this.listen_z != null && !_this.ignore_listeners) {
				_this.listen_z(_this.z);
			}
			tmp.set_pos(_this);
		}
	}
	,init: function() {
		luxe_Entity.prototype.init.call(this);
	}
	,ondestroy: function() {
		luxe_Entity.prototype.ondestroy.call(this);
	}
	,__class__: luxe_Camera
	,__properties__: $extend(luxe_Entity.prototype.__properties__,{set_size_mode:"set_size_mode",get_size_mode:"get_size_mode",set_size:"set_size",get_size:"get_size",set_zoom:"set_zoom",get_zoom:"get_zoom",set_center:"set_center",set_viewport:"set_viewport",get_viewport:"get_viewport"})
});
var luxe_ID = function(_name,_id) {
	if(_id == null) {
		_id = "";
	}
	if(_name == null) {
		_name = "";
	}
	this.name = "";
	this.name = _name;
	this.id = _id == "" ? Luxe.utils.uniqueid() : _id;
};
$hxClasses["luxe.ID"] = luxe_ID;
luxe_ID.__name__ = true;
luxe_ID.prototype = {
	__class__: luxe_ID
};
var luxe_Component = function() { };
$hxClasses["luxe.Component"] = luxe_Component;
luxe_Component.__name__ = true;
luxe_Component.__super__ = luxe_ID;
luxe_Component.prototype = $extend(luxe_ID.prototype,{
	__class__: luxe_Component
});
var luxe_Debug = function(_app) {
	this.last_cursor_grab = false;
	this.last_view_index = 0;
	this.current_view_index = 0;
	this.dt_average_count = 0;
	this.dt_average_span = 60;
	this.dt_average_accum = 0;
	this.dt_average = 0;
	this.visible = false;
	this.app = _app;
};
$hxClasses["luxe.Debug"] = luxe_Debug;
luxe_Debug.__name__ = true;
luxe_Debug.internal_trace = function(_value,_info) {
	if(luxe_Debug.tracing != false) {
		throw new js__$Boot_HaxeError(luxe_DebugError.assertion("tracing == false" + (" ( " + "luxe.Debug: calling trace from a trace callback is an infinite loop!" + " )")));
	}
	luxe_Debug.tracing = true;
	var _out = "" + Std.string(_value);
	if(_info != null && _info.customParams != null) {
		_out += " " + _info.customParams.join(" ");
	}
	console.log("" + _info.fileName + "::" + StringTools.rpad(_info.lineNumber == null ? "null" : "" + _info.lineNumber," ",4) + " " + _out);
	if(!luxe_Debug.shut_down) {
		var _g = 0;
		var _g1 = luxe_Debug.trace_callbacks;
		while(_g < _g1.length) {
			var _callback = _g1[_g];
			++_g;
			_callback(_value,_info);
		}
	}
	luxe_Debug.tracing = false;
};
luxe_Debug.prototype = {
	get_view: function(_name) {
		var _g = 0;
		var _g1 = luxe_Debug.views;
		while(_g < _g1.length) {
			var view = _g1[_g];
			++_g;
			if(view.get_name() == _name) {
				return view;
			}
		}
		return null;
	}
	,start: function(_name,_max) {
		if(!this.app.headless) {
			luxe_debug_ProfilerDebugView.start(_name,_max);
		}
	}
	,end: function(_name) {
		if(!this.app.headless) {
			luxe_debug_ProfilerDebugView.end(_name);
		}
	}
	,init: function() {
		luxe_Debug.views = [];
		luxe_Debug.views.push(new luxe_debug_TraceDebugView(this));
		luxe_Debug.views.push(new luxe_debug_StatsDebugView(this));
		luxe_Debug.views.push(new luxe_debug_ProfilerDebugView(this));
		luxe_Debug.views.push(new luxe_debug_SceneDebugView(this));
		this.current_view = luxe_Debug.views[0];
		haxe_Log.trace = luxe_Debug.internal_trace;
	}
	,create_debug_console: function() {
		var _gthis = this;
		this.app.emitter.on(13,$bind(this,this.keyup));
		this.app.emitter.on(12,$bind(this,this.keydown));
		this.app.emitter.on(18,$bind(this,this.mouseup));
		this.app.emitter.on(17,$bind(this,this.mousedown));
		this.app.emitter.on(19,$bind(this,this.mousemove));
		this.app.emitter.on(20,$bind(this,this.mousewheel));
		this.app.emitter.on(22,$bind(this,this.touchup));
		this.app.emitter.on(21,$bind(this,this.touchdown));
		this.app.emitter.on(23,$bind(this,this.touchmove));
		this.batcher = new phoenix_Batcher(this.app.renderer,"debug_batcher",Math.floor(Math.pow(2,20)));
		this.batcher.set_show_stats(0);
		this.view = new phoenix_Camera({ camera_name : "debug_batcher_camera"});
		this.batcher.view = this.view;
		var _this = this.batcher;
		_this.layer = 999;
		_this.renderer.batchers.sort(($_=_this.renderer,$bind($_,$_.sort_batchers)));
		this.overlay = new phoenix_geometry_QuadGeometry({ id : "debug.overlay", x : 0, y : 0, w : this.app.screen.get_w(), h : this.app.screen.get_h(), color : new phoenix_Color(0,0,0,0.8), depth : 999, visible : false, batcher : this.batcher});
		this.overlay.set_locked(true);
		this.padding = new phoenix_Vector(this.app.screen.get_w() * 0.05,this.app.screen.get_h() * 0.05);
		this.inspector = new luxe_debug_Inspector({ pos : new phoenix_Vector(this.padding.x,this.padding.y), size : new phoenix_Vector(this.app.screen.get_w() - this.padding.x * 2,this.app.screen.get_h() - this.padding.y * 2), batcher : this.batcher});
		this.inspector.onrefresh = $bind(this,this.refresh);
		this.app.emitter.on(31,function(_event) {
			var _w = _event.x;
			var _h = _event.y;
			var _this1 = _gthis.padding;
			var _x = _w * 0.05;
			var _y = _h * 0.05;
			var prev = _this1.ignore_listeners;
			_this1.ignore_listeners = true;
			_this1.x = _x;
			if(!_this1._construct) {
				if(_this1.listen_x != null && !_this1.ignore_listeners) {
					_this1.listen_x(_x);
				}
			}
			_this1.y = _y;
			if(!_this1._construct) {
				if(_this1.listen_y != null && !_this1.ignore_listeners) {
					_this1.listen_y(_y);
				}
			}
			_this1.ignore_listeners = prev;
			if(_this1.listen_x != null && !_this1.ignore_listeners) {
				_this1.listen_x(_this1.x);
			}
			if(_this1.listen_y != null && !_this1.ignore_listeners) {
				_this1.listen_y(_this1.y);
			}
			_gthis.overlay.resize_xy(_w,_h);
			_gthis.view.set_viewport(new phoenix_Rectangle(0,0,_w,_h));
			_gthis.inspector.set_size(new phoenix_Vector(_w - _gthis.padding.x * 2,_h - _gthis.padding.y * 2));
			_gthis.inspector.set_pos(new phoenix_Vector(_gthis.padding.x,_gthis.padding.y));
			var _g = 0;
			var _g1 = luxe_Debug.views;
			while(_g < _g1.length) {
				var view = _g1[_g];
				++_g;
				view.onwindowsized(_event);
			}
		});
		var _g2 = 0;
		var _g11 = luxe_Debug.views;
		while(_g2 < _g11.length) {
			var view1 = _g11[_g2];
			++_g2;
			view1.create();
		}
	}
	,render: function() {
		if(this.visible) {
			this.start(luxe_Debug.debug_batch_tag);
			var _this = this.batcher;
			if(_this.name != "") {
				Luxe.debug.start(_this.name);
			}
			_this.draw_calls = 0;
			_this.vert_count = 0;
			_this.emitter.emit(1,_this);
			_this.view.process();
			_this.renderer.state.viewport(_this.view.viewport.x,_this.view.viewport.y,_this.view.viewport.w,_this.view.viewport.h);
			_this.batch(false);
			_this.emitter.emit(2,_this);
			var _stats = _this.renderer.stats;
			var _node = _this.geometry.root;
			_stats.geometry_count += (_node == null ? 0 : _node.nodecount) * _this.show_stats;
			_stats.dynamic_batched_count += _this.dynamic_batched_count * _this.show_stats;
			_stats.static_batched_count += _this.static_batched_count * _this.show_stats;
			_stats.visible_count += _this.visible_count * _this.show_stats;
			_stats.draw_calls += _this.draw_calls * _this.show_stats;
			_stats.vert_count += _this.vert_count * _this.show_stats;
			if(_this.name != "") {
				Luxe.debug.end(_this.name);
			}
			this.end(luxe_Debug.debug_batch_tag);
		}
	}
	,mouseup: function(e) {
		if(this.visible) {
			var _g = 0;
			var _g1 = luxe_Debug.views;
			while(_g < _g1.length) ++_g;
		}
	}
	,mousedown: function(e) {
		if(this.visible) {
			var _g = 0;
			var _g1 = luxe_Debug.views;
			while(_g < _g1.length) ++_g;
		}
	}
	,mousemove: function(e) {
		if(this.visible) {
			var _g = 0;
			var _g1 = luxe_Debug.views;
			while(_g < _g1.length) ++_g;
		}
	}
	,mousewheel: function(e) {
		if(this.visible) {
			var _g = 0;
			var _g1 = luxe_Debug.views;
			while(_g < _g1.length) {
				var view = _g1[_g];
				++_g;
				view.onmousewheel(e);
			}
		}
	}
	,touchup: function(e) {
		if(this.visible) {
			var _g = 0;
			var _g1 = luxe_Debug.views;
			while(_g < _g1.length) ++_g;
		}
	}
	,touchdown: function(e) {
		if(this.visible) {
			var _g = 0;
			var _g1 = luxe_Debug.views;
			while(_g < _g1.length) ++_g;
		}
	}
	,touchmove: function(e) {
		if(this.visible) {
			var _g = 0;
			var _g1 = luxe_Debug.views;
			while(_g < _g1.length) ++_g;
		}
	}
	,keyup: function(e) {
		if(this.visible) {
			var _g = 0;
			var _g1 = luxe_Debug.views;
			while(_g < _g1.length) ++_g;
		}
	}
	,keydown: function(e) {
		if(e.scancode == 53) {
			this.set_visible(!this.visible);
		}
		if(this.visible) {
			if(e.keycode == 49 && this.visible) {
				this.switch_view();
			}
			var _g = 0;
			var _g1 = luxe_Debug.views;
			while(_g < _g1.length) {
				var view = _g1[_g];
				++_g;
				view.onkeydown(e);
			}
		}
	}
	,refresh: function() {
		if(this.current_view != null) {
			this.current_view.refresh();
		}
	}
	,switch_view: function() {
		this.last_view_index = this.current_view_index;
		this.current_view_index++;
		if(this.current_view_index > luxe_Debug.views.length - 1) {
			this.current_view_index = 0;
		}
		luxe_Debug.views[this.last_view_index].hide();
		this.current_view = luxe_Debug.views[this.current_view_index];
		this.current_view.show();
	}
	,set_visible: function(_value) {
		this.visible = _value;
		this.overlay.set_visible(this.visible);
		if(this.visible) {
			this.last_cursor_grab = this.app.screen.cursor.get_grab();
			this.app.screen.cursor.set_grab(false);
			this.current_view.show();
			this.inspector.show();
		} else {
			if(this.last_cursor_grab != false) {
				this.app.screen.cursor.set_grab(this.last_cursor_grab);
			}
			this.current_view.hide();
			this.inspector.hide();
		}
		return this.visible;
	}
	,destroy: function() {
		this.app.emitter.off(13,$bind(this,this.keyup));
		this.app.emitter.off(12,$bind(this,this.keydown));
		this.app.emitter.off(18,$bind(this,this.mouseup));
		this.app.emitter.off(17,$bind(this,this.mousedown));
		this.app.emitter.off(19,$bind(this,this.mousemove));
		this.app.emitter.off(20,$bind(this,this.mousewheel));
		luxe_Debug.shut_down = true;
	}
	,process: function() {
		this.dt_average_accum += this.app.frame_delta;
		this.dt_average_count++;
		if(this.dt_average_count == this.dt_average_span - 1) {
			this.dt_average = this.dt_average_accum / this.dt_average_span;
			this.dt_average_accum = this.dt_average;
			this.dt_average_count = 0;
		}
		if(!this.visible) {
			return;
		}
		var n = Math.pow(10,5);
		var n1 = Math.pow(10,5);
		this.inspector.title.set_text("[" + this.current_view.get_name() + "] / " + Math.round(1 / this.dt_average) + " / " + (this.app.frame_delta * n | 0) / n + " / " + (this.dt_average * n1 | 0) / n1);
		var _g = 0;
		var _g1 = luxe_Debug.views;
		while(_g < _g1.length) {
			var view = _g1[_g];
			++_g;
			view.process();
		}
	}
	,__class__: luxe_Debug
	,__properties__: {set_visible:"set_visible"}
};
var luxe_Draw = function(_core) {
	this.core = _core;
};
$hxClasses["luxe.Draw"] = luxe_Draw;
luxe_Draw.__name__ = true;
luxe_Draw.prototype = {
	box: function(options) {
		if(options.id == null) {
			options.id = "quad.geometry";
		}
		if(options.batcher == null) {
			options.batcher = Luxe.renderer.batcher;
		}
		return new phoenix_geometry_QuadGeometry(options);
	}
	,__class__: luxe_Draw
};
var snow_App = function() {
	this.next_tick = 0;
	this.fixed_overflow = 0.0;
	this.fixed_frame_time = 0.0167;
	this.fixed_timestep = false;
	this.fixed_alpha = 1.0;
	this.sim_time = 0;
	this.sim_delta = 0.0166666666666666664;
	this.frame_max_delta = 0.25;
	this.frame_delta = 0.0166666666666666664;
	this.frame_start_prev = 0.0;
	this.frame_start = 0.0166666666666666664;
	this.tick_delta = 0.0166666666666666664;
	this.tick_start_prev = 0.0;
	this.tick_start = 0.0166666666666666664;
	this.update_rate = 0;
	this.fixed_delta = 0;
	this.timescale = 1;
};
$hxClasses["snow.App"] = snow_App;
snow_App.__name__ = true;
snow_App.prototype = {
	update: function(dt) {
	}
	,tick: function(dt) {
	}
	,ontickstart: function() {
	}
	,ontickend: function() {
	}
	,internal_init: function() {
		this.sim_time = 0;
		this.fixed_frame_time = 0.0166666666666666664;
		this.tick_start = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
		this.tick_start_prev = this.tick_start - this.fixed_frame_time;
		this.tick_delta = this.fixed_frame_time;
		this.frame_start = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
		this.frame_start_prev = this.frame_start - this.fixed_frame_time;
		this.frame_delta = this.sim_delta = this.fixed_frame_time;
	}
	,internal_tick: function() {
		this.ontickstart();
		this.tick_start = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
		this.tick_delta = this.tick_start - this.tick_start_prev;
		this.tick_start_prev = this.tick_start;
		if(this.fixed_timestep) {
			this.frame_start = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
			this.frame_delta = this.frame_start - this.frame_start_prev;
			this.frame_start_prev = this.frame_start;
			this.sim_delta = this.frame_delta * this.timescale;
			if(this.sim_delta > this.frame_max_delta) {
				this.sim_delta = this.frame_max_delta;
			}
			this.fixed_overflow += this.sim_delta;
			var _slice = this.fixed_frame_time * this.timescale;
			while(this.fixed_overflow >= this.fixed_frame_time) {
				this.update(_slice);
				this.sim_time += _slice;
				this.fixed_overflow -= _slice;
			}
			this.fixed_alpha = this.fixed_overflow / this.fixed_frame_time;
		} else {
			this.internal_tick_default();
		}
		this.tick(this.tick_delta);
		this.ontickend();
	}
	,internal_tick_default: function() {
		if(this.update_rate != 0) {
			if(window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start < this.next_tick) {
				return;
			}
			this.next_tick = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start + this.update_rate;
		}
		this.frame_start = this.tick_start;
		this.frame_delta = this.frame_start - this.frame_start_prev;
		this.frame_start_prev = this.frame_start;
		if(this.frame_delta > this.frame_max_delta) {
			this.frame_delta = this.frame_max_delta;
		}
		var _used_delta = this.fixed_delta == 0 ? this.frame_delta : this.fixed_delta;
		_used_delta *= this.timescale;
		this.sim_delta = _used_delta;
		this.sim_time += _used_delta;
		this.update(_used_delta);
	}
	,__class__: snow_App
};
var luxe_Engine = function(_game) {
	this.pixel_scale = 1;
	this.running = false;
	this.auto_render = true;
	this.headless = false;
	this.inited = false;
	this.has_shutdown = false;
	this.shutting_down = false;
	this.build = "+a0e9d83648";
	this.version = "dev";
	snow_App.call(this);
	this.game = _game;
	this.emitter = new luxe_Emitter();
	Luxe.core = this;
	Luxe.utils = new luxe_utils_Utils(this);
};
$hxClasses["luxe.Engine"] = luxe_Engine;
luxe_Engine.__name__ = true;
luxe_Engine.__super__ = snow_App;
luxe_Engine.prototype = $extend(snow_App.prototype,{
	run: function() {
		if(this.running != false) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("running == false"));
		}
		this.running = true;
		new snow_Snow(this);
	}
	,shutdown: function() {
		this.shutting_down = true;
		var func = ($_=this.app,$bind($_,$_.shutdown));
		if(func != null) {
			snow_Snow.next_queue.push(func);
		}
	}
	,runtime_info: function() {
		return "" + this.build + " / debug:" + Std.string(this.app.debug) + " / os:" + this.app.os + " / platform:" + this.app.platform;
	}
	,on: function(event,handler) {
		this.emitter.on(event,handler);
	}
	,off: function(event,handler) {
		return this.emitter.off(event,handler);
	}
	,emit: function(event,data) {
		this.emitter.emit(event,data);
		return;
	}
	,ready: function() {
		var _gthis = this;
		this.version = haxe_Resource.getString("version");
		this.build = this.version + haxe_Resource.getString("build");
		haxe_Log.trace("   i / luxe / " + ("" + this.build + " / debug:" + Std.string(this.app.debug) + " / os:" + this.app.os + " / platform:" + this.app.platform),{ fileName : "Engine.hx", lineNumber : 149, className : "luxe.Engine", methodName : "ready"});
		this.headless = this.game_config.headless;
		if(!this.headless) {
			var _font_image = new Uint8Array(haxe_Resource.getBytes("default.png").b.bufferValue);
			snow_systems_assets_AssetImage.load_from_bytes(this.app.assets,"default.png",_font_image).then(function(asset) {
				_gthis.init(asset);
			}).error(function(error) {
				haxe_Log.trace("   i / luxe / " + "failed to load default font, things will probably not look right... $error",{ fileName : "Engine.hx", lineNumber : 168, className : "luxe.Engine", methodName : "ready"});
				_gthis.init(null);
			});
		} else {
			this.auto_render = false;
			this.init(null);
		}
	}
	,ondestroy: function() {
		this.shutting_down = true;
		haxe_Log.trace("   i / luxe / " + "shutting down...",{ fileName : "Engine.hx", lineNumber : 187, className : "luxe.Engine", methodName : "ondestroy"});
		this.emitter.emit(8);
		if(this.renderer != null) {
			this.renderer.destroy();
		}
		this.physics.destroy();
		this.timer.destroy();
		this.events.destroy();
		this.debug.destroy();
		this.emitter = null;
		this.input = null;
		this.audio = null;
		this.events = null;
		this.timer = null;
		this.debug = null;
		Luxe.utils = null;
		this.has_shutdown = true;
		haxe_Log.trace("   i / luxe / " + "goodbye.",{ fileName : "Engine.hx", lineNumber : 217, className : "luxe.Engine", methodName : "ondestroy"});
	}
	,init: function(asset) {
		Luxe.debug = this.debug = new luxe_Debug(this);
		Luxe.io = this.io = new luxe_IO(this);
		this.draw = new luxe_Draw(this);
		this.timer = new luxe_Timer(this);
		this.events = new luxe_Events();
		this.audio = new luxe_Audio(this);
		this.input = new luxe_Input(this);
		this.physics = new luxe_Physics(this);
		this.resources = new luxe_Resources();
		Luxe.resources = this.resources;
		if(!this.headless) {
			this.renderer = new phoenix_Renderer(this,asset);
			Luxe.renderer = this.renderer;
		}
		this.pixel_scale = window.devicePixelRatio == null ? 1.0 : window.devicePixelRatio;
		this.screen = new luxe_Screen(this,Math.floor(this.app.runtime.window.width / this.pixel_scale),Math.floor(this.app.runtime.window.height / this.pixel_scale));
		this.debug.init();
		this.input.init();
		if(!this.headless) {
			this.renderer.init();
		}
		this.physics.init();
		Luxe.audio = this.audio;
		Luxe.draw = this.draw;
		Luxe.events = this.events;
		Luxe.timer = this.timer;
		Luxe.input = this.input;
		if(!this.headless) {
			Luxe.camera = new luxe_Camera({ name : "default camera", view : this.renderer.camera});
		}
		Luxe.physics = this.physics;
		this.scene = new luxe_Scene("default scene");
		Luxe.scene = this.scene;
		if(!this.headless) {
			this.scene.add(Luxe.camera);
			this.debug.create_debug_console();
		}
		this.internal_pre_ready();
	}
	,internal_pre_ready: function() {
		if(!this.headless) {
			new luxe_Parcel({ id : "default_parcel", system : this.resources, bytes : this.game_config.preload.bytes, texts : this.game_config.preload.texts, jsons : this.game_config.preload.jsons, textures : this.game_config.preload.textures, fonts : this.game_config.preload.fonts, shaders : this.game_config.preload.shaders, sounds : this.game_config.preload.sounds, oncomplete : $bind(this,this.internal_ready), onfailed : function(_error) {
				haxe_Log.trace("   i / luxe / " + "config / preload / failed to load",{ fileName : "Engine.hx", lineNumber : 312, className : "luxe.Engine", methodName : "internal_pre_ready"});
				throw new js__$Boot_HaxeError(snow_types_Error.error(_error));
			}}).load();
		} else {
			this.internal_ready(null);
		}
	}
	,internal_ready: function(_) {
		if(!this.headless) {
			this.debug.start(luxe_Tag.update,50);
			this.debug.start(luxe_Tag.tick,50);
		}
		this.game.ready();
		if(!this.shutting_down) {
			this.emitter.emit(2);
			this.inited = true;
			this.physics.reset();
		}
	}
	,onevent: function(_event) {
		if(_event.window != null) {
			this.window_event(_event.window);
		}
	}
	,update: function(_delta) {
		if(this.has_shutdown) {
			return;
		}
		if(!this.inited) {
			return;
		}
		this.debug.end(luxe_Tag.update);
		this.debug.start(luxe_Tag.update);
		this.input.process();
		this.events.process();
		this.physics.process();
		this.debug.start(luxe_Tag.updates);
		this.emitter.emit(6,_delta);
		this.debug.end(luxe_Tag.updates);
		this.debug.start(luxe_Tag.game_update);
		this.debug.end(luxe_Tag.game_update);
		this.debug.process();
	}
	,tick: function(_delta) {
		if(this.shutting_down) {
			return;
		}
		if(!this.inited) {
			return;
		}
		this.debug.end(luxe_Tag.tick);
		this.debug.start(luxe_Tag.tick);
		if(this.auto_render) {
			this.render();
		}
	}
	,render: function() {
		this.debug.start(luxe_Tag.render);
		this.renderer.prerender();
		this.emitter.emit(9);
		this.emitter.emit(10);
		this.renderer.process();
		this.emitter.emit(11);
		this.debug.end(luxe_Tag.render);
		this.debug.render();
	}
	,ontickstart: function() {
		if(!this.has_shutdown) {
			this.emitter.emit(4);
		}
	}
	,ontickend: function() {
		if(!this.has_shutdown) {
			this.emitter.emit(5);
		}
	}
	,window_event: function(_event) {
		if(this.shutting_down) {
			return;
		}
		if(!this.inited) {
			return;
		}
		var _render_w = _event.x;
		var _render_h = _event.y;
		this.pixel_scale = window.devicePixelRatio == null ? 1.0 : window.devicePixelRatio;
		_event.x = Math.floor(_render_w / this.pixel_scale);
		_event.y = Math.floor(_render_h / this.pixel_scale);
		this.emitter.emit(28,_event);
		switch(_event.type) {
		case 4:
			this.emitter.emit(29,_event);
			break;
		case 5:
			this.screen.internal_resized(_event.x,_event.y);
			this.renderer.internal_resized(_render_w,_render_h);
			this.emitter.emit(30,_event);
			break;
		case 6:
			this.screen.internal_resized(_event.x,_event.y);
			this.renderer.internal_resized(_render_w,_render_h);
			this.emitter.emit(31,_event);
			break;
		case 7:
			this.emitter.emit(32,_event);
			break;
		case 9:
			this.emitter.emit(33,_event);
			break;
		default:
		}
		_event = null;
	}
	,onmousedown: function(_x,_y,_button,_timestamp,_window_id) {
		if(!this.inited) {
			return;
		}
		_x = _x / this.pixel_scale | 0;
		_y = _y / this.pixel_scale | 0;
		var _this = this.screen.cursor;
		_this.ignore = true;
		_this.pos = new phoenix_Vector(_x,_y);
		_this.ignore = false;
		this.input.onmousedown(_x,_y,_button,_timestamp,_window_id);
	}
	,onmouseup: function(_x,_y,_button,_timestamp,_window_id) {
		if(!this.inited) {
			return;
		}
		_x = _x / this.pixel_scale | 0;
		_y = _y / this.pixel_scale | 0;
		var _this = this.screen.cursor;
		_this.ignore = true;
		_this.pos = new phoenix_Vector(_x,_y);
		_this.ignore = false;
		this.input.onmouseup(_x,_y,_button,_timestamp,_window_id);
	}
	,onmousemove: function(_x,_y,_x_rel,_y_rel,_timestamp,_window_id) {
		if(!this.inited) {
			return;
		}
		_x = _x / this.pixel_scale | 0;
		_y = _y / this.pixel_scale | 0;
		var _this = this.screen.cursor;
		_this.ignore = true;
		_this.pos = new phoenix_Vector(_x,_y);
		_this.ignore = false;
		this.input.onmousemove(_x,_y,_x_rel,_y_rel,_timestamp,_window_id);
	}
	,onmousewheel: function(_x,_y,_timestamp,_window_id) {
		if(!this.inited) {
			return;
		}
		this.input.onmousewheel(_x,_y,_timestamp,_window_id);
	}
	,onkeydown: function(_keycode,_scancode,_repeat,_mod,_timestamp,_window_id) {
		if(!this.inited) {
			return;
		}
		this.input.onkeydown(_keycode,_scancode,_repeat,_mod,_timestamp,_window_id);
	}
	,onkeyup: function(_keycode,_scancode,_repeat,_mod,_timestamp,_window_id) {
		if(!this.inited) {
			return;
		}
		this.input.onkeyup(_keycode,_scancode,_repeat,_mod,_timestamp,_window_id);
	}
	,ontextinput: function(_text,_start,_length,_etype,_timestamp,_window_id) {
		if(!this.inited) {
			return;
		}
		this.input.ontextinput(_text,_start,_length,_etype,_timestamp,_window_id);
	}
	,ontouchdown: function(_x,_y,_dx,_dy,_touch_id,_timestamp) {
		if(!this.inited) {
			return;
		}
		this.input.ontouchdown(_x,_y,_dx,_dy,_touch_id,_timestamp);
	}
	,ontouchup: function(_x,_y,_dx,_dy,_touch_id,_timestamp) {
		if(!this.inited) {
			return;
		}
		this.input.ontouchup(_x,_y,_dx,_dy,_touch_id,_timestamp);
	}
	,ontouchmove: function(_x,_y,_dx,_dy,_touch_id,_timestamp) {
		if(!this.inited) {
			return;
		}
		this.input.ontouchmove(_x,_y,_dx,_dy,_touch_id,_timestamp);
	}
	,oninputdown: function(_name,_key_event,_mouse_event,_touch_event,_gamepad_event) {
		if(!this.inited) {
			return;
		}
		this.input.oninputdown(_name,_key_event,_mouse_event,_touch_event,_gamepad_event);
	}
	,oninputup: function(_name,_key_event,_mouse_event,_touch_event,_gamepad_event) {
		if(!this.inited) {
			return;
		}
		this.input.oninputup(_name,_key_event,_mouse_event,_touch_event,_gamepad_event);
	}
	,ongamepadaxis: function(_gamepad,_axis,_value,_timestamp) {
		if(!this.inited) {
			return;
		}
		this.input.ongamepadaxis(_gamepad,_axis,_value,_timestamp);
	}
	,ongamepaddown: function(_gamepad,_button,_value,_timestamp) {
		if(!this.inited) {
			return;
		}
		this.input.ongamepaddown(_gamepad,_button,_value,_timestamp);
	}
	,ongamepadup: function(_gamepad,_button,_value,_timestamp) {
		if(!this.inited) {
			return;
		}
		this.input.ongamepadup(_gamepad,_button,_value,_timestamp);
	}
	,ongamepaddevice: function(_gamepad,_id,_etype,_timestamp) {
		if(!this.inited) {
			return;
		}
		this.input.ongamepaddevice(_gamepad,_id,_etype,_timestamp);
	}
	,config: function(_config) {
		if(_config.user == null) {
			_config.user = { };
		}
		this.game_config = _config;
		this.game_config.window.title = "luxe game";
		this.game_config.window.width = 960;
		this.game_config.window.height = 640;
		this.game_config.window.resizable = true;
		this.game_config.window.fullscreen = false;
		this.game_config.window.borderless = false;
		this.game_config.preload = { bytes : [], texts : [], jsons : [], textures : [], fonts : [], shaders : [], sounds : []};
		this.game_config = this.game.config(this.game_config);
		return this.game_config;
	}
	,__class__: luxe_Engine
});
var luxe_Tag = function() { };
$hxClasses["luxe.Tag"] = luxe_Tag;
luxe_Tag.__name__ = true;
var luxe_Events = function() {
	this.event_connections = new haxe_ds_StringMap();
	this.event_slots = new haxe_ds_StringMap();
	this.event_filters = new haxe_ds_StringMap();
	this.event_queue = [];
	this.event_schedules = new haxe_ds_StringMap();
};
$hxClasses["luxe.Events"] = luxe_Events;
luxe_Events.__name__ = true;
luxe_Events.prototype = {
	destroy: function() {
		this.clear();
	}
	,clear: function() {
		var _this = this.event_schedules;
		var schedule = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(schedule.hasNext()) {
			var schedule1 = schedule.next();
			schedule1.stop();
			schedule1 = null;
		}
		var connection = this.event_connections.keys();
		while(connection.hasNext()) {
			var connection1 = connection.next();
			this.event_connections.remove(connection1);
		}
		var filter = this.event_filters.keys();
		while(filter.hasNext()) {
			var filter1 = filter.next();
			this.event_filters.remove(filter1);
		}
		var slot = this.event_slots.keys();
		while(slot.hasNext()) {
			var slot1 = slot.next();
			this.event_slots.remove(slot1);
		}
		var _count = this.event_queue.length;
		while(_count > 0) {
			this.event_queue.pop();
			--_count;
		}
	}
	,does_filter_event: function(_filter,_event) {
		var _replace_stars_r = new RegExp("\\*","gi".split("u").join(""));
		return new EReg(_filter.replace(_replace_stars_r,".*?"),"gi").match(_event);
	}
	,process: function() {
		var _count = this.event_queue.length;
		while(_count > 0) {
			var _event = this.event_queue.shift();
			this.fire(_event.name,_event.properties);
			--_count;
		}
	}
	,fire: function(_event_name,_properties,_tag) {
		if(_tag == null) {
			_tag = false;
		}
		var _fired = false;
		var _this = this.event_filters;
		var _filter = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(_filter.hasNext()) {
			var _filter1 = _filter.next();
			if(_filter1.length > 0) {
				if(this.does_filter_event(_filter1[0].event_name,_event_name)) {
					if(_tag) {
						_properties = this.tag_properties(_properties,_event_name,_filter1.length);
					}
					var _g = 0;
					while(_g < _filter1.length) {
						var _connection = _filter1[_g];
						++_g;
						_connection.listener(_properties);
					}
					_fired = true;
				}
			}
		}
		var _this1 = this.event_slots;
		if(__map_reserved[_event_name] != null ? _this1.existsReserved(_event_name) : _this1.h.hasOwnProperty(_event_name)) {
			var _this2 = this.event_slots;
			var _connections = __map_reserved[_event_name] != null ? _this2.getReserved(_event_name) : _this2.h[_event_name];
			if(_tag) {
				_properties = this.tag_properties(_properties,_event_name,_connections.length);
			}
			var _g1 = 0;
			while(_g1 < _connections.length) {
				var connection = _connections[_g1];
				++_g1;
				connection.listener(_properties);
			}
			_fired = true;
		}
		return _fired;
	}
	,tag_properties: function(_properties,_name,_count) {
		if(_properties == null) {
			_properties = { };
		}
		_properties["_event_name_"] = _name;
		_properties["_event_connection_count_"] = _count;
		return _properties;
	}
	,__class__: luxe_Events
};
var luxe__$Events_EventConnection = function() { };
$hxClasses["luxe._Events.EventConnection"] = luxe__$Events_EventConnection;
luxe__$Events_EventConnection.__name__ = true;
luxe__$Events_EventConnection.prototype = {
	__class__: luxe__$Events_EventConnection
};
var luxe__$Events_EventObject = function() { };
$hxClasses["luxe._Events.EventObject"] = luxe__$Events_EventObject;
luxe__$Events_EventObject.__name__ = true;
luxe__$Events_EventObject.prototype = {
	__class__: luxe__$Events_EventObject
};
var luxe_IO = function(_core) {
	this.core = _core;
};
$hxClasses["luxe.IO"] = luxe_IO;
luxe_IO.__name__ = true;
luxe_IO.prototype = {
	__class__: luxe_IO
};
var luxe_Input = function(_core) {
	this.core = _core;
	this.key_event = new luxe_KeyEvent();
	this.text_event = new luxe_TextEvent();
	this.mouse_event = new luxe_MouseEvent();
	this.touch_event = new luxe_TouchEvent();
	this.gamepad_event = new luxe_GamepadEvent();
	this.input_event = new luxe_InputEvent();
};
$hxClasses["luxe.Input"] = luxe_Input;
luxe_Input.__name__ = true;
luxe_Input.prototype = {
	init: function() {
		this.key_bindings = new haxe_ds_StringMap();
		this.mouse_bindings = new haxe_ds_StringMap();
		this.gamepad_bindings = new haxe_ds_StringMap();
		this._named_input_down = new haxe_ds_StringMap();
		this._named_input_pressed = new haxe_ds_StringMap();
		this._named_input_released = new haxe_ds_StringMap();
	}
	,process: function() {
		var _event = this._named_input_pressed.keys();
		while(_event.hasNext()) {
			var _event1 = _event.next();
			var _this = this._named_input_pressed;
			if(__map_reserved[_event1] != null ? _this.getReserved(_event1) : _this.h[_event1]) {
				this._named_input_pressed.remove(_event1);
			} else {
				var _this1 = this._named_input_pressed;
				if(__map_reserved[_event1] != null) {
					_this1.setReserved(_event1,true);
				} else {
					_this1.h[_event1] = true;
				}
			}
		}
		var _event2 = this._named_input_released.keys();
		while(_event2.hasNext()) {
			var _event3 = _event2.next();
			var _this2 = this._named_input_released;
			if(__map_reserved[_event3] != null ? _this2.getReserved(_event3) : _this2.h[_event3]) {
				this._named_input_released.remove(_event3);
			} else {
				var _this3 = this._named_input_released;
				if(__map_reserved[_event3] != null) {
					_this3.setReserved(_event3,true);
				} else {
					_this3.h[_event3] = true;
				}
			}
		}
	}
	,onmousedown: function(_x,_y,_button,_timestamp,_window_id) {
		if(this.core.shutting_down) {
			return;
		}
		this.mouse_event.set_press(_x,_y,_button,luxe_InteractState.down,_timestamp,_window_id);
		this.check_named_mouse(this.mouse_event,true);
		this.core.emitter.emit(17,this.mouse_event);
	}
	,onmouseup: function(_x,_y,_button,_timestamp,_window_id) {
		if(this.core.shutting_down) {
			return;
		}
		this.mouse_event.set_press(_x,_y,_button,luxe_InteractState.up,_timestamp,_window_id);
		this.check_named_mouse(this.mouse_event);
		this.core.emitter.emit(18,this.mouse_event);
	}
	,onmousemove: function(_x,_y,_x_rel,_y_rel,_timestamp,_window_id) {
		if(this.core.shutting_down) {
			return;
		}
		this.mouse_event.set_move(_x,_y,_x_rel,_y_rel,_timestamp,_window_id);
		this.core.emitter.emit(19,this.mouse_event);
	}
	,onmousewheel: function(_x,_y,_timestamp,_window_id) {
		if(this.core.shutting_down) {
			return;
		}
		this.mouse_event.set_wheel(_x,_y,_timestamp,_window_id);
		this.check_named_mouse(this.mouse_event,false);
		this.core.emitter.emit(20,this.mouse_event);
	}
	,onkeydown: function(_keycode,_scancode,_repeat,_mod,_timestamp,_window_id) {
		if(this.core.shutting_down) {
			return;
		}
		this.key_event.set(_keycode,_scancode,_repeat,_mod,luxe_InteractState.down,_timestamp,_window_id);
		this.check_named_keys(this.key_event,true);
		this.core.emitter.emit(12,this.key_event);
	}
	,onkeyup: function(_keycode,_scancode,_repeat,_mod,_timestamp,_window_id) {
		if(this.core.shutting_down) {
			return;
		}
		this.key_event.set(_keycode,_scancode,_repeat,_mod,luxe_InteractState.up,_timestamp,_window_id);
		this.check_named_keys(this.key_event);
		this.core.emitter.emit(13,this.key_event);
		this.core.game.onkeyup(this.key_event);
	}
	,ontextinput: function(_text,_start,_length,_etype,_timestamp,_window_id) {
		if(this.core.shutting_down) {
			return;
		}
		var _type;
		switch(_etype) {
		case 1:
			_type = luxe_TextEventType.edit;
			break;
		case 2:
			_type = luxe_TextEventType.input;
			break;
		default:
			return;
		}
		this.text_event.set(_text,_start,_length,_type,_timestamp,_window_id);
		this.core.emitter.emit(14,this.text_event);
	}
	,ontouchdown: function(_x,_y,_dx,_dy,_touch_id,_timestamp) {
		if(this.core.shutting_down) {
			return;
		}
		this.touch_event.set(_x,_y,_dx,_dy,_touch_id,luxe_InteractState.down,_timestamp);
		this.core.emitter.emit(21,this.touch_event);
	}
	,ontouchup: function(_x,_y,_dx,_dy,_touch_id,_timestamp) {
		if(this.core.shutting_down) {
			return;
		}
		this.touch_event.set(_x,_y,_dx,_dy,_touch_id,luxe_InteractState.up,_timestamp);
		this.core.emitter.emit(22,this.touch_event);
	}
	,ontouchmove: function(_x,_y,_dx,_dy,_touch_id,_timestamp) {
		if(this.core.shutting_down) {
			return;
		}
		this.touch_event.set(_x,_y,_dx,_dy,_touch_id,luxe_InteractState.move,_timestamp);
		this.core.emitter.emit(23,this.touch_event);
	}
	,ongamepadaxis: function(_gamepad,_axis,_value,_timestamp) {
		if(this.core.shutting_down) {
			return;
		}
		this.gamepad_event.set_axis(_gamepad,_axis,_value,_timestamp);
		this.core.emitter.emit(24,this.gamepad_event);
	}
	,ongamepaddown: function(_gamepad,_button,_value,_timestamp) {
		if(this.core.shutting_down) {
			return;
		}
		this.gamepad_event.set_button(_gamepad,_button,_value,luxe_InteractState.down,_timestamp);
		this.check_named_gamepad_buttons(this.gamepad_event,true);
		this.core.emitter.emit(25,this.gamepad_event);
	}
	,ongamepadup: function(_gamepad,_button,_value,_timestamp) {
		if(this.core.shutting_down) {
			return;
		}
		this.gamepad_event.set_button(_gamepad,_button,_value,luxe_InteractState.up,_timestamp);
		this.check_named_gamepad_buttons(this.gamepad_event,false);
		this.core.emitter.emit(26,this.gamepad_event);
	}
	,ongamepaddevice: function(_gamepad,_id,_etype,_timestamp) {
		if(this.core.shutting_down) {
			return;
		}
		var _type;
		switch(_etype) {
		case 1:
			_type = luxe_GamepadEventType.device_added;
			break;
		case 2:
			_type = luxe_GamepadEventType.device_removed;
			break;
		case 3:
			_type = luxe_GamepadEventType.device_remapped;
			break;
		default:
			_type = luxe_GamepadEventType.unknown;
		}
		this.gamepad_event.set_device(_gamepad,_id,_type,_timestamp);
		this.core.emitter.emit(27,this.gamepad_event);
	}
	,oninputdown: function(_name,_key_event,_mouse_event,_touch_event,_gamepad_event) {
		if(this.core.shutting_down) {
			return;
		}
		if(_key_event != null) {
			this.input_event.set_key(_name,luxe_InteractState.down,_key_event);
		} else if(_mouse_event != null) {
			this.input_event.set_mouse(_name,luxe_InteractState.down,_mouse_event);
		} else if(_touch_event != null) {
			this.input_event.set_touch(_name,luxe_InteractState.down,_touch_event);
		} else if(_gamepad_event != null) {
			this.input_event.set_gamepad(_name,luxe_InteractState.down,_gamepad_event);
		} else {
			this.input_event.set_unknown(_name,luxe_InteractState.down);
		}
		this.core.emitter.emit(15,this.input_event);
	}
	,oninputup: function(_name,_key_event,_mouse_event,_touch_event,_gamepad_event) {
		if(this.core.shutting_down) {
			return;
		}
		if(_key_event != null) {
			this.input_event.set_key(_name,luxe_InteractState.up,_key_event);
		} else if(_mouse_event != null) {
			this.input_event.set_mouse(_name,luxe_InteractState.up,_mouse_event);
		} else if(_touch_event != null) {
			this.input_event.set_touch(_name,luxe_InteractState.up,_touch_event);
		} else if(_gamepad_event != null) {
			this.input_event.set_gamepad(_name,luxe_InteractState.up,_gamepad_event);
		} else {
			this.input_event.set_unknown(_name,luxe_InteractState.up);
		}
		this.core.emitter.emit(16,this.input_event);
	}
	,check_named_keys: function(e,_down) {
		if(_down == null) {
			_down = false;
		}
		var _fired = [];
		var _name = this.key_bindings.keys();
		while(_name.hasNext()) {
			var _name1 = _name.next();
			var _this = this.key_bindings;
			var _is_down_repeat = _down && e.repeat;
			if((__map_reserved[_name1] != null ? _this.getReserved(_name1) : _this.h[_name1]).h.hasOwnProperty(e.keycode) && !_is_down_repeat) {
				if(!Lambda.has(_fired,_name1)) {
					_fired.push(_name1);
				}
			}
		}
		var _g = 0;
		while(_g < _fired.length) {
			var _f = _fired[_g];
			++_g;
			if(_down) {
				var _this1 = this._named_input_pressed;
				if(__map_reserved[_f] != null) {
					_this1.setReserved(_f,false);
				} else {
					_this1.h[_f] = false;
				}
				var _this2 = this._named_input_down;
				if(__map_reserved[_f] != null) {
					_this2.setReserved(_f,true);
				} else {
					_this2.h[_f] = true;
				}
				this.oninputdown(_f,e);
			} else {
				var _this3 = this._named_input_released;
				if(__map_reserved[_f] != null) {
					_this3.setReserved(_f,false);
				} else {
					_this3.h[_f] = false;
				}
				this._named_input_down.remove(_f);
				this.oninputup(_f,e);
			}
		}
	}
	,check_named_mouse: function(e,_down) {
		if(_down == null) {
			_down = false;
		}
		var _fired = [];
		var _name = this.mouse_bindings.keys();
		while(_name.hasNext()) {
			var _name1 = _name.next();
			var _this = this.mouse_bindings;
			if((__map_reserved[_name1] != null ? _this.getReserved(_name1) : _this.h[_name1]).h.hasOwnProperty(e.button)) {
				if(!Lambda.has(_fired,_name1)) {
					_fired.push(_name1);
				}
			}
		}
		var _g = 0;
		while(_g < _fired.length) {
			var _f = _fired[_g];
			++_g;
			if(_down) {
				var _this1 = this._named_input_pressed;
				if(__map_reserved[_f] != null) {
					_this1.setReserved(_f,false);
				} else {
					_this1.h[_f] = false;
				}
				var _this2 = this._named_input_down;
				if(__map_reserved[_f] != null) {
					_this2.setReserved(_f,true);
				} else {
					_this2.h[_f] = true;
				}
				this.oninputdown(_f,null,e);
			} else {
				var _this3 = this._named_input_released;
				if(__map_reserved[_f] != null) {
					_this3.setReserved(_f,false);
				} else {
					_this3.h[_f] = false;
				}
				this._named_input_down.remove(_f);
				this.oninputup(_f,null,e);
			}
		}
	}
	,check_named_gamepad_buttons: function(e,_down) {
		if(_down == null) {
			_down = false;
		}
		var _fired = [];
		var _name = this.gamepad_bindings.keys();
		while(_name.hasNext()) {
			var _name1 = _name.next();
			var _this = this.gamepad_bindings;
			var _b = __map_reserved[_name1] != null ? _this.getReserved(_name1) : _this.h[_name1];
			if(_b.h.hasOwnProperty(e.button)) {
				var _kb = _b.h[e.button];
				var _accepted_gamepad = _kb == null || _kb == e.gamepad;
				if(!Lambda.has(_fired,_name1) && _accepted_gamepad) {
					_fired.push(_name1);
				}
			}
		}
		var _g = 0;
		while(_g < _fired.length) {
			var _f = _fired[_g];
			++_g;
			if(_down) {
				var _this1 = this._named_input_pressed;
				if(__map_reserved[_f] != null) {
					_this1.setReserved(_f,false);
				} else {
					_this1.h[_f] = false;
				}
				var _this2 = this._named_input_down;
				if(__map_reserved[_f] != null) {
					_this2.setReserved(_f,true);
				} else {
					_this2.h[_f] = true;
				}
				this.oninputdown(_f,null,null,null,e);
			} else {
				var _this3 = this._named_input_released;
				if(__map_reserved[_f] != null) {
					_this3.setReserved(_f,false);
				} else {
					_this3.h[_f] = false;
				}
				this._named_input_down.remove(_f);
				this.oninputup(_f,null,null,null,e);
			}
		}
	}
	,__class__: luxe_Input
};
var luxe_InteractState = { __ename__ : true, __constructs__ : ["unknown","none","down","up","move","wheel","axis"] };
luxe_InteractState.unknown = ["unknown",0];
luxe_InteractState.unknown.toString = $estr;
luxe_InteractState.unknown.__enum__ = luxe_InteractState;
luxe_InteractState.none = ["none",1];
luxe_InteractState.none.toString = $estr;
luxe_InteractState.none.__enum__ = luxe_InteractState;
luxe_InteractState.down = ["down",2];
luxe_InteractState.down.toString = $estr;
luxe_InteractState.down.__enum__ = luxe_InteractState;
luxe_InteractState.up = ["up",3];
luxe_InteractState.up.toString = $estr;
luxe_InteractState.up.__enum__ = luxe_InteractState;
luxe_InteractState.move = ["move",4];
luxe_InteractState.move.toString = $estr;
luxe_InteractState.move.__enum__ = luxe_InteractState;
luxe_InteractState.wheel = ["wheel",5];
luxe_InteractState.wheel.toString = $estr;
luxe_InteractState.wheel.__enum__ = luxe_InteractState;
luxe_InteractState.axis = ["axis",6];
luxe_InteractState.axis.toString = $estr;
luxe_InteractState.axis.__enum__ = luxe_InteractState;
var luxe_TextEventType = { __ename__ : true, __constructs__ : ["unknown","edit","input"] };
luxe_TextEventType.unknown = ["unknown",0];
luxe_TextEventType.unknown.toString = $estr;
luxe_TextEventType.unknown.__enum__ = luxe_TextEventType;
luxe_TextEventType.edit = ["edit",1];
luxe_TextEventType.edit.toString = $estr;
luxe_TextEventType.edit.__enum__ = luxe_TextEventType;
luxe_TextEventType.input = ["input",2];
luxe_TextEventType.input.toString = $estr;
luxe_TextEventType.input.__enum__ = luxe_TextEventType;
var luxe_KeyEvent = function() {
};
$hxClasses["luxe.KeyEvent"] = luxe_KeyEvent;
luxe_KeyEvent.__name__ = true;
luxe_KeyEvent.prototype = {
	set: function(_keycode,_scancode,_repeat,_mod,_state,_timestamp,_window_id) {
		this.mod = _mod;
		this.state = _state;
		this.repeat = _repeat;
		this.keycode = _keycode;
		this.scancode = _scancode;
		this.timestamp = _timestamp;
		this.window_id = _window_id;
	}
	,__class__: luxe_KeyEvent
};
var luxe_TouchEvent = function() {
	this.pos = new phoenix_Vector();
};
$hxClasses["luxe.TouchEvent"] = luxe_TouchEvent;
luxe_TouchEvent.__name__ = true;
luxe_TouchEvent.prototype = {
	set: function(_x,_y,_dx,_dy,_touch_id,_state,_timestamp) {
		this.x = _x;
		this.y = _y;
		this.dx = _dx;
		this.dy = _dy;
		this.touch_id = _touch_id;
		this.timestamp = _timestamp;
		this.state = _state;
		var _this = this.pos;
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = _x;
		if(!_this._construct) {
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(_x);
			}
		}
		_this.y = _y;
		if(!_this._construct) {
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(_y);
			}
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) {
			_this.listen_x(_this.x);
		}
		if(_this.listen_y != null && !_this.ignore_listeners) {
			_this.listen_y(_this.y);
		}
	}
	,__class__: luxe_TouchEvent
};
var luxe_TextEvent = function() {
};
$hxClasses["luxe.TextEvent"] = luxe_TextEvent;
luxe_TextEvent.__name__ = true;
luxe_TextEvent.prototype = {
	set: function(_text,_start,_length,_type,_timestamp,_window_id) {
		this.text = _text;
		this.start = _start;
		this.length = _length;
		this.type = _type;
		this.timestamp = _timestamp;
		this.window_id = _window_id;
	}
	,__class__: luxe_TextEvent
};
var luxe_GamepadEventType = { __ename__ : true, __constructs__ : ["unknown","axis","button","device_added","device_removed","device_remapped"] };
luxe_GamepadEventType.unknown = ["unknown",0];
luxe_GamepadEventType.unknown.toString = $estr;
luxe_GamepadEventType.unknown.__enum__ = luxe_GamepadEventType;
luxe_GamepadEventType.axis = ["axis",1];
luxe_GamepadEventType.axis.toString = $estr;
luxe_GamepadEventType.axis.__enum__ = luxe_GamepadEventType;
luxe_GamepadEventType.button = ["button",2];
luxe_GamepadEventType.button.toString = $estr;
luxe_GamepadEventType.button.__enum__ = luxe_GamepadEventType;
luxe_GamepadEventType.device_added = ["device_added",3];
luxe_GamepadEventType.device_added.toString = $estr;
luxe_GamepadEventType.device_added.__enum__ = luxe_GamepadEventType;
luxe_GamepadEventType.device_removed = ["device_removed",4];
luxe_GamepadEventType.device_removed.toString = $estr;
luxe_GamepadEventType.device_removed.__enum__ = luxe_GamepadEventType;
luxe_GamepadEventType.device_remapped = ["device_remapped",5];
luxe_GamepadEventType.device_remapped.toString = $estr;
luxe_GamepadEventType.device_remapped.__enum__ = luxe_GamepadEventType;
var luxe_GamepadEvent = function() {
};
$hxClasses["luxe.GamepadEvent"] = luxe_GamepadEvent;
luxe_GamepadEvent.__name__ = true;
luxe_GamepadEvent.prototype = {
	set_axis: function(_gamepad,_axis,_value,_timestamp) {
		this.id = null;
		this.button = -1;
		this.axis = _axis;
		this.value = _value;
		this.gamepad = _gamepad;
		this.timestamp = _timestamp;
		this.state = luxe_InteractState.axis;
		this.type = luxe_GamepadEventType.axis;
	}
	,set_button: function(_gamepad,_button,_value,_state,_timestamp) {
		this.id = null;
		this.axis = -1;
		this.state = _state;
		this.value = _value;
		this.button = _button;
		this.gamepad = _gamepad;
		this.timestamp = _timestamp;
		this.type = luxe_GamepadEventType.button;
	}
	,set_device: function(_gamepad,_id,_type,_timestamp) {
		this.id = _id;
		this.axis = -1;
		this.value = 0;
		this.button = -1;
		this.type = _type;
		this.gamepad = _gamepad;
		this.timestamp = _timestamp;
		this.state = luxe_InteractState.none;
	}
	,__class__: luxe_GamepadEvent
};
var luxe_MouseEvent = function() {
	this.y_rel = 0;
	this.x_rel = 0;
	this.y = 0;
	this.x = 0;
	this.window_id = 1;
	this.timestamp = 0.0;
	this.pos = new phoenix_Vector();
};
$hxClasses["luxe.MouseEvent"] = luxe_MouseEvent;
luxe_MouseEvent.__name__ = true;
luxe_MouseEvent.prototype = {
	set_press: function(_x,_y,_button,_state,_timestamp,_window_id) {
		this.x = _x;
		this.y = _y;
		this.x_rel = 0;
		this.y_rel = 0;
		this.state = _state;
		this.button = _button;
		this.window_id = _window_id;
		this.timestamp = _timestamp;
		var _this = this.pos;
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = _x;
		if(!_this._construct) {
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(_x);
			}
		}
		_this.y = _y;
		if(!_this._construct) {
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(_y);
			}
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) {
			_this.listen_x(_this.x);
		}
		if(_this.listen_y != null && !_this.ignore_listeners) {
			_this.listen_y(_this.y);
		}
	}
	,set_move: function(_x,_y,_x_rel,_y_rel,_timestamp,_window_id) {
		this.x = _x;
		this.y = _y;
		this.x_rel = _x_rel;
		this.y_rel = _y_rel;
		this.state = luxe_InteractState.move;
		this.button = 0;
		this.window_id = _window_id;
		this.timestamp = _timestamp;
		var _this = this.pos;
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = _x;
		if(!_this._construct) {
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(_x);
			}
		}
		_this.y = _y;
		if(!_this._construct) {
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(_y);
			}
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) {
			_this.listen_x(_this.x);
		}
		if(_this.listen_y != null && !_this.ignore_listeners) {
			_this.listen_y(_this.y);
		}
	}
	,set_wheel: function(_x,_y,_timestamp,_window_id) {
		this.x = Math.floor(_x);
		this.y = Math.floor(_y);
		this.x_rel = 0;
		this.y_rel = 0;
		this.state = luxe_InteractState.wheel;
		this.button = 0;
		this.window_id = _window_id;
		this.timestamp = _timestamp;
	}
	,__class__: luxe_MouseEvent
};
var luxe_InputEventType = { __ename__ : true, __constructs__ : ["unknown","mouse","touch","key","gamepad"] };
luxe_InputEventType.unknown = ["unknown",0];
luxe_InputEventType.unknown.toString = $estr;
luxe_InputEventType.unknown.__enum__ = luxe_InputEventType;
luxe_InputEventType.mouse = ["mouse",1];
luxe_InputEventType.mouse.toString = $estr;
luxe_InputEventType.mouse.__enum__ = luxe_InputEventType;
luxe_InputEventType.touch = ["touch",2];
luxe_InputEventType.touch.toString = $estr;
luxe_InputEventType.touch.__enum__ = luxe_InputEventType;
luxe_InputEventType.key = ["key",3];
luxe_InputEventType.key.toString = $estr;
luxe_InputEventType.key.__enum__ = luxe_InputEventType;
luxe_InputEventType.gamepad = ["gamepad",4];
luxe_InputEventType.gamepad.toString = $estr;
luxe_InputEventType.gamepad.__enum__ = luxe_InputEventType;
var luxe_InputEvent = function() {
};
$hxClasses["luxe.InputEvent"] = luxe_InputEvent;
luxe_InputEvent.__name__ = true;
luxe_InputEvent.prototype = {
	set_key: function(_name,_state,_key_event) {
		this.set_common(_name,luxe_InputEventType.key,_state);
		this.set_events(_key_event,null,null,null);
	}
	,set_mouse: function(_name,_state,_mouse_event) {
		this.set_common(_name,luxe_InputEventType.mouse,_state);
		this.set_events(null,_mouse_event,null,null);
	}
	,set_touch: function(_name,_state,_touch_event) {
		this.set_common(_name,luxe_InputEventType.touch,_state);
		this.set_events(null,null,_touch_event,null);
	}
	,set_gamepad: function(_name,_state,_gamepad_event) {
		this.set_common(_name,luxe_InputEventType.gamepad,_state);
		this.set_events(null,null,null,_gamepad_event);
	}
	,set_unknown: function(_name,_state) {
		this.set_common(_name,luxe_InputEventType.unknown,_state);
		this.set_events(null,null,null,null);
	}
	,set_common: function(_name,_type,_state) {
		this.name = _name;
		this.type = _type;
		this.state = _state;
	}
	,set_events: function(_key_event,_mouse_event,_touch_event,_gamepad_event) {
		this.key_event = _key_event;
		this.mouse_event = _mouse_event;
		this.touch_event = _touch_event;
		this.gamepad_event = _gamepad_event;
	}
	,__class__: luxe_InputEvent
};
var luxe_DebugError = { __ename__ : true, __constructs__ : ["assertion","null_assertion"] };
luxe_DebugError.assertion = function(expr) { var $x = ["assertion",0,expr]; $x.__enum__ = luxe_DebugError; $x.toString = $estr; return $x; };
luxe_DebugError.null_assertion = function(expr) { var $x = ["null_assertion",1,expr]; $x.__enum__ = luxe_DebugError; $x.toString = $estr; return $x; };
var luxe_Visual = function(_options) {
	this._creating_geometry = false;
	this._has_custom_origin = false;
	this.radians = 0.0;
	this.depth = 0.0;
	this.visible = true;
	this.locked = false;
	if(_options == null) {
		throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options was null" + (" ( " + "Visual requires non-null options" + " )")));
	}
	this._rotation_euler = new phoenix_Vector();
	this._rotation_quat = new phoenix_Quaternion();
	luxe_Entity.call(this,_options);
	this.set_color(new phoenix_Color());
	this.set_size(new phoenix_Vector());
	if(this.options.texture != null) {
		this.set_texture(this.options.texture);
	}
	if(this.options.shader != null) {
		this.set_shader(this.options.shader);
	}
	if(this.options.color != null) {
		this.set_color(this.options.color);
	}
	if(this.options.depth != null) {
		this.set_depth(this.options.depth);
	}
	if(this.options.visible != null) {
		this.set_visible(this.options.visible);
	}
	if(this.options.size != null) {
		this.set_size(this.options.size);
		this._create_geometry();
	} else if(this.texture != null) {
		this.set_size(new phoenix_Vector(this.texture.width,this.texture.height));
		this._create_geometry();
	} else {
		this.set_size(new phoenix_Vector(64,64));
		this._create_geometry();
	}
};
$hxClasses["luxe.Visual"] = luxe_Visual;
luxe_Visual.__name__ = true;
luxe_Visual.__super__ = luxe_Entity;
luxe_Visual.prototype = $extend(luxe_Entity.prototype,{
	_create_geometry: function() {
		if(this.options.geometry == null) {
			if(this.options.no_geometry == null || this.options.no_geometry == false) {
				this._creating_geometry = true;
				var _batcher = null;
				if(this.options.no_batcher_add == null || this.options.no_batcher_add == false) {
					if(this.options.batcher != null) {
						_batcher = this.options.batcher;
					} else {
						_batcher = Luxe.renderer.batcher;
					}
				}
				var tmp = this.options.depth == null ? 0 : this.options.depth;
				var tmp1 = this.options.visible == null ? this.visible : this.options.visible;
				this.set_geometry(new phoenix_geometry_QuadGeometry({ id : this.get_name() + ".visual", x : 0, y : 0, w : this.size.x, h : this.size.y, scale : new phoenix_Vector(1,1,1), texture : this.texture, color : this.color, shader : this.shader, batcher : _batcher, depth : tmp, visible : tmp1}));
				this._creating_geometry = false;
				this.on_geometry_created();
			}
		} else {
			this.set_geometry(this.options.geometry);
		}
		if(this.geometry != null) {
			this.geometry.id = this.get_name() + ".visual";
			this.geometry.transform.id = this.get_name() + ".visual.transform";
		}
		if(this.options.origin != null) {
			this._has_custom_origin = true;
			this.set_origin(this.options.origin);
		}
		if(this.options.rotation_z != null) {
			this.set_rotation_z(this.options.rotation_z);
		}
	}
	,ondestroy: function() {
		if(this.geometry != null && this.geometry.added) {
			this.geometry.drop(true);
		}
		this.set_transform(null);
		this.options = null;
		this.set_geometry(null);
		this.set_texture(null);
		this.set_shader(null);
		this.set_color(null);
		this.set_size(null);
		this.set_clip_rect(null);
		this._rotation_euler = null;
		this._rotation_quat = null;
	}
	,on_geometry_created: function() {
	}
	,set_visible: function(_v) {
		this.visible = _v;
		if(this.geometry != null) {
			this.geometry.set_visible(this.visible);
		}
		return this.visible;
	}
	,set_depth: function(_v) {
		if(this.geometry != null) {
			this.geometry.set_depth(_v);
		}
		return this.depth = _v;
	}
	,set_color: function(_c) {
		if(this.color != null && this.geometry != null) {
			this.geometry.set_color(_c);
		}
		return this.color = _c;
	}
	,set_texture: function(_t) {
		if(this.geometry != null && this.geometry.state.texture != _t) {
			this.geometry.set_texture(_t);
		}
		return this.texture = _t;
	}
	,set_shader: function(_s) {
		if(this.geometry != null && this.geometry.state.shader != _s) {
			this.geometry.set_shader(_s);
		}
		return this.shader = _s;
	}
	,set_geometry: function(_g) {
		if(this.geometry == _g) {
			return this.geometry;
		}
		if(this.geometry != null) {
			this.geometry.drop();
		}
		this.geometry = _g;
		if(this.geometry != null) {
			var _this = this.geometry.transform;
			var _p = this.get_transform();
			_this.dirty = true;
			if(_this.dirty && !_this._setup && _this._dirty_handlers != null && _this._dirty_handlers.length > 0) {
				var _g1 = 0;
				var _g11 = _this._dirty_handlers;
				while(_g1 < _g11.length) {
					var _handler = _g11[_g1];
					++_g1;
					if(_handler != null) {
						_handler(_this);
					}
				}
			}
			if(_this.parent != null) {
				var _this1 = _this.parent;
				if(_this1._clean_handlers != null) {
					HxOverrides.remove(_this1._clean_handlers,$bind(_this,_this.on_parent_cleaned));
				}
			}
			_this.parent = _p;
			if(_this._parent_handlers != null && _this._parent_handlers.length > 0) {
				var _parent = _this.parent;
				var _g2 = 0;
				var _g12 = _this._parent_handlers;
				while(_g2 < _g12.length) {
					var _handler1 = _g12[_g2];
					++_g2;
					if(_handler1 != null) {
						_handler1(_parent);
					}
				}
			}
			if(_this.parent != null) {
				var _this2 = _this.parent;
				if(_this2._clean_handlers == null) {
					_this2._clean_handlers = [];
				}
				_this2._clean_handlers.push($bind(_this,_this.on_parent_cleaned));
			}
			if(this._creating_geometry == false) {
				this.geometry.set_color(this.color);
				this.geometry.set_depth(this.depth);
				this.geometry.set_visible(this.visible);
			}
		}
		return this.geometry;
	}
	,set_parent_from_transform: function(_parent) {
		luxe_Entity.prototype.set_parent_from_transform.call(this,_parent);
		if(this.geometry != null) {
			var _this = this.geometry.transform;
			var _p = this.get_transform();
			_this.dirty = true;
			if(_this.dirty && !_this._setup && _this._dirty_handlers != null && _this._dirty_handlers.length > 0) {
				var _g = 0;
				var _g1 = _this._dirty_handlers;
				while(_g < _g1.length) {
					var _handler = _g1[_g];
					++_g;
					if(_handler != null) {
						_handler(_this);
					}
				}
			}
			if(_this.parent != null) {
				var _this1 = _this.parent;
				if(_this1._clean_handlers != null) {
					HxOverrides.remove(_this1._clean_handlers,$bind(_this,_this.on_parent_cleaned));
				}
			}
			_this.parent = _p;
			if(_this._parent_handlers != null && _this._parent_handlers.length > 0) {
				var _parent1 = _this.parent;
				var _g2 = 0;
				var _g11 = _this._parent_handlers;
				while(_g2 < _g11.length) {
					var _handler1 = _g11[_g2];
					++_g2;
					if(_handler1 != null) {
						_handler1(_parent1);
					}
				}
			}
			if(_this.parent != null) {
				var _this2 = _this.parent;
				if(_this2._clean_handlers == null) {
					_this2._clean_handlers = [];
				}
				_this2._clean_handlers.push($bind(_this,_this.on_parent_cleaned));
			}
		}
	}
	,set_rotation_from_transform: function(_rotation) {
		luxe_Entity.prototype.set_rotation_from_transform.call(this,_rotation);
		var _this = this._rotation_euler;
		var sqx = _rotation.x * _rotation.x;
		var sqy = _rotation.y * _rotation.y;
		var sqz = _rotation.z * _rotation.z;
		var sqw = _rotation.w * _rotation.w;
		var _x = _this.x;
		var _y = _this.y;
		var _z = _this.z;
		_x = Math.atan2(2 * (_rotation.x * _rotation.w - _rotation.y * _rotation.z),sqw - sqx - sqy + sqz);
		var value = 2 * (_rotation.x * _rotation.z + _rotation.y * _rotation.w);
		_y = Math.asin(value < -1 ? -1 : value > 1 ? 1 : value);
		_z = Math.atan2(2 * (_rotation.z * _rotation.w - _rotation.x * _rotation.y),sqw + sqx - sqy - sqz);
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = _x;
		if(!_this._construct) {
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(_x);
			}
		}
		_this.y = _y;
		if(!_this._construct) {
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(_y);
			}
		}
		_this.z = _z;
		if(!_this._construct) {
			if(_this.listen_z != null && !_this.ignore_listeners) {
				_this.listen_z(_z);
			}
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) {
			_this.listen_x(_this.x);
		}
		if(_this.listen_y != null && !_this.ignore_listeners) {
			_this.listen_y(_this.y);
		}
		if(_this.listen_z != null && !_this.ignore_listeners) {
			_this.listen_z(_this.z);
		}
		this._rotation_quat.copy(_rotation);
	}
	,set_size: function(_v) {
		this.size = _v;
		if(this.size != null) {
			var _v1 = this.size;
			var listener = $bind(this,this._size_change);
			_v1.listen_x = listener;
			_v1.listen_y = listener;
			_v1.listen_z = listener;
		}
		return this.size;
	}
	,set_rotation_z: function(_degrees) {
		this.set_radians(_degrees * 0.0174532925199432781);
		return _degrees;
	}
	,set_radians: function(_r) {
		var _this = this._rotation_euler;
		_this.z = _r;
		if(!_this._construct) {
			if(_this.listen_z != null && !_this.ignore_listeners) {
				_this.listen_z(_r);
			}
		}
		this._rotation_quat.setFromEuler(this._rotation_euler);
		this.set_rotation(this._rotation_quat.clone());
		return this.radians = _r;
	}
	,set_locked: function(_l) {
		if(this.geometry != null) {
			this.geometry.set_locked(_l);
		}
		return this.locked = _l;
	}
	,set_clip_rect: function(_val) {
		if(this.geometry != null) {
			this.geometry.set_clip_rect(_val);
		}
		return this.clip_rect = _val;
	}
	,_size_change: function(_v) {
		this.set_size(this.size);
	}
	,init: function() {
		luxe_Entity.prototype.init.call(this);
	}
	,__class__: luxe_Visual
	,__properties__: $extend(luxe_Entity.prototype.__properties__,{set_rotation_z:"set_rotation_z",set_radians:"set_radians",set_clip_rect:"set_clip_rect",set_depth:"set_depth",set_visible:"set_visible",set_color:"set_color",set_shader:"set_shader",set_texture:"set_texture",set_locked:"set_locked",set_geometry:"set_geometry",set_size:"set_size"})
});
var luxe_Parcel = function(_options) {
	this.load_start_delay = 0.2;
	this.load_time_spacing = 0.05;
	this.start_load = 0.0;
	this.time_to_load = 0.0;
	if(_options == null) {
		_options = { };
	}
	if(_options.system == null) {
		_options.system = Luxe.resources;
	}
	if(_options.id == null) {
		_options.id = Luxe.utils.uniqueid();
	}
	if(_options.oncomplete != null) {
		this.oncomplete = _options.oncomplete;
	}
	if(_options.onprogress != null) {
		this.onprogress = _options.onprogress;
	}
	if(_options.onfailed != null) {
		this.onfailed = _options.onfailed;
	}
	if(_options.load_time_spacing != null) {
		this.load_time_spacing = _options.load_time_spacing;
	}
	if(_options.load_start_delay != null) {
		this.load_start_delay = _options.load_start_delay;
	}
	this.state = 0;
	this.loaded = [];
	this.emitter = new luxe_Emitter();
	this.system = _options.system;
	this.id = _options.id;
	this.list = this.empty_list();
	if(_options.bytes != null) {
		this.list.bytes = _options.bytes;
	}
	if(_options.texts != null) {
		this.list.texts = _options.texts;
	}
	if(_options.jsons != null) {
		this.list.jsons = _options.jsons;
	}
	if(_options.textures != null) {
		this.list.textures = _options.textures;
	}
	if(_options.fonts != null) {
		this.list.fonts = _options.fonts;
	}
	if(_options.shaders != null) {
		this.list.shaders = _options.shaders;
	}
	if(_options.sounds != null) {
		this.list.sounds = _options.sounds;
	}
	this.system.track(this);
};
$hxClasses["luxe.Parcel"] = luxe_Parcel;
luxe_Parcel.__name__ = true;
luxe_Parcel.prototype = {
	load: function(_load_id) {
		var _gthis = this;
		this.emitter.emit(1,this);
		this.state = 1;
		Luxe.timer.schedule(this.load_start_delay,function() {
			var tmp = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
			_gthis.start_load = tmp;
			if(_load_id == null) {
				_load_id = _gthis.id;
			}
			if(_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length == 0) {
				_gthis.state = 2;
				var tmp1 = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
				_gthis.time_to_load = tmp1 - _gthis.start_load;
				_gthis.emitter.emit(4,_gthis);
				if(_gthis.oncomplete != null) {
					_gthis.oncomplete(_gthis);
				}
				return;
			}
			var _index = 0;
			var _load_index = 0;
			var _g = 0;
			var _g1 = _gthis.list.bytes;
			while(_g < _g1.length) {
				var _bytes = [_g1[_g]];
				++_g;
				++_load_index;
				if(_gthis.loaded.indexOf(_bytes[0].id) == -1) {
					_gthis.loaded.push(_bytes[0].id);
					Luxe.timer.schedule(_gthis.load_time_spacing * _load_index,(function(_bytes1) {
						return function() {
							var _item_id = _bytes1[0].id;
							_gthis.system.load_bytes(_bytes1[0].id).then((function() {
								return function(_res) {
									_gthis.one_loaded(_item_id,_load_id,_res,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
								};
							})(),(function() {
								return function(_err) {
									_gthis.one_failed(_item_id,_load_id,_err,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
								};
							})());
						};
					})(_bytes));
				} else {
					haxe_Log.trace("   i / parcel / " + ("" + _gthis.id + " / already had " + _bytes[0].id + " loaded, skipped"),{ fileName : "Parcel.hx", lineNumber : 202, className : "luxe.Parcel", methodName : "load"});
					var _bytes2 = _bytes[0].id;
					var tmp2 = _gthis.system.cache.get(_bytes[0].id);
					_gthis.one_loaded(_bytes2,_load_id,tmp2,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
				}
			}
			var _g2 = 0;
			var _g11 = _gthis.list.texts;
			while(_g2 < _g11.length) {
				var _text = [_g11[_g2]];
				++_g2;
				++_load_index;
				if(_gthis.loaded.indexOf(_text[0].id) == -1) {
					_gthis.loaded.push(_text[0].id);
					Luxe.timer.schedule(_gthis.load_time_spacing * _load_index,(function(_text1) {
						return function() {
							var _item_id1 = _text1[0].id;
							_gthis.system.load_text(_text1[0].id).then((function() {
								return function(_res1) {
									_gthis.one_loaded(_item_id1,_load_id,_res1,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
								};
							})(),(function() {
								return function(_err1) {
									_gthis.one_failed(_item_id1,_load_id,_err1,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
								};
							})());
						};
					})(_text));
				} else {
					haxe_Log.trace("   i / parcel / " + ("" + _gthis.id + " / already had " + _text[0].id + " loaded, skipped"),{ fileName : "Parcel.hx", lineNumber : 224, className : "luxe.Parcel", methodName : "load"});
					var _text2 = _text[0].id;
					var tmp3 = _gthis.system.cache.get(_text[0].id);
					_gthis.one_loaded(_text2,_load_id,tmp3,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
				}
			}
			var _g3 = 0;
			var _g12 = _gthis.list.jsons;
			while(_g3 < _g12.length) {
				var _json = [_g12[_g3]];
				++_g3;
				++_load_index;
				if(_gthis.loaded.indexOf(_json[0].id) == -1) {
					_gthis.loaded.push(_json[0].id);
					Luxe.timer.schedule(_gthis.load_time_spacing * _load_index,(function(_json1) {
						return function() {
							var _item_id2 = _json1[0].id;
							_gthis.system.load_json(_json1[0].id).then((function() {
								return function(_res2) {
									_gthis.one_loaded(_item_id2,_load_id,_res2,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
								};
							})(),(function() {
								return function(_err2) {
									_gthis.one_failed(_item_id2,_load_id,_err2,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
								};
							})());
						};
					})(_json));
				} else {
					haxe_Log.trace("   i / parcel / " + ("" + _gthis.id + " / already had " + _json[0].id + " loaded, skipped"),{ fileName : "Parcel.hx", lineNumber : 246, className : "luxe.Parcel", methodName : "load"});
					var _json2 = _json[0].id;
					var tmp4 = _gthis.system.cache.get(_json[0].id);
					_gthis.one_loaded(_json2,_load_id,tmp4,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
				}
			}
			var _g4 = 0;
			var _g13 = _gthis.list.textures;
			while(_g4 < _g13.length) {
				var _texture = [_g13[_g4]];
				++_g4;
				++_load_index;
				if(_gthis.loaded.indexOf(_texture[0].id) == -1) {
					_gthis.loaded.push(_texture[0].id);
					Luxe.timer.schedule(_gthis.load_time_spacing * _load_index,(function(_texture1) {
						return function() {
							var _load = _gthis.system.load_texture(_texture1[0].id,{ load_premultiply_alpha : _texture1[0].load_premultiply_alpha, filter_min : _texture1[0].filter_min, filter_mag : _texture1[0].filter_mag, clamp_s : _texture1[0].clamp_s, clamp_t : _texture1[0].clamp_t});
							var _item_id3 = _texture1[0].id;
							_load.then((function() {
								return function(_res3) {
									_gthis.one_loaded(_item_id3,_load_id,_res3,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
								};
							})(),(function() {
								return function(_err3) {
									_gthis.one_failed(_item_id3,_load_id,_err3,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
								};
							})());
						};
					})(_texture));
				} else {
					haxe_Log.trace("   i / parcel / " + ("" + _gthis.id + " / already had " + _texture[0].id + " loaded, skipped"),{ fileName : "Parcel.hx", lineNumber : 276, className : "luxe.Parcel", methodName : "load"});
					var _texture2 = _texture[0].id;
					var tmp5 = _gthis.system.cache.get(_texture[0].id);
					_gthis.one_loaded(_texture2,_load_id,tmp5,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
				}
			}
			var _g5 = 0;
			var _g14 = _gthis.list.fonts;
			while(_g5 < _g14.length) {
				var _font = [_g14[_g5]];
				++_g5;
				++_load_index;
				if(_gthis.loaded.indexOf(_font[0].id) == -1) {
					_gthis.loaded.push(_font[0].id);
					Luxe.timer.schedule(_gthis.load_time_spacing * _load_index,(function(_font1) {
						return function() {
							var _load1 = _gthis.system.load_font(_font1[0].id,{ texture_path : _font1[0].texture_path});
							var _item_id4 = _font1[0].id;
							_load1.then((function() {
								return function(_res4) {
									_gthis.one_loaded(_item_id4,_load_id,_res4,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
								};
							})(),(function() {
								return function(_err4) {
									_gthis.one_failed(_item_id4,_load_id,_err4,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
								};
							})());
						};
					})(_font));
				} else {
					haxe_Log.trace("   i / parcel / " + ("" + _gthis.id + " / already had " + _font[0].id + " loaded, skipped"),{ fileName : "Parcel.hx", lineNumber : 302, className : "luxe.Parcel", methodName : "load"});
					var _font2 = _font[0].id;
					var tmp6 = _gthis.system.cache.get(_font[0].id);
					_gthis.one_loaded(_font2,_load_id,tmp6,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
				}
			}
			var _g6 = 0;
			var _g15 = _gthis.list.shaders;
			while(_g6 < _g15.length) {
				var _shader = [_g15[_g6]];
				++_g6;
				++_load_index;
				if(_gthis.loaded.indexOf(_shader[0].id) == -1) {
					_gthis.loaded.push(_shader[0].id);
					Luxe.timer.schedule(_gthis.load_time_spacing * _load_index,(function(_shader1) {
						return function() {
							var _load2 = _gthis.system.load_shader(_shader1[0].id,{ frag_id : _shader1[0].frag_id, vert_id : _shader1[0].vert_id});
							var _item_id5 = _shader1[0].id;
							_load2.then((function() {
								return function(_res5) {
									_gthis.one_loaded(_item_id5,_load_id,_res5,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
								};
							})(),(function() {
								return function(_err5) {
									_gthis.one_failed(_item_id5,_load_id,_err5,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
								};
							})());
						};
					})(_shader));
				} else {
					haxe_Log.trace("   i / parcel / " + ("" + _gthis.id + " / already had " + _shader[0].id + " loaded, skipped"),{ fileName : "Parcel.hx", lineNumber : 329, className : "luxe.Parcel", methodName : "load"});
					var _shader2 = _shader[0].id;
					var tmp7 = _gthis.system.cache.get(_shader[0].id);
					_gthis.one_loaded(_shader2,_load_id,tmp7,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
				}
			}
			var _g7 = 0;
			var _g16 = _gthis.list.sounds;
			while(_g7 < _g16.length) {
				var _sound = [_g16[_g7]];
				++_g7;
				++_load_index;
				if(_gthis.loaded.indexOf(_sound[0].id) == -1) {
					_gthis.loaded.push(_sound[0].id);
					Luxe.timer.schedule(_gthis.load_time_spacing * _load_index,(function(_sound1) {
						return function() {
							var _load3 = _gthis.system.load_audio(_sound1[0].id,{ is_stream : _sound1[0].is_stream});
							var _item_id6 = _sound1[0].id;
							_load3.then((function() {
								return function(_res6) {
									_gthis.one_loaded(_item_id6,_load_id,_res6,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
								};
							})(),(function() {
								return function(_err6) {
									_gthis.one_failed(_item_id6,_load_id,_err6,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
								};
							})());
						};
					})(_sound));
				} else {
					haxe_Log.trace("   i / parcel / " + ("" + _gthis.id + " / already had " + _sound[0].id + " loaded, skipped"),{ fileName : "Parcel.hx", lineNumber : 355, className : "luxe.Parcel", methodName : "load"});
					var _sound2 = _sound[0].id;
					var tmp8 = _gthis.system.cache.get(_sound[0].id);
					_gthis.one_loaded(_sound2,_load_id,tmp8,_index += 1,_gthis.list.bytes.length + _gthis.list.texts.length + _gthis.list.jsons.length + _gthis.list.textures.length + _gthis.list.shaders.length + _gthis.list.fonts.length + _gthis.list.sounds.length);
				}
			}
		});
	}
	,one_loaded: function(_item_id,_load_id,_resource,_index,_total) {
		var _state = { id : _item_id, load_id : _load_id, resource : _resource, index : _index, total : _total};
		this.emitter.emit(3,_state);
		if(this.onprogress != null) {
			this.onprogress(_state);
		}
		if(_index == _total) {
			this.state = 2;
			this.time_to_load = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start - this.start_load;
			this.emitter.emit(4,this);
			if(this.oncomplete != null) {
				this.oncomplete(this);
			}
		}
	}
	,one_failed: function(_item_id,_load_id,_error,_index,_total) {
		var _state = { id : _item_id, load_id : _load_id, error : _error, index : _index, total : _total};
		this.emitter.emit(5,_state);
		if(this.onfailed != null) {
			this.onfailed(_state);
		}
	}
	,empty_list: function() {
		return { bytes : [], texts : [], jsons : [], textures : [], fonts : [], shaders : [], sounds : []};
	}
	,__class__: luxe_Parcel
};
var luxe_Physics = function(_core) {
	this.step_delta = 0.0166666666666666664;
	this.step_rate = 0.0166666666666666664;
	this.core = _core;
	this.emitter = new luxe_Emitter();
};
$hxClasses["luxe.Physics"] = luxe_Physics;
luxe_Physics.__name__ = true;
luxe_Physics.prototype = {
	init: function() {
		this.engines = [];
	}
	,reset: function() {
		if(this.timer != null) {
			this.timer.stop();
			this.timer = null;
		}
		if(this.step_rate != 0) {
			this.timer = Luxe.timer.schedule(this.step_rate,$bind(this,this.fixed_update),true);
		}
	}
	,fixed_update: function() {
		Luxe.debug.start(luxe_Physics.tag_physics);
		this.emitter.emit(1,this.step_delta * Luxe.core.timescale);
		this.update();
		this.emitter.emit(2,this.step_delta * Luxe.core.timescale);
		Luxe.debug.end(luxe_Physics.tag_physics);
	}
	,update: function() {
		var _g = 0;
		var _g1 = this.engines;
		while(_g < _g1.length) ++_g;
	}
	,process: function() {
		var _g = 0;
		var _g1 = this.engines;
		while(_g < _g1.length) ++_g;
	}
	,destroy: function() {
		if(this.timer != null) {
			this.timer.stop();
		}
		this.timer = null;
		var _g = 0;
		var _g1 = this.engines;
		while(_g < _g1.length) ++_g;
	}
	,__class__: luxe_Physics
};
var luxe_PhysicsEngine = function() { };
$hxClasses["luxe.PhysicsEngine"] = luxe_PhysicsEngine;
luxe_PhysicsEngine.__name__ = true;
var luxe_Resources = function() {
	this.parcels = [];
	this.emitter = new luxe_Emitter();
	this.cache = new haxe_ds_StringMap();
	this.stats = new luxe_ResourceStats();
};
$hxClasses["luxe.Resources"] = luxe_Resources;
luxe_Resources.__name__ = true;
luxe_Resources.prototype = {
	track: function(_cache) {
		if(_cache == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_cache was null"));
		}
		if(this.parcels.indexOf(_cache) != -1) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("parcels.indexOf(_cache) == -1"));
		}
		this.parcels.push(_cache);
		this.emit(11,_cache);
	}
	,add: function(resource) {
		var key = resource.id;
		var _this = this.cache;
		if(!(!(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key)))) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("!cache.exists(resource.id)"));
		}
		var key1 = resource.id;
		var _this1 = this.cache;
		if(__map_reserved[key1] != null) {
			_this1.setReserved(key1,resource);
		} else {
			_this1.h[key1] = resource;
		}
		this.emit(2,resource);
		switch(resource.resource_type) {
		case 0:
			this.stats.unknown += 1;
			break;
		case 1:
			this.stats.texts += 1;
			break;
		case 2:
			this.stats.jsons += 1;
			break;
		case 3:
			this.stats.bytes += 1;
			break;
		case 4:
			this.stats.textures += 1;
			break;
		case 5:
			this.stats.rtt += 1;
			break;
		case 6:
			this.stats.fonts += 1;
			break;
		case 7:
			this.stats.shaders += 1;
			break;
		case 8:
			this.stats.audios += 1;
			break;
		}
		this.stats.total += 1;
	}
	,remove: function(resource) {
		var key = resource.id;
		var _this = this.cache;
		if(!(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key))) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("cache.exists(resource.id)"));
		}
		this.emit(7,resource);
		switch(resource.resource_type) {
		case 0:
			this.stats.unknown += -1;
			break;
		case 1:
			this.stats.texts += -1;
			break;
		case 2:
			this.stats.jsons += -1;
			break;
		case 3:
			this.stats.bytes += -1;
			break;
		case 4:
			this.stats.textures += -1;
			break;
		case 5:
			this.stats.rtt += -1;
			break;
		case 6:
			this.stats.fonts += -1;
			break;
		case 7:
			this.stats.shaders += -1;
			break;
		case 8:
			this.stats.audios += -1;
			break;
		}
		this.stats.total += -1;
		return this.cache.remove(resource.id);
	}
	,on: function(ev,handler) {
		this.emitter.on(ev,handler);
	}
	,emit: function(ev,data) {
		this.emitter.emit(1,data);
		this.emitter.emit(ev,data);
	}
	,load_bytes: function(_id) {
		if(_id == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_id was null"));
		}
		var _resource = this.cache.get(_id);
		if(_resource != null) {
			var _g = _resource;
			_g.set_ref(_g.ref + 1);
			return snow_api_Promise.resolve(_resource);
		}
		_resource = new luxe_resource_BytesResource({ id : _id, system : this, asset : null});
		this.add(_resource);
		return _resource.reload();
	}
	,load_text: function(_id) {
		if(_id == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_id was null"));
		}
		var _resource = this.cache.get(_id);
		if(_resource != null) {
			var _g = _resource;
			_g.set_ref(_g.ref + 1);
			return snow_api_Promise.resolve(_resource);
		}
		_resource = new luxe_resource_TextResource({ id : _id, system : this, asset : null});
		this.add(_resource);
		return _resource.reload();
	}
	,load_json: function(_id) {
		if(_id == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_id was null"));
		}
		var _resource = this.cache.get(_id);
		if(_resource != null) {
			var _g = _resource;
			_g.set_ref(_g.ref + 1);
			return snow_api_Promise.resolve(_resource);
		}
		_resource = new luxe_resource_JSONResource({ id : _id, system : this, asset : null});
		this.add(_resource);
		return _resource.reload();
	}
	,load_texture: function(_id,_options) {
		if(_id == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_id was null"));
		}
		var _resource = this.cache.get(_id);
		if(_resource != null) {
			var _g = _resource;
			_g.set_ref(_g.ref + 1);
			return snow_api_Promise.resolve(_resource);
		}
		var _filter_min = null;
		var _filter_mag = null;
		var _clamp_s = null;
		var _clamp_t = null;
		var _premultiply = null;
		if(_options != null) {
			_filter_min = _options.filter_min;
			_filter_mag = _options.filter_mag;
			_clamp_s = _options.clamp_s;
			_clamp_t = _options.clamp_t;
			_premultiply = _options.load_premultiply_alpha;
		}
		_resource = new phoenix_Texture({ id : _id, system : this, filter_min : _filter_min, filter_mag : _filter_mag, clamp_s : _clamp_s, clamp_t : _clamp_t, load_premultiply_alpha : _premultiply});
		this.add(_resource);
		return _resource.reload();
	}
	,load_font: function(_id,_options) {
		if(_id == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_id was null"));
		}
		var _resource = this.cache.get(_id);
		if(_resource != null) {
			var _g = _resource;
			_g.set_ref(_g.ref + 1);
			return snow_api_Promise.resolve(_resource);
		}
		var _texture_path = null;
		if(_options != null) {
			_texture_path = _options.texture_path;
		}
		_resource = new phoenix_BitmapFont({ id : _id, system : this, texture_path : _texture_path});
		this.add(_resource);
		return _resource.reload();
	}
	,load_shader: function(_id,_options) {
		if(_id == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_id was null"));
		}
		var _resource = this.cache.get(_id);
		if(_resource != null) {
			var _g = _resource;
			_g.set_ref(_g.ref + 1);
			return snow_api_Promise.resolve(_resource);
		}
		_resource = new phoenix_Shader({ id : _id, system : this, frag_id : _options.frag_id, vert_id : _options.vert_id});
		this.add(_resource);
		return _resource.reload();
	}
	,load_audio: function(_id,_options) {
		if(_id == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_id was null"));
		}
		var _resource = this.cache.get(_id);
		if(_resource != null) {
			var _g = _resource;
			_g.set_ref(_g.ref + 1);
			return snow_api_Promise.resolve(_resource);
		}
		var _is_stream = false;
		if(_options != null) {
			_is_stream = _options.is_stream;
		}
		_resource = new luxe_resource_AudioResource({ id : _id, system : this, asset : null, is_stream : _is_stream});
		this.add(_resource);
		return _resource.reload();
	}
	,__class__: luxe_Resources
};
var luxe_ResourceStats = function() {
	this.unknown = 0;
	this.audios = 0;
	this.bytes = 0;
	this.jsons = 0;
	this.texts = 0;
	this.shaders = 0;
	this.rtt = 0;
	this.textures = 0;
	this.fonts = 0;
	this.total = 0;
};
$hxClasses["luxe.ResourceStats"] = luxe_ResourceStats;
luxe_ResourceStats.__name__ = true;
luxe_ResourceStats.prototype = {
	__class__: luxe_ResourceStats
};
var luxe_Scene = function(_name) {
	if(_name == null) {
		_name = "untitled scene";
	}
	this.entity_count = 0;
	this._has_changed = false;
	this.destroyed = false;
	this.started = false;
	this.inited = false;
	luxe_Objects.call(this,_name);
	this.entities = new haxe_ds_StringMap();
	this._delayed_init_entities = [];
	this._delayed_reset_entities = [];
	Luxe.core.emitter.on(2,$bind(this,this.init));
	Luxe.core.emitter.on(8,$bind(this,this._destroy));
	Luxe.core.emitter.on(6,$bind(this,this.update));
	Luxe.core.emitter.on(9,$bind(this,this.prerender));
	Luxe.core.emitter.on(11,$bind(this,this.postrender));
	Luxe.core.emitter.on(10,$bind(this,this.render));
	Luxe.core.emitter.on(12,$bind(this,this.keydown));
	Luxe.core.emitter.on(13,$bind(this,this.keyup));
	Luxe.core.emitter.on(14,$bind(this,this.textinput));
	Luxe.core.emitter.on(16,$bind(this,this.inputup));
	Luxe.core.emitter.on(15,$bind(this,this.inputdown));
	Luxe.core.emitter.on(18,$bind(this,this.mouseup));
	Luxe.core.emitter.on(17,$bind(this,this.mousedown));
	Luxe.core.emitter.on(19,$bind(this,this.mousemove));
	Luxe.core.emitter.on(20,$bind(this,this.mousewheel));
	Luxe.core.emitter.on(22,$bind(this,this.touchup));
	Luxe.core.emitter.on(21,$bind(this,this.touchdown));
	Luxe.core.emitter.on(23,$bind(this,this.touchmove));
	Luxe.core.emitter.on(26,$bind(this,this.gamepadup));
	Luxe.core.emitter.on(25,$bind(this,this.gamepaddown));
	Luxe.core.emitter.on(24,$bind(this,this.gamepadaxis));
	Luxe.core.emitter.on(27,$bind(this,this.gamepaddevice));
	Luxe.core.emitter.on(29,$bind(this,this.windowmoved));
	Luxe.core.emitter.on(30,$bind(this,this.windowresized));
	Luxe.core.emitter.on(31,$bind(this,this.windowsized));
	Luxe.core.emitter.on(32,$bind(this,this.windowminimized));
	Luxe.core.emitter.on(33,$bind(this,this.windowrestored));
	if(Luxe.core.inited) {
		this.init(null);
	}
	var _view = Luxe.core.debug.get_view("Scenes");
	if(_view != null) {
		_view.add_scene(this);
	}
};
$hxClasses["luxe.Scene"] = luxe_Scene;
luxe_Scene.__name__ = true;
luxe_Scene.__super__ = luxe_Objects;
luxe_Scene.prototype = $extend(luxe_Objects.prototype,{
	add: function(entity) {
		if(entity == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("entity was null" + (" ( " + "can't put entity in a scene if the entity is null." + " )")));
		}
		var _name = entity.get_name();
		if(this.entities.exists(_name)) {
			haxe_Log.trace("    i / scene / " + ("" + this.get_name() + " / adding a second entity named " + _name + "!\n                This will replace the existing one, possibly leaving the previous one in limbo."),{ fileName : "Scene.hx", lineNumber : 96, className : "luxe.Scene", methodName : "handle_duplicate_warning"});
		}
		entity.set_scene(this);
		entity.set_scene_root(this);
		var key = entity.get_name();
		var _this = this.entities;
		if(__map_reserved[key] != null) {
			_this.setReserved(key,entity);
		} else {
			_this.h[key] = entity;
		}
		this.entity_count++;
		if(this.inited) {
			this._delayed_init_entities.push(entity);
		}
		if(this.started) {
			this._delayed_reset_entities.push(entity);
		}
		this._has_changed = true;
	}
	,remove: function(entity) {
		if(entity == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("entity was null" + (" ( " + "can't remove entity from a scene if the entity is null." + " )")));
		}
		this._has_changed = true;
		if(entity.get_scene() == this) {
			entity.set_scene(null);
			this.entity_count--;
			return this.entities.remove(entity.get_name());
		} else {
			haxe_Log.trace("    i / scene / " + ("can't remove the entity(`" + entity.get_name() + "`) from this scene(`" + this.get_name() + "`), it is not mine (entity.scene != this)"),{ fileName : "Scene.hx", lineNumber : 147, className : "luxe.Scene", methodName : "remove"});
			return false;
		}
	}
	,render: function(_) {
		this.emit(10);
	}
	,prerender: function(_) {
		this.emit(9);
	}
	,postrender: function(_) {
		this.emit(11);
	}
	,keydown: function(e) {
		this.emit(12,e);
	}
	,keyup: function(e) {
		this.emit(13,e);
	}
	,textinput: function(e) {
		this.emit(14,e);
	}
	,mousedown: function(e) {
		this.emit(17,e);
	}
	,mousewheel: function(e) {
		this.emit(20,e);
	}
	,mouseup: function(e) {
		this.emit(18,e);
	}
	,mousemove: function(e) {
		this.emit(19,e);
	}
	,touchdown: function(event) {
		this.emit(21,event);
	}
	,touchup: function(event) {
		this.emit(22,event);
	}
	,touchmove: function(event) {
		this.emit(23,event);
	}
	,gamepadaxis: function(event) {
		this.emit(24,event);
	}
	,gamepadup: function(event) {
		this.emit(26,event);
	}
	,gamepaddown: function(event) {
		this.emit(25,event);
	}
	,gamepaddevice: function(event) {
		this.emit(27,event);
	}
	,windowmoved: function(event) {
		this.emit(29,event);
	}
	,windowresized: function(event) {
		this.emit(30,event);
	}
	,windowsized: function(event) {
		this.emit(31,event);
	}
	,windowminimized: function(event) {
		this.emit(32,event);
	}
	,windowrestored: function(event) {
		this.emit(33,event);
	}
	,inputdown: function(_event) {
		this.emit(15,_event);
	}
	,inputup: function(_event) {
		this.emit(16,_event);
	}
	,_destroy: function(_) {
		this.destroy();
	}
	,destroy: function() {
		if(this.destroyed != false) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("destroyed == false" + (" ( " + ("scene / destroying repeatedly `" + this.get_name() + "`") + " )")));
		}
		this.destroyed = true;
		Luxe.core.emitter.off(2,$bind(this,this.init));
		Luxe.core.emitter.off(8,$bind(this,this._destroy));
		Luxe.core.emitter.off(6,$bind(this,this.update));
		Luxe.core.emitter.off(9,$bind(this,this.prerender));
		Luxe.core.emitter.off(11,$bind(this,this.postrender));
		Luxe.core.emitter.off(10,$bind(this,this.render));
		Luxe.core.emitter.off(12,$bind(this,this.keydown));
		Luxe.core.emitter.off(13,$bind(this,this.keyup));
		Luxe.core.emitter.off(14,$bind(this,this.textinput));
		Luxe.core.emitter.off(16,$bind(this,this.inputup));
		Luxe.core.emitter.off(15,$bind(this,this.inputdown));
		Luxe.core.emitter.off(18,$bind(this,this.mouseup));
		Luxe.core.emitter.off(17,$bind(this,this.mousedown));
		Luxe.core.emitter.off(19,$bind(this,this.mousemove));
		Luxe.core.emitter.off(20,$bind(this,this.mousewheel));
		Luxe.core.emitter.off(22,$bind(this,this.touchup));
		Luxe.core.emitter.off(21,$bind(this,this.touchdown));
		Luxe.core.emitter.off(23,$bind(this,this.touchmove));
		Luxe.core.emitter.off(26,$bind(this,this.gamepadup));
		Luxe.core.emitter.off(25,$bind(this,this.gamepaddown));
		Luxe.core.emitter.off(24,$bind(this,this.gamepadaxis));
		Luxe.core.emitter.off(27,$bind(this,this.gamepaddevice));
		Luxe.core.emitter.off(29,$bind(this,this.windowmoved));
		Luxe.core.emitter.off(30,$bind(this,this.windowresized));
		Luxe.core.emitter.off(31,$bind(this,this.windowsized));
		Luxe.core.emitter.off(32,$bind(this,this.windowminimized));
		Luxe.core.emitter.off(33,$bind(this,this.windowrestored));
		this.emit(8);
		var _view = Luxe.core.debug.get_view("Scenes");
		if(_view != null) {
			_view.remove_scene(this);
		}
	}
	,_do_init: function() {
		var _g_index;
		var _before_count = this.get_length();
		if(this.entity_count > 0) {
			var _this = this.entities;
			var entity = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
			while(entity.hasNext()) {
				var entity1 = entity.next();
				if(entity1 != null) {
					if(!entity1.inited) {
						entity1.init();
						entity1.emit(2);
						if(entity1.component_count > 0) {
							var _this1 = entity1._components.components;
							_g_index = 0;
							while(_g_index < _this1._keys.length) _this1.map.get(_this1._keys[_g_index++]);
						}
						if(entity1.children.length > 0) {
							var _g = 0;
							var _g1 = entity1.children;
							while(_g < _g1.length) {
								var _child = _g1[_g];
								++_g;
								_child._init();
							}
						}
						entity1.inited = true;
					}
				}
			}
		}
		return _before_count != this.get_length();
	}
	,init: function(_) {
		var _keep_going = true;
		while(_keep_going) _keep_going = this._do_init();
		this.inited = true;
		this.emit(2);
		this.reset();
	}
	,reset: function() {
		this.started = false;
		this.emit(3);
		this.started = true;
	}
	,update: function(dt) {
		var _g_index;
		Luxe.core.debug.start("scene." + this.get_name());
		this.handle_delayed_additions();
		this.emit(6,dt);
		if(this.entity_count > 0) {
			var _this = this.entities;
			var entity = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
			while(entity.hasNext()) {
				var entity1 = entity.next();
				if(entity1 != null) {
					if(!entity1.destroyed) {
						if(!(!entity1.get_active() || !entity1.inited || !entity1.started)) {
							var _this1 = entity1.get_transform();
							if(_this1.parent != null && _this1.parent.dirty) {
								_this1.parent.clean_check();
							}
							if(_this1.dirty && !_this1._cleaning && !_this1.manual_update) {
								_this1.clean();
							}
							entity1.update(dt);
							if(entity1.events != null) {
								entity1.events.process();
							}
							if(entity1.component_count > 0) {
								var _this2 = entity1._components.components;
								_g_index = 0;
								while(_g_index < _this2._keys.length) _this2.map.get(_this2._keys[_g_index++]);
							}
							if(entity1.children != null && entity1.children.length > 0) {
								var _g = 0;
								var _g1 = entity1.children;
								while(_g < _g1.length) {
									var _child = _g1[_g];
									++_g;
									_child._update(dt);
								}
							}
						}
					}
				}
			}
		}
		Luxe.core.debug.end("scene." + this.get_name());
	}
	,handle_delayed_additions: function() {
		var _g_index;
		var _g_index1;
		this._delayed_init_entities.length != 0 || this._delayed_reset_entities.length != 0;
		if(this._delayed_init_entities.length > 0) {
			var _g = 0;
			var _g1 = this._delayed_init_entities;
			while(_g < _g1.length) {
				var entity = _g1[_g];
				++_g;
				if(entity.destroyed) {
					continue;
				}
				if(!entity.inited) {
					entity.init();
					entity.emit(2);
					if(entity.component_count > 0) {
						var _this = entity._components.components;
						_g_index1 = 0;
						while(_g_index1 < _this._keys.length) _this.map.get(_this._keys[_g_index1++]);
					}
					if(entity.children.length > 0) {
						var _g2 = 0;
						var _g11 = entity.children;
						while(_g2 < _g11.length) {
							var _child = _g11[_g2];
							++_g2;
							_child._init();
						}
					}
					entity.inited = true;
				}
			}
			this._delayed_init_entities = null;
			this._delayed_init_entities = [];
		}
		if(this._delayed_reset_entities.length > 0) {
			var _g3 = 0;
			var _g12 = this._delayed_reset_entities;
			while(_g3 < _g12.length) {
				var entity1 = _g12[_g3];
				++_g3;
				if(entity1.destroyed) {
					continue;
				}
				entity1.emit(3);
				if(entity1.component_count > 0) {
					var _this1 = entity1._components.components;
					_g_index = 0;
					while(_g_index < _this1._keys.length) _this1.map.get(_this1._keys[_g_index++]);
				}
				if(entity1.children.length > 0) {
					var _g4 = 0;
					var _g13 = entity1.children;
					while(_g4 < _g13.length) {
						var _child1 = _g13[_g4];
						++_g4;
						_child1._reset(null);
					}
				}
				var _rate = entity1.fixed_rate;
				if(entity1.fixed_rate_timer != null) {
					entity1.fixed_rate_timer.stop();
					entity1.fixed_rate_timer = null;
				}
				if(_rate != 0 && entity1.get_parent() == null && !entity1.destroyed) {
					entity1.fixed_rate_timer = new snow_api_Timer(_rate);
					entity1.fixed_rate_timer.run = $bind(entity1,entity1._fixed_update);
				}
				entity1.started = true;
			}
			this._delayed_reset_entities = null;
			this._delayed_reset_entities = [];
		}
	}
	,get_length: function() {
		return Lambda.count(this.entities);
	}
	,__class__: luxe_Scene
	,__properties__: $extend(luxe_Objects.prototype.__properties__,{get_length:"get_length"})
});
var luxe_Screen = function(_core,_w,_h) {
	this.core = _core;
	this.cursor = new luxe_Cursor(this);
	this.width = _w;
	this.height = _h;
};
$hxClasses["luxe.Screen"] = luxe_Screen;
luxe_Screen.__name__ = true;
luxe_Screen.prototype = {
	internal_resized: function(_w,_h) {
		this.width = _w;
		this.height = _h;
	}
	,get_mid: function() {
		return new phoenix_Vector(Math.round(this.get_w() / 2),Math.round(this.get_h() / 2));
	}
	,get_w: function() {
		return this.width | 0;
	}
	,get_h: function() {
		return this.height | 0;
	}
	,__class__: luxe_Screen
	,__properties__: {get_h:"get_h",get_w:"get_w",get_mid:"get_mid"}
};
var luxe_Cursor = function(_screen) {
	this.ignore = false;
	this.grab = false;
	this.screen = _screen;
	this.pos = new phoenix_Vector();
};
$hxClasses["luxe.Cursor"] = luxe_Cursor;
luxe_Cursor.__name__ = true;
luxe_Cursor.prototype = {
	get_grab: function() {
		return this.grab;
	}
	,set_grab: function(_grab) {
		this.screen.core.app.runtime.window_grab(_grab);
		return this.grab = _grab;
	}
	,__class__: luxe_Cursor
	,__properties__: {set_grab:"set_grab",get_grab:"get_grab"}
};
var luxe_Sprite = function(options) {
	this.flipy = false;
	this.flipx = false;
	this.centered = true;
	this.set_uv(new phoenix_Rectangle());
	if(options == null) {
		throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("options was null" + (" ( " + "Sprite requires non-null options" + " )")));
	}
	if(options.centered != null) {
		this.set_centered(options.centered);
	}
	if(options.flipx != null) {
		this.set_flipx(options.flipx);
	}
	if(options.flipy != null) {
		this.set_flipy(options.flipy);
	}
	luxe_Visual.call(this,options);
};
$hxClasses["luxe.Sprite"] = luxe_Sprite;
luxe_Sprite.__name__ = true;
luxe_Sprite.__super__ = luxe_Visual;
luxe_Sprite.prototype = $extend(luxe_Visual.prototype,{
	on_geometry_created: function() {
		luxe_Visual.prototype.on_geometry_created.call(this);
		if(this.texture != null) {
			if(this.options.uv == null) {
				this.options.uv = new phoenix_Rectangle(0,0,this.texture.width,this.texture.height);
			}
			this.set_uv(this.options.uv);
			if(this.texture.resource_type == 5) {
				this.set_flipy(true);
			}
		}
		this.set_centered(!(!this.centered));
		this.set_flipx(!(!this.flipx));
		this.set_flipy(!(!this.flipy));
	}
	,set_geometry: function(_g) {
		this.geometry_quad = _g;
		return luxe_Visual.prototype.set_geometry.call(this,_g);
	}
	,ondestroy: function() {
		this.set_uv(null);
		this.geometry_quad = null;
		luxe_Visual.prototype.ondestroy.call(this);
	}
	,set_uv: function(_uv) {
		if(_uv == null) {
			return this.uv = _uv;
		}
		if(this.geometry_quad != null) {
			var _this = this.geometry_quad;
			if(_this.state.texture == null) {
				throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("texture was null" + (" ( " + "QuadGeometry; Calling UV on a geometry with null texture." + " )")));
			}
			var tlx = _uv.x / _this.state.texture.width_actual;
			var tly = _uv.y / _this.state.texture.height_actual;
			var szx = _uv.w / _this.state.texture.width_actual;
			var szy = _uv.h / _this.state.texture.height_actual;
			if(_this.vertices.length != 0) {
				var tl_x = tlx;
				var tl_y = tly;
				_this._uv_x = tlx;
				_this._uv_y = tly;
				_this._uv_w = szx;
				_this._uv_h = szy;
				var tr_x = tlx + szx;
				var tr_y = tly;
				var br_x = tlx + szx;
				var br_y = tly + szy;
				var bl_x = tlx;
				var bl_y = tly + szy;
				var tmp_x = 0.0;
				var tmp_y = 0.0;
				var rotations = _this.uv_angle / 90 | 0;
				rotations -= 4 * Math.floor(rotations / 4);
				var _g1 = 0;
				var _g = rotations;
				while(_g1 < _g) {
					++_g1;
					tmp_x = tl_x;
					tl_x = bl_x;
					bl_x = br_x;
					br_x = tr_x;
					tr_x = tmp_x;
					tmp_y = tl_y;
					tl_y = bl_y;
					bl_y = br_y;
					br_y = tr_y;
					tr_y = tmp_y;
				}
				if(_this.flipy) {
					tmp_y = bl_y;
					bl_y = tl_y;
					tl_y = tmp_y;
					tmp_x = bl_x;
					bl_x = tl_x;
					tl_x = tmp_x;
					tmp_y = br_y;
					br_y = tr_y;
					tr_y = tmp_y;
					tmp_x = br_x;
					br_x = tr_x;
					tr_x = tmp_x;
				}
				if(_this.flipx) {
					tmp_x = tr_x;
					tr_x = tl_x;
					tl_x = tmp_x;
					tmp_y = tr_y;
					tr_y = tl_y;
					tl_y = tmp_y;
					tmp_x = br_x;
					br_x = bl_x;
					bl_x = tmp_x;
					tmp_y = br_y;
					br_y = bl_y;
					bl_y = tmp_y;
				}
				var _this1 = _this.vertices[0].uv.uv0;
				_this1.u = tl_x;
				_this1.v = tl_y;
				var _this2 = _this.vertices[1].uv.uv0;
				_this2.u = tr_x;
				_this2.v = tr_y;
				var _this3 = _this.vertices[2].uv.uv0;
				_this3.u = br_x;
				_this3.v = br_y;
				var _this4 = _this.vertices[3].uv.uv0;
				_this4.u = bl_x;
				_this4.v = bl_y;
				var _this5 = _this.vertices[4].uv.uv0;
				_this5.u = tl_x;
				_this5.v = tl_y;
				var _this6 = _this.vertices[5].uv.uv0;
				_this6.u = br_x;
				_this6.v = br_y;
				_this.set_dirty(true);
			}
		}
		this.uv = _uv;
		phoenix_Rectangle.listen(this.uv,$bind(this,this._uv_change));
		return this.uv;
	}
	,set_flipy: function(_v) {
		if(_v == this.flipy) {
			return this.flipy;
		}
		if(this.geometry_quad != null) {
			this.geometry_quad.set_flipy(_v);
		}
		return this.flipy = _v;
	}
	,set_flipx: function(_v) {
		if(_v == this.flipx) {
			return this.flipx;
		}
		if(this.geometry_quad != null) {
			this.geometry_quad.set_flipx(_v);
		}
		return this.flipx = _v;
	}
	,set_size: function(_v) {
		if(this.geometry_quad != null) {
			this.geometry_quad.resize_xy(_v.x,_v.y);
			if(!this._has_custom_origin) {
				if(this.centered) {
					var _this = new phoenix_Vector(_v.x,_v.y,_v.z,_v.w);
					var _x = _this.x / 2;
					var _y = _this.y / 2;
					var _z = _this.z / 2;
					var prev = _this.ignore_listeners;
					_this.ignore_listeners = true;
					_this.x = _x;
					if(!_this._construct) {
						if(_this.listen_x != null && !_this.ignore_listeners) {
							_this.listen_x(_x);
						}
					}
					_this.y = _y;
					if(!_this._construct) {
						if(_this.listen_y != null && !_this.ignore_listeners) {
							_this.listen_y(_y);
						}
					}
					_this.z = _z;
					if(!_this._construct) {
						if(_this.listen_z != null && !_this.ignore_listeners) {
							_this.listen_z(_z);
						}
					}
					_this.ignore_listeners = prev;
					if(_this.listen_x != null && !_this.ignore_listeners) {
						_this.listen_x(_this.x);
					}
					if(_this.listen_y != null && !_this.ignore_listeners) {
						_this.listen_y(_this.y);
					}
					if(_this.listen_z != null && !_this.ignore_listeners) {
						_this.listen_z(_this.z);
					}
					this.set_origin(_this);
				}
			}
		}
		return luxe_Visual.prototype.set_size.call(this,_v);
	}
	,set_centered: function(_c) {
		if(this.size != null) {
			if(_c) {
				this.set_origin(new phoenix_Vector(this.size.x / 2,this.size.y / 2));
			} else {
				this.set_origin(new phoenix_Vector());
			}
		}
		return this.centered = _c;
	}
	,_uv_change: function(_v) {
		this.set_uv(this.uv);
	}
	,init: function() {
		luxe_Visual.prototype.init.call(this);
	}
	,__class__: luxe_Sprite
	,__properties__: $extend(luxe_Visual.prototype.__properties__,{set_uv:"set_uv",set_flipy:"set_flipy",set_flipx:"set_flipx",set_centered:"set_centered"})
});
var luxe_Text = function(_options) {
	this.text_options = _options;
	this.text_bounds = new phoenix_Rectangle();
	var _batcher = null;
	if(_options.no_batcher_add == null || _options.no_batcher_add == false) {
		if(_options.batcher != null) {
			_batcher = _options.batcher;
		} else {
			_batcher = Luxe.renderer.batcher;
		}
	}
	this.geom = new phoenix_geometry_TextGeometry({ batcher : _batcher, depth : _options.depth, visible : _options.visible, immediate : _options.immediate, color : _options.color, shader : _options.shader, texture : _options.texture, text : _options.text, font : _options.font, point_size : _options.point_size, line_spacing : _options.line_spacing, letter_spacing : _options.letter_spacing, bounds : _options.bounds, bounds_wrap : _options.bounds_wrap, align : _options.align, align_vertical : _options.align_vertical, sdf : _options.sdf, smoothness : _options.smoothness, thickness : _options.thickness, outline : _options.outline, outline_color : _options.outline_color, glow_threshold : _options.glow_threshold, glow_amount : _options.glow_amount, glow_color : _options.glow_color});
	this.geom.emitter.on(1,$bind(this,this.on_geom_text_update));
	_options.geometry = this.geom;
	_options.shader = this.geom.state.shader;
	luxe_Visual.call(this,_options);
	var _x = this.get_pos().x;
	var _y = this.get_pos().y;
	var _tw = this.geom.text_width;
	var _th = this.geom.text_height;
	var _bh = this.geom.text_height;
	if(this.get_bounds() != null) {
		_bh = this.get_bounds().h;
		_x = this.get_bounds().x;
		_y = this.get_bounds().y;
		var _x1;
		switch(this.get_align()) {
		case 1:
			_x1 = _tw;
			break;
		case 2:
			_x1 = _tw / 2;
			break;
		default:
			_x1 = 0.0;
		}
		_x += _x1;
		var _y1;
		switch(this.get_align_vertical()) {
		case 2:
			_y1 = _bh / 2 - _th / 2;
			break;
		case 4:
			_y1 = _bh - _th;
			break;
		default:
			_y1 = 0.0;
		}
		_y += _y1;
	} else {
		var _x2;
		switch(this.get_align()) {
		case 1:
			_x2 = _tw;
			break;
		case 2:
			_x2 = _tw / 2;
			break;
		default:
			_x2 = 0.0;
		}
		_x -= _x2;
		var _y2;
		switch(this.get_align_vertical()) {
		case 2:
			_y2 = _th / 2;
			break;
		case 4:
			_y2 = _th;
			break;
		default:
			_y2 = 0.0;
		}
		_y -= _y2;
	}
	this.text_bounds.set(_x,_y,_tw,_th);
};
$hxClasses["luxe.Text"] = luxe_Text;
luxe_Text.__name__ = true;
luxe_Text.__super__ = luxe_Visual;
luxe_Text.prototype = $extend(luxe_Visual.prototype,{
	set_text: function(_s) {
		return this.geom.set_text(_s);
	}
	,get_bounds: function() {
		return this.geom.bounds;
	}
	,set_bounds: function(_b) {
		return this.geom.set_bounds(_b);
	}
	,get_align: function() {
		return this.geom.align;
	}
	,get_align_vertical: function() {
		return this.geom.align_vertical;
	}
	,set_pos_from_transform: function(_p) {
		luxe_Visual.prototype.set_pos_from_transform.call(this,_p);
		var _x = this.get_pos().x;
		var _y = this.get_pos().y;
		var _tw = this.geom.text_width;
		var _th = this.geom.text_height;
		var _bh = this.geom.text_height;
		if(this.get_bounds() != null) {
			_bh = this.get_bounds().h;
			_x = this.get_bounds().x;
			_y = this.get_bounds().y;
			var _x1;
			switch(this.get_align()) {
			case 1:
				_x1 = _tw;
				break;
			case 2:
				_x1 = _tw / 2;
				break;
			default:
				_x1 = 0.0;
			}
			_x += _x1;
			var _y1;
			switch(this.get_align_vertical()) {
			case 2:
				_y1 = _bh / 2 - _th / 2;
				break;
			case 4:
				_y1 = _bh - _th;
				break;
			default:
				_y1 = 0.0;
			}
			_y += _y1;
		} else {
			var _x2;
			switch(this.get_align()) {
			case 1:
				_x2 = _tw;
				break;
			case 2:
				_x2 = _tw / 2;
				break;
			default:
				_x2 = 0.0;
			}
			_x -= _x2;
			var _y2;
			switch(this.get_align_vertical()) {
			case 2:
				_y2 = _th / 2;
				break;
			case 4:
				_y2 = _th;
				break;
			default:
				_y2 = 0.0;
			}
			_y -= _y2;
		}
		this.text_bounds.set(_x,_y,_tw,_th);
		this.text_options.pos = this.get_pos();
	}
	,on_geom_text_update: function(_) {
		var _x = this.get_pos().x;
		var _y = this.get_pos().y;
		var _tw = this.geom.text_width;
		var _th = this.geom.text_height;
		var _bh = this.geom.text_height;
		if(this.get_bounds() != null) {
			_bh = this.get_bounds().h;
			_x = this.get_bounds().x;
			_y = this.get_bounds().y;
			var _x1;
			switch(this.get_align()) {
			case 1:
				_x1 = _tw;
				break;
			case 2:
				_x1 = _tw / 2;
				break;
			default:
				_x1 = 0.0;
			}
			_x += _x1;
			var _y1;
			switch(this.get_align_vertical()) {
			case 2:
				_y1 = _bh / 2 - _th / 2;
				break;
			case 4:
				_y1 = _bh - _th;
				break;
			default:
				_y1 = 0.0;
			}
			_y += _y1;
		} else {
			var _x2;
			switch(this.get_align()) {
			case 1:
				_x2 = _tw;
				break;
			case 2:
				_x2 = _tw / 2;
				break;
			default:
				_x2 = 0.0;
			}
			_x -= _x2;
			var _y2;
			switch(this.get_align_vertical()) {
			case 2:
				_y2 = _th / 2;
				break;
			case 4:
				_y2 = _th;
				break;
			default:
				_y2 = 0.0;
			}
			_y -= _y2;
		}
		this.text_bounds.set(_x,_y,_tw,_th);
	}
	,ondestroy: function() {
		this.geom = null;
		this.text_options = null;
		this.text_bounds = null;
		luxe_Visual.prototype.ondestroy.call(this);
	}
	,init: function() {
		luxe_Visual.prototype.init.call(this);
	}
	,__class__: luxe_Text
	,__properties__: $extend(luxe_Visual.prototype.__properties__,{get_align_vertical:"get_align_vertical",get_align:"get_align",set_bounds:"set_bounds",get_bounds:"get_bounds",set_text:"set_text"})
});
var luxe_Timer = function(_core) {
	this.core = _core;
	this.timers = [];
};
$hxClasses["luxe.Timer"] = luxe_Timer;
luxe_Timer.__name__ = true;
luxe_Timer.prototype = {
	destroy: function() {
		this.reset();
	}
	,reset: function() {
		var _g = 0;
		var _g1 = this.timers;
		while(_g < _g1.length) {
			var t = _g1[_g];
			++_g;
			t.stop();
			t = null;
		}
		this.timers = null;
		this.timers = [];
	}
	,schedule: function(_time_in_seconds,_on_time,repeat) {
		if(repeat == null) {
			repeat = false;
		}
		var _gthis = this;
		var t = new snow_api_Timer(_time_in_seconds);
		t.run = function() {
			if(!repeat) {
				t.stop();
				HxOverrides.remove(_gthis.timers,t);
			}
			_on_time();
		};
		this.timers.push(t);
		return t;
	}
	,__class__: luxe_Timer
};
var luxe_components_Components = function(_entity) {
	this.components = new luxe_structural_OrderedMap_$String_$luxe_$Component(new haxe_ds_StringMap());
	this.entity = _entity;
};
$hxClasses["luxe.components.Components"] = luxe_components_Components;
luxe_components_Components.__name__ = true;
luxe_components_Components.prototype = {
	destroy: function() {
		this.components.map = null;
		this.components = null;
		this.entity = null;
	}
	,__class__: luxe_components_Components
};
var luxe_debug_DebugView = function(_debug) {
	this.visible = false;
	luxe_Objects.call(this);
	this.debug = _debug;
};
$hxClasses["luxe.debug.DebugView"] = luxe_debug_DebugView;
luxe_debug_DebugView.__name__ = true;
luxe_debug_DebugView.__super__ = luxe_Objects;
luxe_debug_DebugView.prototype = $extend(luxe_Objects.prototype,{
	refresh: function() {
	}
	,process: function() {
	}
	,onmousewheel: function(e) {
	}
	,onkeydown: function(e) {
	}
	,onwindowsized: function(e) {
	}
	,create: function() {
	}
	,show: function() {
		this.visible = true;
	}
	,hide: function() {
		this.visible = false;
	}
	,__class__: luxe_debug_DebugView
});
var luxe_debug_Inspector = function(_options) {
	this.set_size(new phoenix_Vector(Luxe.core.screen.get_w() * 0.2 | 0,Luxe.core.screen.get_h() * 0.6 | 0));
	this.set_pos(new phoenix_Vector(Luxe.core.screen.get_w() / 2 - this.size.x / 2,Luxe.core.screen.get_h() / 2 - this.size.y / 2));
	this.batcher = Luxe.renderer.batcher;
	if(_options != null) {
		if(_options.batcher != null) {
			this.batcher = _options.batcher;
		}
		if(_options.size != null) {
			this.set_size(_options.size);
		}
		if(_options.pos != null) {
			this.set_pos(_options.pos);
		}
	}
};
$hxClasses["luxe.debug.Inspector"] = luxe_debug_Inspector;
luxe_debug_Inspector.__name__ = true;
luxe_debug_Inspector.prototype = {
	refresh: function() {
		if(this.window == null) {
			this.create_window();
		}
		if(this.onrefresh != null) {
			this.onrefresh();
		}
	}
	,show: function() {
		this.refresh();
		this.window.set_visible(true);
		this.title.set_visible(true);
		this.version.set_visible(true);
	}
	,hide: function() {
		this.window.set_visible(false);
		this.title.set_visible(false);
		this.version.set_visible(false);
	}
	,set_size: function(_size) {
		if(_size != null && this.window != null) {
			this.window.set_size(_size);
			this.window.geometry.set_dirty(true);
		}
		if(this.version != null) {
			this.version.set_pos(new phoenix_Vector(this.pos.x + (_size.x - 14),this.pos.y + 6));
		}
		return this.size = _size;
	}
	,set_pos: function(_pos) {
		if(_pos != null && this.window != null) {
			this.window.set_pos(_pos);
			this.window.geometry.set_dirty(true);
		}
		if(this.title != null) {
			this.title.set_pos(new phoenix_Vector(_pos.x + 14,_pos.y + 6));
		}
		if(this.version != null) {
			this.version.set_pos(new phoenix_Vector(_pos.x + (this.size.x - 14),_pos.y + 6));
		}
		return this.pos = _pos;
	}
	,create_window: function() {
		this.window = new luxe_Sprite({ name : "debug.window", batcher : this.batcher, no_scene : true, depth : 999.1, visible : false, color : new phoenix_Color().rgb(1447449), centered : false, size : this.size, pos : this.pos});
		this.title = new luxe_Text({ name : "debug.title", batcher : this.batcher, no_scene : true, depth : 999.2, visible : false, color : new phoenix_Color().rgb(16121979), pos : new phoenix_Vector(this.pos.x + 14,this.pos.y + 6), text : "Inspector", point_size : 15, align : 0});
		var tmp = this.batcher;
		var tmp1 = new phoenix_Color().rgb(5526617);
		var tmp2 = new phoenix_Vector(this.pos.x + (this.size.x - 14),this.pos.y + 6);
		var _this = Luxe.core;
		this.version = new luxe_Text({ name : "debug.version", batcher : tmp, no_scene : true, depth : 999.2, visible : false, color : tmp1, pos : tmp2, text : "" + ("" + _this.build + " / debug:" + Std.string(_this.app.debug) + " / os:" + _this.app.os + " / platform:" + _this.app.platform), point_size : 13, align : 1});
		this.window.set_locked(true);
		this.window.geometry.id = "debug.Inspector";
		this.title.geometry.id = "debug.title.text";
		this.version.geometry.id = "debug.version.text";
	}
	,__class__: luxe_debug_Inspector
	,__properties__: {set_size:"set_size",set_pos:"set_pos"}
};
var phoenix_Color = function(_r,_g,_b,_a) {
	if(_a == null) {
		_a = 1.0;
	}
	if(_b == null) {
		_b = 1.0;
	}
	if(_g == null) {
		_g = 1.0;
	}
	if(_r == null) {
		_r = 1.0;
	}
	this.refreshing = false;
	this.is_hsv = false;
	this.is_hsl = false;
	this.a = 1.0;
	this.b = 1.0;
	this.g = 1.0;
	this.r = 1.0;
	this.set_r(_r);
	this.set_g(_g);
	this.set_b(_b);
	this.a = _a;
};
$hxClasses["phoenix.Color"] = phoenix_Color;
phoenix_Color.__name__ = true;
phoenix_Color.random = function(_include_alpha) {
	if(_include_alpha == null) {
		_include_alpha = false;
	}
	return new phoenix_Color(Math.random(),Math.random(),Math.random(),_include_alpha ? Math.random() : 1.0);
};
phoenix_Color.prototype = {
	set_r: function(_r) {
		this.r = _r;
		if(!this.refreshing) {
			if(this.is_hsl) {
				this.fromColor(this);
			} else if(this.is_hsv) {
				this.fromColor(this);
			}
		}
		return this.r;
	}
	,set_g: function(_g) {
		this.g = _g;
		if(!this.refreshing) {
			if(this.is_hsl) {
				this.fromColor(this);
			} else if(this.is_hsv) {
				this.fromColor(this);
			}
		}
		return this.g;
	}
	,set_b: function(_b) {
		this.b = _b;
		if(!this.refreshing) {
			if(this.is_hsl) {
				this.fromColor(this);
			} else if(this.is_hsv) {
				this.fromColor(this);
			}
		}
		return this.b;
	}
	,maxRGB: function() {
		return Math.max(this.r,Math.max(this.g,this.b));
	}
	,minRGB: function() {
		return Math.min(this.r,Math.min(this.g,this.b));
	}
	,rgb: function(_rgb) {
		if(_rgb == null) {
			_rgb = 16777215;
		}
		this.from_int(_rgb);
		return this;
	}
	,fromColorHSV: function(_color_hsv) {
		var d = _color_hsv.h % 360 / 60;
		if(d < 0) {
			d += 6;
		}
		var hf = Math.floor(d);
		var f = d - hf;
		var v = _color_hsv.v;
		var p = _color_hsv.v * (1 - _color_hsv.s);
		var q = _color_hsv.v * (1 - f * _color_hsv.s);
		var t = _color_hsv.v * (1 - (1 - f) * _color_hsv.s);
		switch(hf % 6) {
		case 0:
			this.set_r(v);
			this.set_g(t);
			this.set_b(p);
			break;
		case 1:
			this.set_r(q);
			this.set_g(v);
			this.set_b(p);
			break;
		case 2:
			this.set_r(p);
			this.set_g(v);
			this.set_b(t);
			break;
		case 3:
			this.set_r(p);
			this.set_g(q);
			this.set_b(v);
			break;
		case 4:
			this.set_r(t);
			this.set_g(p);
			this.set_b(v);
			break;
		case 5:
			this.set_r(v);
			this.set_g(p);
			this.set_b(q);
			break;
		}
		this.a = _color_hsv.a;
	}
	,fromColorHSL: function(_color_hsl) {
		var q = 1;
		if(_color_hsl.l < 0.5) {
			q = _color_hsl.l * (1 + _color_hsl.s);
		} else {
			q = _color_hsl.l + _color_hsl.s - _color_hsl.l * _color_hsl.s;
		}
		var p = 2 * _color_hsl.l - q;
		var hk = _color_hsl.h % 360 / 360;
		var tc = [hk + 0.333333333333333315,hk,hk - 0.333333333333333315];
		var _g1 = 0;
		var _g = tc.length;
		while(_g1 < _g) {
			var n = _g1++;
			var t = tc[n];
			if(t < 0) {
				++t;
			}
			if(t > 1) {
				--t;
			}
			tc[n] = t < 0.166666666666666657 ? p + (q - p) * 6 * t : t < 0.5 ? q : t < 0.66666666666666663 ? p + (q - p) * 6 * (0.66666666666666663 - t) : p;
		}
		this.set_r(tc[0]);
		this.set_g(tc[1]);
		this.set_b(tc[2]);
		this.a = _color_hsl.a;
		return this;
	}
	,from_int: function(_i) {
		this.set_r((_i >> 16) / 255);
		this.set_g((_i >> 8 & 255) / 255);
		this.set_b((_i & 255) / 255);
	}
	,__class__: phoenix_Color
	,__properties__: {set_b:"set_b",set_g:"set_g",set_r:"set_r"}
};
var luxe_debug_ProfilerDebugView = function(_debug) {
	this._setup = false;
	luxe_debug_DebugView.call(this,_debug);
	this.set_name("Profiler");
	luxe_debug_ProfilerDebugView.lists = new haxe_ds_StringMap();
};
$hxClasses["luxe.debug.ProfilerDebugView"] = luxe_debug_ProfilerDebugView;
luxe_debug_ProfilerDebugView.__name__ = true;
luxe_debug_ProfilerDebugView.start = function(_id,_max) {
	var _this = luxe_debug_ProfilerDebugView.lists;
	var _item = __map_reserved[_id] != null ? _this.getReserved(_id) : _this.h[_id];
	if(_item == null) {
		_item = new luxe_debug__$ProfilerDebugView_ProfilerValue(_id,new luxe_debug__$ProfilerDebugView_ProfilerBar(_id,_max,new phoenix_Color().rgb(16121979)));
		_item.bar.set_pos(new phoenix_Vector(Luxe.debug.padding.x * 2,Luxe.debug.padding.y * 3 + Lambda.count(luxe_debug_ProfilerDebugView.lists) * 20));
		var _this1 = luxe_debug_ProfilerDebugView.lists;
		if(__map_reserved[_id] != null) {
			_this1.setReserved(_id,_item);
		} else {
			_this1.h[_id] = _item;
		}
	}
	_item.start = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
};
luxe_debug_ProfilerDebugView.end = function(_id) {
	var _this = luxe_debug_ProfilerDebugView.lists;
	var _item = __map_reserved[_id] != null ? _this.getReserved(_id) : _this.h[_id];
	if(_item != null) {
		_item.set();
	} else {
		throw new js__$Boot_HaxeError("Debug / profile end called for " + _id + " but no start called");
	}
};
luxe_debug_ProfilerDebugView.__super__ = luxe_debug_DebugView;
luxe_debug_ProfilerDebugView.prototype = $extend(luxe_debug_DebugView.prototype,{
	create: function() {
	}
	,process: function() {
	}
	,show: function() {
		var _this = luxe_debug_ProfilerDebugView.lists;
		var _item = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(_item.hasNext()) {
			var _item1 = _item.next();
			if(!_item1.hidden) {
				_item1.bar.show();
			}
		}
		if(!this._setup) {
			this._setup = true;
		}
	}
	,hide: function() {
		var _this = luxe_debug_ProfilerDebugView.lists;
		var _item = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(_item.hasNext()) _item.next().bar.hide();
	}
	,__class__: luxe_debug_ProfilerDebugView
});
var luxe_debug__$ProfilerDebugView_ProfilerValue = function(_name,_bar) {
	this.accum = 0;
	this.count = 0;
	this.hidden = false;
	this.avg = 10;
	this.start = 0.0;
	this.name = _name;
	this.bar = _bar;
	this.history = [];
	this.offsets = [];
};
$hxClasses["luxe.debug._ProfilerDebugView.ProfilerValue"] = luxe_debug__$ProfilerDebugView_ProfilerValue;
luxe_debug__$ProfilerDebugView_ProfilerValue.__name__ = true;
luxe_debug__$ProfilerDebugView_ProfilerValue.prototype = {
	set: function() {
		var _t = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start - this.start;
		var _g = 0;
		var _g1 = this.offsets;
		while(_g < _g1.length) {
			var _offset = _g1[_g];
			++_g;
			_t -= _offset.history[_offset.history.length - 1];
		}
		this.history.push(_t);
		if(this.history.length > this.avg) {
			this.history.shift();
		}
		this.count++;
		if(this.count == this.avg) {
			this.bar.set_value(this.accum / this.avg);
			this.accum = 0;
			this.count = 0;
		}
		this.accum += _t;
		if(this.bar.visible) {
			var n = Math.pow(10,4);
			this.bar.set_text(Std.string((_t * 1000 * n | 0) / n));
		}
	}
	,__class__: luxe_debug__$ProfilerDebugView_ProfilerValue
};
var luxe_debug__$ProfilerDebugView_ProfilerGraph = function(_name,_bg) {
	if(_bg == null) {
		_bg = true;
	}
	this.visible = false;
	this.history = 33;
	this.height2 = 8;
	this.height = 8;
	this.width = 128;
	this.bg = true;
	this.bg = _bg;
	this.name = _name;
	this.color = new phoenix_Color();
	var n = Math.pow(10,2);
	this.set_max((16.6666666666666679 * n | 0) / n);
};
$hxClasses["luxe.debug._ProfilerDebugView.ProfilerGraph"] = luxe_debug__$ProfilerDebugView_ProfilerGraph;
luxe_debug__$ProfilerDebugView_ProfilerGraph.__name__ = true;
luxe_debug__$ProfilerDebugView_ProfilerGraph.prototype = {
	create: function() {
		this.segment = this.width / this.history;
		this.height2 = this.height * 2;
		if(this.bg) {
			this.graphbg_geometry = Luxe.draw.box({ color : new phoenix_Color().rgb(1052688), depth : 999.3, batcher : Luxe.debug.batcher, x : 0, y : 0, w : this.width - this.segment, h : this.height2});
		}
		this.graph_geometry = new phoenix_geometry_Geometry({ color : this.color, depth : 999.33, batcher : Luxe.debug.batcher});
		var _g1 = 0;
		var _g = this.history;
		while(_g1 < _g) {
			var _b = new phoenix_geometry_Vertex(new phoenix_Vector(this.segment * _g1++,this.height2),this.color);
			this.graph_geometry.add(_b);
		}
		this.graph_geometry.set_primitive_type(3);
		this.hide();
	}
	,set_max: function(_v) {
		var oldmax = this.max;
		this.max = _v;
		if(this.graph_geometry != null) {
			var _g = 0;
			var _g1 = this.graph_geometry.vertices;
			while(_g < _g1.length) {
				var v = _g1[_g];
				++_g;
				if(v != null) {
					var vp = 1.0 - v.pos.y / this.height2;
					vp = vp * oldmax / this.max;
					var _this = v.pos;
					var _y = this.height2 * (1.0 - vp);
					_this.y = _y;
					if(!_this._construct) {
						if(_this.listen_y != null && !_this.ignore_listeners) {
							_this.listen_y(_y);
						}
					}
				}
			}
		}
		return this.max;
	}
	,set_ping: function(_v) {
		var n = Math.pow(10,4);
		var _p = (_v * n | 0) / n / this.max;
		var _g1 = 0;
		var _g = this.history;
		while(_g1 < _g) {
			var i = _g1++;
			var v = this.graph_geometry.vertices[i];
			if(i < this.history - 1) {
				var v1 = this.graph_geometry.vertices[i + 1];
				if(v1 != null) {
					var _this = v.pos;
					var _y = Math.floor(v1.pos.y);
					_this.y = _y;
					if(!_this._construct) {
						if(_this.listen_y != null && !_this.ignore_listeners) {
							_this.listen_y(_y);
						}
					}
					v.color = v1.color;
				}
			}
		}
		if(_p < 0.001) {
			_p = 0.001;
		} else if(_p > 1) {
			_p = 1;
		} else {
			_p = _p;
		}
		if(_p > 1) {
			this.graph_geometry.vertices[this.history - 1].color = luxe_debug_ProfilerDebugView.color_red;
		} else if(_p < 0.2) {
			this.graph_geometry.vertices[this.history - 1].color = luxe_debug_ProfilerDebugView.color_green;
		} else {
			this.graph_geometry.vertices[this.history - 1].color = this.color;
		}
		var _this1 = this.graph_geometry.vertices[this.history - 1].pos;
		var _y1 = Math.floor(this.height2 * (1.0 - _p));
		_this1.y = _y1;
		if(!_this1._construct) {
			if(_this1.listen_y != null && !_this1.ignore_listeners) {
				_this1.listen_y(_y1);
			}
		}
		return this.ping = _v;
	}
	,hide: function() {
		this.visible = false;
		this.graph_geometry.set_visible(false);
		if(this.graphbg_geometry != null) {
			this.graphbg_geometry.set_visible(false);
		}
	}
	,show: function() {
		this.visible = true;
		this.graph_geometry.set_visible(true);
		if(this.graphbg_geometry != null) {
			this.graphbg_geometry.set_visible(true);
		}
	}
	,set_pos: function(_p) {
		if(this.graphbg_geometry != null) {
			var _this = this.graphbg_geometry.transform.local.pos;
			var _x = _p.x;
			var _y = _p.y;
			var _z = _p.z;
			var _w = _p.w;
			var prev = _this.ignore_listeners;
			_this.ignore_listeners = true;
			_this.x = _x;
			if(!_this._construct) {
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_x);
				}
			}
			_this.y = _y;
			if(!_this._construct) {
				if(_this.listen_y != null && !_this.ignore_listeners) {
					_this.listen_y(_y);
				}
			}
			_this.z = _z;
			if(!_this._construct) {
				if(_this.listen_z != null && !_this.ignore_listeners) {
					_this.listen_z(_z);
				}
			}
			_this.w = _w;
			_this.ignore_listeners = prev;
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(_this.x);
			}
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(_this.y);
			}
			if(_this.listen_z != null && !_this.ignore_listeners) {
				_this.listen_z(_this.z);
			}
		}
		var _this1 = this.graph_geometry.transform.local.pos;
		var _x1 = _p.x;
		var _y1 = _p.y;
		var _z1 = _p.z;
		var _w1 = _p.w;
		var prev1 = _this1.ignore_listeners;
		_this1.ignore_listeners = true;
		_this1.x = _x1;
		if(!_this1._construct) {
			if(_this1.listen_x != null && !_this1.ignore_listeners) {
				_this1.listen_x(_x1);
			}
		}
		_this1.y = _y1;
		if(!_this1._construct) {
			if(_this1.listen_y != null && !_this1.ignore_listeners) {
				_this1.listen_y(_y1);
			}
		}
		_this1.z = _z1;
		if(!_this1._construct) {
			if(_this1.listen_z != null && !_this1.ignore_listeners) {
				_this1.listen_z(_z1);
			}
		}
		_this1.w = _w1;
		_this1.ignore_listeners = prev1;
		if(_this1.listen_x != null && !_this1.ignore_listeners) {
			_this1.listen_x(_this1.x);
		}
		if(_this1.listen_y != null && !_this1.ignore_listeners) {
			_this1.listen_y(_this1.y);
		}
		if(_this1.listen_z != null && !_this1.ignore_listeners) {
			_this1.listen_z(_this1.z);
		}
		return this.pos = _p;
	}
	,__class__: luxe_debug__$ProfilerDebugView_ProfilerGraph
	,__properties__: {set_pos:"set_pos",set_ping:"set_ping",set_max:"set_max"}
};
var luxe_debug__$ProfilerDebugView_ProfilerBar = function(_name,_max,_color) {
	this.max = 16.7;
	this.height = 8;
	this.visible = false;
	this.name = _name;
	this.graph = new luxe_debug__$ProfilerDebugView_ProfilerGraph(_name);
	this.graph.create();
	if(_max != null) {
		this.graph.set_max(_max);
	}
	this.text_item = new luxe_Text({ no_scene : true, name : "profiler.text." + _name, pos : new phoenix_Vector(0,0), color : _color, point_size : this.height * 1.8, depth : 999.3, text : "", batcher : Luxe.debug.batcher});
	this.bg_geometry = Luxe.draw.box({ color : new phoenix_Color().rgb(592137), depth : 999.3, batcher : Luxe.debug.batcher, x : 0, y : 0, w : this.graph.width, h : this.graph.height});
	this.bar_geometry = Luxe.draw.box({ color : _color, depth : 999.33, batcher : Luxe.debug.batcher, x : 1, y : 1, w : this.graph.width - 2, h : this.graph.height - 2});
	this.hide();
};
$hxClasses["luxe.debug._ProfilerDebugView.ProfilerBar"] = luxe_debug__$ProfilerDebugView_ProfilerBar;
luxe_debug__$ProfilerDebugView_ProfilerBar.__name__ = true;
luxe_debug__$ProfilerDebugView_ProfilerBar.prototype = {
	hide: function() {
		this.visible = false;
		this.bar_geometry.set_visible(false);
		this.bg_geometry.set_visible(false);
		this.text_item.set_visible(false);
		this.graph.hide();
	}
	,show: function() {
		this.visible = true;
		this.bar_geometry.set_visible(true);
		this.bg_geometry.set_visible(true);
		this.text_item.set_visible(true);
		this.graph.show();
	}
	,set_value: function(_v) {
		this.graph.set_ping(_v * 1000);
		if(!this.visible) {
			return this.value = _v;
		}
		var n = Math.pow(10,4);
		var _p = (_v * 1000 * n | 0) / n / this.max;
		if(_p < 0.005) {
			_p = 0.005;
		} else if(_p > 1) {
			_p = 1;
		} else {
			_p = _p;
		}
		if(_p > 1) {
			this.bar_geometry.set_color(luxe_debug_ProfilerDebugView.color_red);
		} else if(_p < 0.15) {
			this.bar_geometry.set_color(luxe_debug_ProfilerDebugView.color_green);
		} else {
			this.bar_geometry.set_color(luxe_debug_ProfilerDebugView.color_normal);
		}
		this.bar_geometry.resize_xy((this.graph.width - 2) * _p,this.graph.height - 2);
		return this.value = _v;
	}
	,set_pos: function(_p) {
		var _this = this.bg_geometry.transform.local;
		_this.pos = _p;
		if(_p != null) {
			var _v = _this.pos;
			var listener = $bind(_this,_this._pos_change);
			_v.listen_x = listener;
			_v.listen_y = listener;
			_v.listen_z = listener;
			if(_this.pos_changed != null && !_this.ignore_listeners) {
				_this.pos_changed(_this.pos);
			}
		}
		var _this1 = this.bar_geometry.transform.local.pos;
		var _x = _p.x + 1;
		var _y = _p.y + 1;
		var prev = _this1.ignore_listeners;
		_this1.ignore_listeners = true;
		_this1.x = _x;
		if(!_this1._construct) {
			if(_this1.listen_x != null && !_this1.ignore_listeners) {
				_this1.listen_x(_x);
			}
		}
		_this1.y = _y;
		if(!_this1._construct) {
			if(_this1.listen_y != null && !_this1.ignore_listeners) {
				_this1.listen_y(_y);
			}
		}
		_this1.ignore_listeners = prev;
		if(_this1.listen_x != null && !_this1.ignore_listeners) {
			_this1.listen_x(_this1.x);
		}
		if(_this1.listen_y != null && !_this1.ignore_listeners) {
			_this1.listen_y(_this1.y);
		}
		var _this2 = this.text_item.get_pos();
		var _x1 = _p.x + this.graph.width * 2 + 10;
		var _y1 = _p.y - 6;
		var prev1 = _this2.ignore_listeners;
		_this2.ignore_listeners = true;
		_this2.x = _x1;
		if(!_this2._construct) {
			if(_this2.listen_x != null && !_this2.ignore_listeners) {
				_this2.listen_x(_x1);
			}
		}
		_this2.y = _y1;
		if(!_this2._construct) {
			if(_this2.listen_y != null && !_this2.ignore_listeners) {
				_this2.listen_y(_y1);
			}
		}
		_this2.ignore_listeners = prev1;
		if(_this2.listen_x != null && !_this2.ignore_listeners) {
			_this2.listen_x(_this2.x);
		}
		if(_this2.listen_y != null && !_this2.ignore_listeners) {
			_this2.listen_y(_this2.y);
		}
		var tmp = this.graph;
		var _this3 = new phoenix_Vector(_p.x,_p.y,_p.z,_p.w);
		var _x2 = _this3.x + (this.graph.width + 2);
		var _y2 = _this3.y + (-this.graph.height + 4);
		var _z = _this3.z;
		var prev2 = _this3.ignore_listeners;
		_this3.ignore_listeners = true;
		_this3.x = _x2;
		if(!_this3._construct) {
			if(_this3.listen_x != null && !_this3.ignore_listeners) {
				_this3.listen_x(_x2);
			}
		}
		_this3.y = _y2;
		if(!_this3._construct) {
			if(_this3.listen_y != null && !_this3.ignore_listeners) {
				_this3.listen_y(_y2);
			}
		}
		_this3.z = _z;
		if(!_this3._construct) {
			if(_this3.listen_z != null && !_this3.ignore_listeners) {
				_this3.listen_z(_z);
			}
		}
		_this3.ignore_listeners = prev2;
		if(_this3.listen_x != null && !_this3.ignore_listeners) {
			_this3.listen_x(_this3.x);
		}
		if(_this3.listen_y != null && !_this3.ignore_listeners) {
			_this3.listen_y(_this3.y);
		}
		if(_this3.listen_z != null && !_this3.ignore_listeners) {
			_this3.listen_z(_this3.z);
		}
		tmp.set_pos(_this3);
		return this.pos = _p;
	}
	,set_text: function(_t) {
		this.text_item.set_text("" + this.name + " (" + this.graph.max + "ms) | " + _t + "ms");
		return this.text = _t;
	}
	,__class__: luxe_debug__$ProfilerDebugView_ProfilerBar
	,__properties__: {set_value:"set_value",set_pos:"set_pos",set_text:"set_text"}
};
var luxe_debug_SceneDebugView = function(_debug) {
	this.hide_ids = true;
	this.font_size = 15.0;
	this.margin = 32;
	luxe_debug_DebugView.call(this,_debug);
	this.set_name("Scenes");
	this.scenes = [];
};
$hxClasses["luxe.debug.SceneDebugView"] = luxe_debug_SceneDebugView;
luxe_debug_SceneDebugView.__name__ = true;
luxe_debug_SceneDebugView.__super__ = luxe_debug_DebugView;
luxe_debug_SceneDebugView.prototype = $extend(luxe_debug_DebugView.prototype,{
	create: function() {
		var debug = Luxe.debug;
		var tmp = new phoenix_Color(0,0,0,1).rgb(16121979);
		var tmp1 = new phoenix_Vector(0,0);
		var tmp2 = Luxe.renderer.font;
		var _result = "";
		var _g = 0;
		var _g1 = this.scenes;
		while(_g < _g1.length) {
			var _scene = _g1[_g];
			++_g;
			_result += this.hide_ids ? "" : "" + _scene.get_id() + " ";
			_result += "" + _scene.get_name() + " ";
			_result += "( " + _scene.get_length() + " )\n";
			var _entity = _scene.entities.iterator();
			while(_entity.hasNext()) {
				var _entity1 = _entity.next();
				var _list = _result;
				var _active = _entity1.get_active() ? "" : "/ inactive";
				var res = "";
				var _g11 = 0;
				while(_g11 < 1) {
					++_g11;
					res += "    ";
				}
				var _id = this.hide_ids ? "" : _entity1.get_id();
				var _comp = "• " + Lambda.count(_entity1._components.components);
				_list += "" + res + _id + " " + _entity1.get_name() + " " + ("> " + _entity1.children.length) + " " + _comp + " " + _active + "\n";
				var _name = HxOverrides.iter(_entity1._components.components._keys);
				while(_name.hasNext()) {
					var _name1 = _name.next();
					var comp = _entity1._components.components.map.get(_name1);
					var _comp_id = this.hide_ids ? "" : " " + comp.id;
					var res1 = "";
					var _g12 = 0;
					while(_g12 < 2) {
						++_g12;
						res1 += "    ";
					}
					_list += res1 + ("•" + _comp_id + " " + comp.name + "\n");
				}
				var _g2 = 0;
				var _g13 = _entity1.children;
				while(_g2 < _g13.length) {
					var _child = _g13[_g2];
					++_g2;
					_list = this.list_entity(_list,_child,3);
				}
				_result = _list;
			}
		}
		this.items_list = new luxe_Text({ name : "debug.scene.list", depth : 999.3, no_scene : true, color : tmp, pos : tmp1, font : tmp2, text : _result, point_size : this.font_size, batcher : debug.batcher, visible : false});
		this.items_list.geometry.id = "debug.scene.list.geometry";
		this.resize();
	}
	,add_scene: function(_scene) {
		if(this.scenes.indexOf(_scene) != -1) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("scenes.indexOf(_scene) == -1"));
		}
		this.scenes.push(_scene);
	}
	,remove_scene: function(_scene) {
		if(this.scenes.indexOf(_scene) == -1) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("scenes.indexOf(_scene) != -1"));
		}
		var _result = HxOverrides.remove(this.scenes,_scene);
		this.refresh();
		return _result;
	}
	,onkeydown: function(e) {
		if(e.keycode == 50 && this.visible) {
			this.toggle_ids();
		}
	}
	,toggle_ids: function() {
		this.hide_ids = !this.hide_ids;
		this.refresh();
	}
	,list_entity: function(_list,e,_depth) {
		if(_depth == null) {
			_depth = 1;
		}
		var _active = e.get_active() ? "" : "/ inactive";
		var _pre;
		if(_depth == 1) {
			var res = "";
			var _g1 = 0;
			while(_g1 < _depth) {
				++_g1;
				res += "    ";
			}
			_pre = res;
		} else {
			var res1 = "";
			var _g11 = 0;
			while(_g11 < _depth) {
				++_g11;
				res1 += "    ";
			}
			_pre = res1 + "> ";
		}
		var _id = this.hide_ids ? "" : e.get_id();
		var _comp = "• " + Lambda.count(e._components.components);
		_list += "" + _pre + _id + " " + e.get_name() + " " + ("> " + e.children.length) + " " + _comp + " " + _active + "\n";
		var _name = HxOverrides.iter(e._components.components._keys);
		while(_name.hasNext()) {
			var _name1 = _name.next();
			var comp = e._components.components.map.get(_name1);
			var _comp_id = this.hide_ids ? "" : " " + comp.id;
			var res2 = "";
			var _g12 = 0;
			var _g = _depth + 1;
			while(_g12 < _g) {
				++_g12;
				res2 += "    ";
			}
			_list += res2 + ("•" + _comp_id + " " + comp.name + "\n");
		}
		var _g2 = 0;
		var _g13 = e.children;
		while(_g2 < _g13.length) {
			var _child = _g13[_g2];
			++_g2;
			_list = this.list_entity(_list,_child,_depth + 2);
		}
		return _list;
	}
	,refresh: function() {
		var tmp = this.items_list;
		var _result = "";
		var _g = 0;
		var _g1 = this.scenes;
		while(_g < _g1.length) {
			var _scene = _g1[_g];
			++_g;
			_result += this.hide_ids ? "" : "" + _scene.get_id() + " ";
			_result += "" + _scene.get_name() + " ";
			_result += "( " + _scene.get_length() + " )\n";
			var _entity = _scene.entities.iterator();
			while(_entity.hasNext()) {
				var _entity1 = _entity.next();
				var _list = _result;
				var _active = _entity1.get_active() ? "" : "/ inactive";
				var res = "";
				var _g11 = 0;
				while(_g11 < 1) {
					++_g11;
					res += "    ";
				}
				var _id = this.hide_ids ? "" : _entity1.get_id();
				var _comp = "• " + Lambda.count(_entity1._components.components);
				_list += "" + res + _id + " " + _entity1.get_name() + " " + ("> " + _entity1.children.length) + " " + _comp + " " + _active + "\n";
				var _name = HxOverrides.iter(_entity1._components.components._keys);
				while(_name.hasNext()) {
					var _name1 = _name.next();
					var comp = _entity1._components.components.map.get(_name1);
					var _comp_id = this.hide_ids ? "" : " " + comp.id;
					var res1 = "";
					var _g12 = 0;
					while(_g12 < 2) {
						++_g12;
						res1 += "    ";
					}
					_list += res1 + ("•" + _comp_id + " " + comp.name + "\n");
				}
				var _g2 = 0;
				var _g13 = _entity1.children;
				while(_g2 < _g13.length) {
					var _child = _g13[_g2];
					++_g2;
					_list = this.list_entity(_list,_child,3);
				}
				_result = _list;
			}
		}
		tmp.set_text(_result);
	}
	,process: function() {
		if(!this.visible) {
			return;
		}
		var _has_changed = false;
		var _g = 0;
		var _g1 = this.scenes;
		while(_g < _g1.length) {
			var _scene = _g1[_g];
			++_g;
			if(_scene._has_changed) {
				_has_changed = true;
				_scene._has_changed = false;
			}
		}
		if(_has_changed) {
			this.refresh();
		}
	}
	,onmousewheel: function(e) {
		var diff = this.items_list.text_bounds.h - (Luxe.debug.inspector.size.y - this.margin);
		var new_y = this.items_list.get_pos().y;
		var max_y = Luxe.debug.padding.y + this.margin * 1.5;
		var min_y = max_y;
		if(diff > 0) {
			min_y = max_y - (diff + this.margin * 2);
		}
		new_y -= this.margin / 2 * e.y;
		if(new_y < min_y) {
			new_y = min_y;
		} else if(new_y > max_y) {
			new_y = max_y;
		} else {
			new_y = new_y;
		}
		var _this = this.items_list.get_pos();
		_this.y = new_y;
		if(!_this._construct) {
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(new_y);
			}
		}
	}
	,show: function() {
		luxe_debug_DebugView.prototype.show.call(this);
		this.refresh();
		this.items_list.set_visible(true);
	}
	,hide: function() {
		luxe_debug_DebugView.prototype.hide.call(this);
		this.items_list.set_visible(false);
	}
	,resize: function() {
		var debug = Luxe.debug;
		var viewrect = new phoenix_Rectangle(debug.inspector.pos.x + this.margin / 2,debug.inspector.pos.y + this.margin * 1.5,debug.inspector.size.x - this.margin,debug.inspector.size.y - this.margin - this.margin * 1.5);
		if(this.items_list != null) {
			this.items_list.set_pos(new phoenix_Vector(debug.padding.x + this.margin,debug.padding.y + this.margin * 1.5));
			this.items_list.set_clip_rect(viewrect);
		}
	}
	,onwindowsized: function(e) {
		this.resize();
	}
	,__class__: luxe_debug_SceneDebugView
});
var luxe_debug_StatsDebugView = function(_debug) {
	this.margin = 32;
	this.font_size = 15;
	luxe_debug_DebugView.call(this,_debug);
	this.set_name("Statistics");
	this._last_render_stats = { batchers : 0, geometry_count : 0, dynamic_batched_count : 0, static_batched_count : 0, visible_count : 0, draw_calls : 0, vert_count : 0};
	this._render_stats = { batchers : 0, geometry_count : 0, dynamic_batched_count : 0, static_batched_count : 0, visible_count : 0, draw_calls : 0, vert_count : 0};
};
$hxClasses["luxe.debug.StatsDebugView"] = luxe_debug_StatsDebugView;
luxe_debug_StatsDebugView.__name__ = true;
luxe_debug_StatsDebugView.__super__ = luxe_debug_DebugView;
luxe_debug_StatsDebugView.prototype = $extend(luxe_debug_DebugView.prototype,{
	get_render_stats_string: function() {
		var _bs = "";
		var _g = 0;
		var _g1 = phoenix_Batcher.all;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			if(b.show_stats != 0) {
				var _s = "  " + b.name + " (enabled " + (b.enabled == null ? "null" : "" + b.enabled) + ", layer " + b.layer + ")\n";
				_s += "    shader: " + (b.shader == null ? "none" : b.shader.id) + "\n";
				_s += "    max verts/batch: " + b.max_verts + "\n";
				_s += "    visible geom: " + b.visible_count + "\n";
				_s += "    verts: " + b.vert_count + "\n";
				_s += "    draw calls: " + b.draw_calls + "\n";
				_s += "    batched: " + b.dynamic_batched_count + "\n";
				_bs += _s += "    static: " + b.static_batched_count + "\n";
			}
		}
		return "Renderer Statistics\n\n" + "total geometry : " + this._render_stats.geometry_count + "\n" + "visible geometry : " + this._render_stats.visible_count + "\n" + "dynamic batch count : " + this._render_stats.dynamic_batched_count + "\n" + "static batch count : " + this._render_stats.static_batched_count + "\n" + "total draw calls : " + this._render_stats.draw_calls + "\n" + "total vert count : " + this._render_stats.vert_count + "\n" + "batchers : " + this._render_stats.batchers + "\n" + _bs;
	}
	,create: function() {
		var _gthis = this;
		var debug = Luxe.debug;
		this.render_stats_text = new luxe_Text({ name : "debug.render.stats", depth : 999.3, no_scene : true, color : new phoenix_Color(0,0,0,1).rgb(16121979), pos : new phoenix_Vector(0,0), font : Luxe.renderer.font, text : this.get_render_stats_string(), point_size : this.font_size, batcher : debug.batcher, visible : false});
		this.resource_list_text = new luxe_Text({ name : "debug.resource.stats", depth : 999.3, no_scene : true, color : new phoenix_Color(0,0,0,1).rgb(16121979), pos : new phoenix_Vector(0,0), font : Luxe.renderer.font, text : "", align : 1, point_size : this.font_size * 0.9, batcher : debug.batcher, visible : false});
		this.render_stats_text.geometry.id = "debug.render.stats.geometry";
		this.render_stats_text.geometry.id = "debug.resource.stats.geometry";
		this.resize();
		Luxe.resources.on(1,function(_) {
			if(_gthis.visible) {
				_gthis.refresh();
			}
		});
	}
	,resize: function() {
		if(this.resource_list_text == null || this.render_stats_text == null) {
			return;
		}
		var debug = Luxe.debug;
		var viewrect = new phoenix_Rectangle(debug.inspector.pos.x + this.margin / 2,debug.inspector.pos.y + this.margin * 1.5,debug.inspector.size.x - this.margin,debug.inspector.size.y - this.margin - this.margin * 1.5);
		var left = debug.padding.x + this.margin;
		var top = debug.padding.y + this.margin * 1.5;
		if(this.resource_list_text != null) {
			this.resource_list_text.set_pos(new phoenix_Vector(debug.padding.x + debug.inspector.size.x - this.margin,top));
			this.resource_list_text.set_clip_rect(viewrect);
		}
		if(this.render_stats_text != null) {
			this.render_stats_text.set_pos(new phoenix_Vector(left,top));
			this.render_stats_text.set_clip_rect(viewrect);
		}
		this.reset_tween();
	}
	,onwindowsized: function(e) {
		this.resize();
	}
	,refresh: function() {
		var bytes_lists = "";
		var text_lists = "";
		var json_lists = "";
		var texture_lists = "";
		var rtt_lists = "";
		var font_lists = "";
		var shader_lists = "";
		var audio_lists = "";
		var _total_txt = 0;
		var _total_tex = 0;
		var _total_rtt = 0;
		var _total_snd = 0;
		var _total_all = 0;
		var _snd = function(res) {
			var _s = "";
			if(res.source != null) {
				_s = "" + (res.source.data.is_stream ? "STREAM •" : "");
				_s += " " + res.id + " • " + res.ref + "\t\n";
				if(res.source.data != null && !res.source.data.is_stream) {
					_s += "~" + Luxe.utils.bytes_to_string(res.source.data.length);
					_total_snd += res.source.data.length;
				}
				if(res.source.data != null) {
					_s += " " + res.source.data.channels + "ch";
					var n = Math.pow(10,1);
					_s += " " + (res.source.data.rate / 1000 * n | 0) / n + "khz";
					var this1 = res.source.data.format;
					var _s1;
					if(this1 == null) {
						_s1 = "" + this1;
					} else {
						switch(this1) {
						case 0:
							_s1 = "af_unknown";
							break;
						case 1:
							_s1 = "af_custom";
							break;
						case 2:
							_s1 = "af_ogg";
							break;
						case 3:
							_s1 = "af_wav";
							break;
						case 4:
							_s1 = "af_pcm";
							break;
						default:
							_s1 = "" + this1;
						}
					}
					_s += " " + _s1;
					var value = res.source.duration();
					var n1 = Math.pow(10,4);
					_s += " " + (value * n1 | 0) / n1 + "s";
				}
				_s += "\t\t\n\n";
			} else {
				_s = "" + ("" + res.id + " • " + res.ref + "\t\n");
			}
			return _s;
		};
		var _this = Luxe.resources.cache;
		var res1 = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(res1.hasNext()) {
			var res2 = res1.next();
			switch(res2.resource_type) {
			case 1:
				var res3 = res2;
				var _l = res3.asset != null && res3.asset.text != null ? res3.asset.text.length : 0;
				_total_txt += _l;
				text_lists += "(~" + Luxe.utils.bytes_to_string(_l) + ") " + res3.id + " • " + res3.ref + "\t\n";
				break;
			case 2:
				json_lists += "" + res2.id + " • " + res2.ref + "\t\n";
				break;
			case 3:
				bytes_lists += "" + res2.id + " • " + res2.ref + "\t\n";
				break;
			case 4:
				var tex = res2;
				if(tex.resource_type == 5) {
					_total_rtt += tex.memory_use();
				} else {
					_total_tex += tex.memory_use();
				}
				texture_lists += "(" + tex.width_actual + "x" + tex.height_actual + " ~" + Luxe.utils.bytes_to_string(tex.memory_use()) + ")    " + tex.id + " • " + tex.ref + "\t\n";
				break;
			case 5:
				var tex1 = res2;
				if(tex1.resource_type == 5) {
					_total_rtt += tex1.memory_use();
				} else {
					_total_tex += tex1.memory_use();
				}
				rtt_lists += "(" + tex1.width_actual + "x" + tex1.height_actual + " ~" + Luxe.utils.bytes_to_string(tex1.memory_use()) + ")    " + tex1.id + " • " + tex1.ref + "\t\n";
				break;
			case 6:
				font_lists += "" + res2.id + " • " + res2.ref + "\t\n";
				break;
			case 7:
				var res4 = res2;
				shader_lists += "(" + res4.vert_id + ", " + res4.frag_id + ")    " + res4.id + " • " + res4.ref + "\t\n";
				break;
			case 8:
				audio_lists += _snd(res2);
				break;
			default:
			}
		}
		_total_all = _total_txt;
		_total_all += _total_tex;
		_total_all += _total_rtt;
		_total_all += _total_snd;
		var lists = "Resource list (" + Luxe.resources.stats.total + " • ~" + Luxe.utils.bytes_to_string(_total_all) + ")\n\n";
		lists += "Bytes (" + Luxe.resources.stats.bytes + ")\n";
		lists += bytes_lists == "" ? "-\t\n" : bytes_lists;
		lists += "\nText (" + Luxe.resources.stats.texts + " • ~" + Luxe.utils.bytes_to_string(_total_txt) + ")\n";
		lists += text_lists == "" ? "-\t\n" : text_lists;
		lists += "\nJSON (" + Luxe.resources.stats.jsons + ")\n";
		lists += json_lists == "" ? "-\t\n" : json_lists;
		lists += "\nTexture (" + Luxe.resources.stats.textures + " • ~" + Luxe.utils.bytes_to_string(_total_tex) + ")\n";
		lists += texture_lists == "" ? "-\t\n" : texture_lists;
		lists += "\nRenderTexture (" + Luxe.resources.stats.rtt + " • ~" + Luxe.utils.bytes_to_string(_total_rtt) + ")\n";
		lists += rtt_lists == "" ? "-\t\n" : rtt_lists;
		lists += "\nFont (" + Luxe.resources.stats.fonts + ")\n";
		lists += font_lists == "" ? "-\t\n" : font_lists;
		lists += "\nShader (" + Luxe.resources.stats.shaders + ")\n";
		lists += shader_lists == "" ? "-\t\n" : shader_lists;
		lists += "\nAudio (" + Luxe.resources.stats.audios + " • ~" + Luxe.utils.bytes_to_string(_total_snd) + ")\n";
		lists += audio_lists == "" ? "-\t\n" : audio_lists;
		this.resource_list_text.set_text(lists);
		if(this.resource_list_text.geometry != null) {
			this.resource_list_text.geometry.set_dirty(true);
		}
		this.reset_tween();
	}
	,process: function() {
		if(!this.visible) {
			return;
		}
		var dirty = false;
		this.update_render_stats();
		if(this._last_render_stats.batchers != this._render_stats.batchers) {
			dirty = true;
			this._last_render_stats.batchers = this._render_stats.batchers;
		}
		if(this._last_render_stats.geometry_count != this._render_stats.geometry_count) {
			dirty = true;
			this._last_render_stats.geometry_count = this._render_stats.geometry_count;
		}
		if(this._last_render_stats.dynamic_batched_count != this._render_stats.dynamic_batched_count) {
			dirty = true;
			this._last_render_stats.dynamic_batched_count = this._render_stats.dynamic_batched_count;
		}
		if(this._last_render_stats.static_batched_count != this._render_stats.static_batched_count) {
			dirty = true;
			this._last_render_stats.static_batched_count = this._render_stats.static_batched_count;
		}
		if(this._last_render_stats.visible_count != this._render_stats.visible_count) {
			dirty = true;
			this._last_render_stats.visible_count = this._render_stats.visible_count;
		}
		if(this._last_render_stats.draw_calls != this._render_stats.draw_calls) {
			dirty = true;
			this._last_render_stats.draw_calls = this._render_stats.draw_calls;
		}
		if(this._last_render_stats.vert_count != this._render_stats.vert_count) {
			dirty = true;
			this._last_render_stats.vert_count = this._render_stats.vert_count;
		}
		if(dirty) {
			this.refresh_render_stats();
		}
	}
	,onmousewheel: function(e) {
		luxe_tween_Actuate.stop(this.resource_list_text.get_pos());
		luxe_tween_Actuate.stop(this.render_stats_text.get_pos());
		var vh = Luxe.debug.inspector.size.y - this.margin;
		var max_y = Luxe.debug.padding.y + this.margin * 1.5;
		var min_y = max_y;
		if(e.pos.x / Luxe.core.screen.get_w() > 0.5) {
			var diff = this.resource_list_text.text_bounds.h - vh;
			var new_y = this.resource_list_text.get_pos().y;
			if(diff > 0) {
				min_y = max_y - (diff + this.margin * 2);
			}
			new_y -= this.margin / 2 * e.y;
			if(new_y < min_y) {
				new_y = min_y;
			} else if(new_y > max_y) {
				new_y = max_y;
			} else {
				new_y = new_y;
			}
			var _this = this.resource_list_text.get_pos();
			_this.y = new_y;
			if(!_this._construct) {
				if(_this.listen_y != null && !_this.ignore_listeners) {
					_this.listen_y(new_y);
				}
			}
			this.resource_list_text.geometry.set_dirty(true);
		} else {
			var diff1 = this.render_stats_text.text_bounds.h - vh;
			var new_y1 = this.render_stats_text.get_pos().y;
			if(diff1 > 0) {
				min_y = max_y - (diff1 + this.margin * 2);
			}
			new_y1 -= this.margin / 2 * e.y;
			if(new_y1 < min_y) {
				new_y1 = min_y;
			} else if(new_y1 > max_y) {
				new_y1 = max_y;
			} else {
				new_y1 = new_y1;
			}
			var _this1 = this.render_stats_text.get_pos();
			_this1.y = new_y1;
			if(!_this1._construct) {
				if(_this1.listen_y != null && !_this1.ignore_listeners) {
					_this1.listen_y(new_y1);
				}
			}
			this.render_stats_text.geometry.set_dirty(true);
		}
	}
	,onkeydown: function(e) {
		if(e.keycode == 50 && this.visible) {
			if(this.debug.batcher.show_stats == 0) {
				this.debug.batcher.set_show_stats(1);
			} else {
				this.debug.batcher.set_show_stats(0);
			}
		}
	}
	,show: function() {
		luxe_debug_DebugView.prototype.show.call(this);
		this.refresh();
		this.render_stats_text.set_visible(true);
		this.resource_list_text.set_visible(true);
	}
	,hide: function() {
		luxe_debug_DebugView.prototype.hide.call(this);
		this.render_stats_text.set_visible(false);
		this.resource_list_text.set_visible(false);
		luxe_tween_Actuate.stop(this.resource_list_text.get_pos());
		luxe_tween_Actuate.stop(this.render_stats_text.get_pos());
	}
	,reset_tween: function() {
		var _gthis = this;
		luxe_tween_Actuate.stop(this.resource_list_text.get_pos());
		luxe_tween_Actuate.stop(this.render_stats_text.get_pos());
		var vh = Luxe.debug.inspector.size.y - this.margin;
		var start_y = Luxe.debug.padding.y + this.margin * 1.5;
		var h = this.resource_list_text.text_bounds.h;
		var diff = h - vh;
		var _this = this.resource_list_text.get_pos();
		_this.y = start_y;
		if(!_this._construct) {
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(start_y);
			}
		}
		if(diff > 0) {
			var end_y = start_y - (diff + this.margin * 2);
			luxe_tween_Actuate.tween(this.resource_list_text.get_pos(),8,{ y : end_y}).repeat().delay(4).reflect().ease(luxe_tween_easing_Linear.get_easeNone()).onUpdate(function() {
				_gthis.resource_list_text.geometry.set_dirty(true);
			});
		}
		h = this.render_stats_text.text_bounds.h;
		diff = h - vh;
		var _this1 = this.render_stats_text.get_pos();
		_this1.y = start_y;
		if(!_this1._construct) {
			if(_this1.listen_y != null && !_this1.ignore_listeners) {
				_this1.listen_y(start_y);
			}
		}
		if(diff > 0) {
			var end_y1 = start_y - (diff + this.margin * 2);
			luxe_tween_Actuate.tween(this.render_stats_text.get_pos(),8,{ y : end_y1}).repeat().delay(4).reflect().ease(luxe_tween_easing_Linear.get_easeNone()).onUpdate(function() {
				_gthis.render_stats_text.geometry.set_dirty(true);
			});
		}
	}
	,refresh_render_stats: function() {
		if(!this.visible) {
			return;
		}
		this.render_stats_text.set_text(this.get_render_stats_string());
		this.render_stats_text.set_locked(true);
		if(this.render_stats_text.geometry != null) {
			this.render_stats_text.geometry.set_dirty(true);
		}
	}
	,update_render_stats: function() {
		this._render_stats.batchers = Luxe.renderer.stats.batchers;
		this._render_stats.geometry_count = Luxe.renderer.stats.geometry_count;
		this._render_stats.visible_count = Luxe.renderer.stats.visible_count;
		this._render_stats.dynamic_batched_count = Luxe.renderer.stats.dynamic_batched_count;
		this._render_stats.static_batched_count = Luxe.renderer.stats.static_batched_count;
		this._render_stats.draw_calls = Luxe.renderer.stats.draw_calls;
		this._render_stats.vert_count = Luxe.renderer.stats.vert_count;
	}
	,__class__: luxe_debug_StatsDebugView
});
var luxe_debug_TraceDebugView = function(_debug) {
	this._last_logged_length = 0;
	this.max_lines = 35;
	luxe_debug_DebugView.call(this,_debug);
	this.set_name("Log");
	luxe_Debug.trace_callbacks.push($bind(this,this.on_trace));
	this.logged = [];
	var _this = this.debug.app;
	this.add_line("luxe version " + ("" + _this.build + " / debug:" + Std.string(_this.app.debug) + " / os:" + _this.app.os + " / platform:" + _this.app.platform));
};
$hxClasses["luxe.debug.TraceDebugView"] = luxe_debug_TraceDebugView;
luxe_debug_TraceDebugView.__name__ = true;
luxe_debug_TraceDebugView.__super__ = luxe_debug_DebugView;
luxe_debug_TraceDebugView.prototype = $extend(luxe_debug_DebugView.prototype,{
	on_trace: function(v,inf) {
		this.add_line(inf.fileName + ":" + inf.lineNumber + " " + Std.string(v));
	}
	,create: function() {
		var text_bounds = new phoenix_Rectangle(this.debug.padding.x + 20,this.debug.padding.y + 40,Luxe.core.screen.get_w() - this.debug.padding.x * 2 - 20,Luxe.core.screen.get_h() - this.debug.padding.y * 2 - 40);
		this.lines = new luxe_Text({ name : "debug.log.text", no_scene : true, depth : 999.3, color : new phoenix_Color().rgb(8947848), bounds : text_bounds, bounds_wrap : true, font : Luxe.renderer.font, text : "", align_vertical : 4, point_size : 12, batcher : this.debug.batcher, visible : false});
		if(this.lines.geometry != null) {
			this.lines.geometry.set_clip_rect(text_bounds);
			this.lines.geometry.set_locked(true);
			this.lines.geometry.id = "debug.log.text.geometry";
		}
	}
	,onwindowsized: function(e) {
		var debug = Luxe.debug;
		var text_bounds = new phoenix_Rectangle(debug.padding.x + 20,debug.padding.y + 40,Luxe.core.screen.get_w() - debug.padding.x * 2 - 20,Luxe.core.screen.get_h() - debug.padding.y * 2 - 40);
		this.lines.set_bounds(text_bounds);
		this.lines.set_clip_rect(text_bounds);
		if(this.lines.geometry != null) {
			this.lines.geometry.set_locked(true);
			this.lines.geometry.set_dirty(true);
		}
	}
	,add_line: function(_t) {
		if(this.logged == null) {
			return;
		}
		this.logged.push(_t);
		if(!this.visible) {
			return;
		}
		this.refresh_lines();
	}
	,refresh_lines: function() {
		if(this._last_logged_length == this.logged.length) {
			return;
		}
		var _final = "";
		if(this.logged.length <= this.max_lines) {
			var _g = 0;
			var _g1 = this.logged;
			while(_g < _g1.length) {
				var _line = _g1[_g];
				++_g;
				_final += _line + "\n";
			}
		} else {
			var _g11 = this.logged.length - this.max_lines;
			var _g2 = this.logged.length;
			while(_g11 < _g2) _final += this.logged[_g11++] + "\n";
		}
		this.lines.set_text(_final);
		if(this.lines.geometry != null) {
			this.lines.geometry.set_locked(true);
			this.lines.geometry.set_dirty(true);
		}
		this._last_logged_length = this.logged.length;
	}
	,refresh: function() {
	}
	,process: function() {
	}
	,show: function() {
		luxe_debug_DebugView.prototype.show.call(this);
		this.refresh_lines();
		this.lines.set_visible(true);
	}
	,hide: function() {
		luxe_debug_DebugView.prototype.hide.call(this);
		this.lines.set_visible(false);
	}
	,__class__: luxe_debug_TraceDebugView
});
var luxe_importers_bitmapfont_BitmapFontParser = function() { };
$hxClasses["luxe.importers.bitmapfont.BitmapFontParser"] = luxe_importers_bitmapfont_BitmapFontParser;
luxe_importers_bitmapfont_BitmapFontParser.__name__ = true;
luxe_importers_bitmapfont_BitmapFontParser.parse = function(_font_data) {
	if(_font_data.length == 0) {
		throw new js__$Boot_HaxeError("BitmapFont:Parser: _font_data is 0 length");
	}
	var _info = { face : null, chars : new haxe_ds_IntMap(), point_size : 0, base_size : 0, char_count : 0, line_height : 0, pages : [], kernings : new haxe_ds_IntMap()};
	var _lines = _font_data.split("\n");
	if(_lines.length == 0) {
		throw new js__$Boot_HaxeError("BitmapFont; invalid font data specified for parser.");
	}
	if(HxOverrides.substr(StringTools.ltrim(_lines[0]),0,4) != "info") {
		throw new js__$Boot_HaxeError("BitmapFont; invalid font data specified for parser. Format should be plain ascii text .fnt file only currently.");
	}
	var _g = 0;
	while(_g < _lines.length) {
		var _line = _lines[_g];
		++_g;
		var _tokens = _line.split(" ");
		var _g1 = 0;
		while(_g1 < _tokens.length) {
			var _current = _tokens[_g1];
			++_g1;
			luxe_importers_bitmapfont_BitmapFontParser.parse_token(_current,_tokens,_info);
		}
		_tokens = null;
	}
	return _info;
};
luxe_importers_bitmapfont_BitmapFontParser.parse_token = function(_token,_tokens,_info) {
	_tokens.shift();
	var _items = luxe_importers_bitmapfont_BitmapFontParser.tokenize_line(_tokens);
	switch(_token) {
	case "char":
		var _char = { id : Std.parseInt(__map_reserved["id"] != null ? _items.getReserved("id") : _items.h["id"]), x : parseFloat(__map_reserved["x"] != null ? _items.getReserved("x") : _items.h["x"]), y : parseFloat(__map_reserved["y"] != null ? _items.getReserved("y") : _items.h["y"]), width : parseFloat(__map_reserved["width"] != null ? _items.getReserved("width") : _items.h["width"]), height : parseFloat(__map_reserved["height"] != null ? _items.getReserved("height") : _items.h["height"]), xoffset : parseFloat(__map_reserved["xoffset"] != null ? _items.getReserved("xoffset") : _items.h["xoffset"]), yoffset : parseFloat(__map_reserved["yoffset"] != null ? _items.getReserved("yoffset") : _items.h["yoffset"]), xadvance : parseFloat(__map_reserved["xadvance"] != null ? _items.getReserved("xadvance") : _items.h["xadvance"]), page : Std.parseInt(__map_reserved["page"] != null ? _items.getReserved("page") : _items.h["page"])};
		_info.chars.set(_char.id,_char);
		break;
	case "chars":
		_info.char_count = Std.parseInt(__map_reserved["count"] != null ? _items.getReserved("count") : _items.h["count"]);
		break;
	case "common":
		_info.line_height = parseFloat(__map_reserved["lineHeight"] != null ? _items.getReserved("lineHeight") : _items.h["lineHeight"]);
		_info.base_size = parseFloat(__map_reserved["base"] != null ? _items.getReserved("base") : _items.h["base"]);
		break;
	case "info":
		var _s = __map_reserved["face"] != null ? _items.getReserved("face") : _items.h["face"];
		if(_s.indexOf("\"") != -1) {
			_s = StringTools.replace(_s,"\"","");
		}
		_info.face = _s;
		_info.point_size = parseFloat(__map_reserved["size"] != null ? _items.getReserved("size") : _items.h["size"]);
		break;
	case "kerning":
		var _first = Std.parseInt(__map_reserved["first"] != null ? _items.getReserved("first") : _items.h["first"]);
		var _second = Std.parseInt(__map_reserved["second"] != null ? _items.getReserved("second") : _items.h["second"]);
		var _amount = parseFloat(__map_reserved["amount"] != null ? _items.getReserved("amount") : _items.h["amount"]);
		var _map = _info.kernings.get(_first);
		if(_map == null) {
			_map = new haxe_ds_IntMap();
			_info.kernings.set(_first,_map);
		}
		_map.h[_second] = _amount;
		break;
	case "page":
		var _info1 = _info.pages;
		var tmp = Std.parseInt(__map_reserved["id"] != null ? _items.getReserved("id") : _items.h["id"]);
		var _s1 = __map_reserved["file"] != null ? _items.getReserved("file") : _items.h["file"];
		if(_s1.indexOf("\"") != -1) {
			_s1 = StringTools.replace(_s1,"\"","");
		}
		_info1.push({ id : tmp, file : StringTools.trim(_s1)});
		break;
	default:
	}
	_items = null;
};
luxe_importers_bitmapfont_BitmapFontParser.tokenize_line = function(_tokens) {
	var _item_map = new haxe_ds_StringMap();
	var _g = 0;
	while(_g < _tokens.length) {
		var _token = _tokens[_g];
		++_g;
		var _items = _token.split("=");
		var key = _items[0];
		var value = _items[1];
		if(__map_reserved[key] != null) {
			_item_map.setReserved(key,value);
		} else {
			_item_map.h[key] = value;
		}
		_items = null;
	}
	return _item_map;
};
var luxe_resource_Resource = function(_options) {
	this.ref = 0;
	if(_options == null) {
		throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options was null"));
	}
	if(_options.id == null) {
		throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options.id was null"));
	}
	if(_options.system == null) {
		_options.system = Luxe.resources;
	}
	if(_options.resource_type == null) {
		_options.resource_type = 0;
	}
	this.id = _options.id;
	this.system = _options.system;
	this.resource_type = _options.resource_type;
	this.set_state(0);
	this.set_ref(1);
};
$hxClasses["luxe.resource.Resource"] = luxe_resource_Resource;
luxe_resource_Resource.__name__ = true;
luxe_resource_Resource.prototype = {
	destroy: function(_force) {
		if(_force == null) {
			_force = false;
		}
		if(this.state == 6) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("state != ResourceState.destroyed"));
		}
		if(!_force) {
			if(this.ref <= 0) {
				throw new js__$Boot_HaxeError(luxe_DebugError.assertion("ref > 0"));
			}
			var _g = this;
			_g.set_ref(_g.ref - 1);
			if(this.ref < 0) {
				throw new js__$Boot_HaxeError(luxe_DebugError.assertion("ref >= 0"));
			}
		}
		if(this.ref == 0 || _force) {
			this.clear();
			this.set_state(6);
			this.system.remove(this);
			this.system.emit(8,this);
		}
	}
	,set_ref: function(_ref) {
		var pre = this.ref;
		this.ref = _ref;
		if(this.ref > pre) {
			this.system.emit(9,this);
		} else if(this.ref < pre) {
			this.system.emit(10,this);
		}
		return this.ref;
	}
	,set_state: function(_state) {
		this.state = _state;
		switch(this.state) {
		case 2:
			this.system.emit(3,this);
			break;
		case 3:
			this.system.emit(4,this);
			break;
		case 4:
			this.system.emit(5,this);
			break;
		default:
		}
		return this.state;
	}
	,clear: function() {
	}
	,__class__: luxe_resource_Resource
	,__properties__: {set_ref:"set_ref",set_state:"set_state"}
};
var luxe_resource_BytesResource = function(_options) {
	if(_options == null) {
		throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options was null"));
	}
	_options.resource_type = 3;
	luxe_resource_Resource.call(this,_options);
	this.asset = _options.asset;
};
$hxClasses["luxe.resource.BytesResource"] = luxe_resource_BytesResource;
luxe_resource_BytesResource.__name__ = true;
luxe_resource_BytesResource.__super__ = luxe_resource_Resource;
luxe_resource_BytesResource.prototype = $extend(luxe_resource_Resource.prototype,{
	reload: function() {
		var _gthis = this;
		if(this.state == 6) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("state != ResourceState.destroyed"));
		}
		this.clear();
		return new snow_api_Promise(function(resolve,reject) {
			_gthis.set_state(2);
			var get = snow_systems_assets_AssetBytes.load(Luxe.core.app.assets,_gthis.id);
			get.then(function(_asset) {
				_gthis.asset = _asset;
				_gthis.set_state(3);
				resolve(_gthis);
			});
			get.error(function(_error) {
				_gthis.set_state(4);
				reject(_error);
			});
		});
	}
	,clear: function() {
		if(this.asset != null) {
			this.asset.destroy();
			this.asset = null;
		}
	}
	,__class__: luxe_resource_BytesResource
});
var luxe_resource_TextResource = function(_options) {
	if(_options == null) {
		throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options was null"));
	}
	_options.resource_type = 1;
	luxe_resource_Resource.call(this,_options);
	this.asset = _options.asset;
};
$hxClasses["luxe.resource.TextResource"] = luxe_resource_TextResource;
luxe_resource_TextResource.__name__ = true;
luxe_resource_TextResource.__super__ = luxe_resource_Resource;
luxe_resource_TextResource.prototype = $extend(luxe_resource_Resource.prototype,{
	reload: function() {
		var _gthis = this;
		if(this.state == 6) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("state != ResourceState.destroyed"));
		}
		this.clear();
		return new snow_api_Promise(function(resolve,reject) {
			_gthis.set_state(2);
			var get = snow_systems_assets_AssetText.load(Luxe.core.app.assets,_gthis.id);
			get.then(function(_asset) {
				_gthis.asset = _asset;
				_gthis.set_state(3);
				resolve(_gthis);
			});
			get.error(function(_error) {
				_gthis.set_state(4);
				reject(_error);
			});
		});
	}
	,clear: function() {
		if(this.asset != null) {
			this.asset.destroy();
			this.asset = null;
		}
	}
	,__class__: luxe_resource_TextResource
});
var luxe_resource_JSONResource = function(_options) {
	if(_options == null) {
		throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options was null"));
	}
	_options.resource_type = 2;
	luxe_resource_Resource.call(this,_options);
	this.asset = _options.asset;
};
$hxClasses["luxe.resource.JSONResource"] = luxe_resource_JSONResource;
luxe_resource_JSONResource.__name__ = true;
luxe_resource_JSONResource.__super__ = luxe_resource_Resource;
luxe_resource_JSONResource.prototype = $extend(luxe_resource_Resource.prototype,{
	reload: function() {
		var _gthis = this;
		if(this.state == 6) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("state != ResourceState.destroyed"));
		}
		this.clear();
		return new snow_api_Promise(function(resolve,reject) {
			_gthis.set_state(2);
			var get = snow_systems_assets_AssetJSON.load(Luxe.core.app.assets,_gthis.id);
			get.then(function(_asset) {
				_gthis.asset = _asset;
				_gthis.set_state(3);
				resolve(_gthis);
			});
			get.error(function(_error) {
				_gthis.set_state(4);
				reject(_error);
			});
		});
	}
	,clear: function() {
		if(this.asset != null) {
			this.asset.destroy();
			this.asset = null;
		}
	}
	,__class__: luxe_resource_JSONResource
});
var luxe_resource_AudioResource = function(_options) {
	this.is_stream = false;
	if(_options == null) {
		throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options was null"));
	}
	_options.resource_type = 8;
	luxe_resource_Resource.call(this,_options);
	this.asset = _options.asset;
	if(_options.is_stream == null) {
		_options.is_stream = false;
	}
	this.is_stream = _options.is_stream;
	if(this.asset != null) {
		this.source = new snow_systems_audio_AudioSource(Luxe.core.app,this.asset.audio);
	}
};
$hxClasses["luxe.resource.AudioResource"] = luxe_resource_AudioResource;
luxe_resource_AudioResource.__name__ = true;
luxe_resource_AudioResource.__super__ = luxe_resource_Resource;
luxe_resource_AudioResource.prototype = $extend(luxe_resource_Resource.prototype,{
	reload: function() {
		var _gthis = this;
		if(this.state == 6) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("state != ResourceState.destroyed"));
		}
		this.clear();
		return new snow_api_Promise(function(resolve,reject) {
			_gthis.set_state(2);
			var get = snow_systems_assets_AssetAudio.load(Luxe.core.app.assets,_gthis.id,_gthis.is_stream);
			get.then(function(_asset) {
				_gthis.asset = _asset;
				_gthis.source = new snow_systems_audio_AudioSource(Luxe.core.app,_gthis.asset.audio);
				_gthis.set_state(3);
				resolve(_gthis);
			});
			get.error(function(_error) {
				_gthis.set_state(4);
				reject(_error);
			});
		});
	}
	,clear: function() {
		if(this.asset != null) {
			this.asset.destroy();
			this.asset = null;
		}
		if(this.source != null) {
			this.source.destroy();
			this.source = null;
		}
	}
	,__class__: luxe_resource_AudioResource
});
var luxe_structural_BalancedBSTIterator_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry = function(_tree) {
	if(_tree == null) {
		return;
	}
	if(_tree.root == null) {
		return;
	}
	this.tree = _tree;
	var _node = this.tree.root;
	while(_node.left != null) _node = _node.left;
	this.current = _node;
	var _node1 = this.tree.root;
	while(_node1.right != null) _node1 = _node1.right;
	this.rightest = _node1;
};
$hxClasses["luxe.structural.BalancedBSTIterator_phoenix_geometry_GeometryKey_phoenix_geometry_Geometry"] = luxe_structural_BalancedBSTIterator_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry;
luxe_structural_BalancedBSTIterator_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry.__name__ = true;
luxe_structural_BalancedBSTIterator_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry.prototype = {
	hasNext: function() {
		if(this.current == null || this.rightest == null) {
			return false;
		}
		return this.tree.compare(this.current.key,this.rightest.key) <= 0;
	}
	,next: function() {
		var _temp = this.current;
		var tmp;
		if(!(this.current == null || this.rightest == null ? false : this.tree.compare(this.current.key,this.rightest.key) <= 0)) {
			tmp = null;
		} else if(this.current.right != null) {
			var _node = this.current.right;
			while(_node.left != null) _node = _node.left;
			tmp = _node;
		} else {
			var _next = null;
			var _temp1 = this.tree.root;
			while(_temp1 != null) {
				var _comp = this.tree.compare(this.current.key,_temp1.key);
				if(_comp < 0) {
					_next = _temp1;
					_temp1 = _temp1.left;
				} else if(_comp > 0) {
					_temp1 = _temp1.right;
				} else {
					this.current = _next;
					break;
				}
			}
			tmp = _next;
		}
		this.current = tmp;
		return _temp.value;
	}
	,__class__: luxe_structural_BalancedBSTIterator_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry
};
var luxe_structural_BalancedBSTNode_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry = function(_key,_value,_node_count,_color) {
	this.left = null;
	this.right = null;
	this.key = _key;
	this.value = _value;
	this.nodecount = _node_count;
	this.color = _color;
};
$hxClasses["luxe.structural.BalancedBSTNode_phoenix_geometry_GeometryKey_phoenix_geometry_Geometry"] = luxe_structural_BalancedBSTNode_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry;
luxe_structural_BalancedBSTNode_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry.__name__ = true;
luxe_structural_BalancedBSTNode_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry.prototype = {
	__class__: luxe_structural_BalancedBSTNode_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry
};
var luxe_structural_BalancedBST_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry = function(compare_function) {
	this.compare = compare_function;
};
$hxClasses["luxe.structural.BalancedBST_phoenix_geometry_GeometryKey_phoenix_geometry_Geometry"] = luxe_structural_BalancedBST_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry;
luxe_structural_BalancedBST_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry.__name__ = true;
luxe_structural_BalancedBST_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry.prototype = {
	contains: function(_key) {
		return this.find(_key) != null;
	}
	,find: function(_key) {
		return this.node_find(this.root,_key);
	}
	,remove: function(_key) {
		var tmp;
		var _node = this.root.left;
		if(!(_node == null ? false : _node.color == true)) {
			var _node1 = this.root.right;
			tmp = !(_node1 == null ? false : _node1.color == true);
		} else {
			tmp = false;
		}
		if(tmp) {
			this.root.color = true;
		}
		if(!this.contains(_key)) {
			return false;
		}
		this.root = this.node_remove(this.root,_key);
		if(this.root != null) {
			this.root.color = false;
		}
		return true;
	}
	,iterator: function() {
		return new luxe_structural_BalancedBSTIterator_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry(this);
	}
	,node_insert: function(_node,_key,_value) {
		if(_node == null) {
			return new luxe_structural_BalancedBSTNode_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry(_key,_value,1,true);
		}
		var comparison = this.compare(_key,_node.key);
		if(comparison < 0) {
			_node.left = this.node_insert(_node.left,_key,_value);
		} else if(comparison > 0) {
			_node.right = this.node_insert(_node.right,_key,_value);
		} else {
			_node.value = _value;
		}
		var tmp;
		var _node1 = _node.right;
		if(_node1 == null ? false : _node1.color == true) {
			var _node2 = _node.left;
			tmp = !(_node2 == null ? false : _node2.color == true);
		} else {
			tmp = false;
		}
		if(tmp) {
			_node = this.rotate_left(_node);
		}
		var tmp1;
		var _node3 = _node.left;
		if(_node3 == null ? false : _node3.color == true) {
			var _node4 = _node.left.left;
			if(_node4 == null) {
				tmp1 = false;
			} else {
				tmp1 = _node4.color == true;
			}
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			_node = this.rotate_right(_node);
		}
		var tmp2;
		var _node5 = _node.left;
		if(_node5 == null ? false : _node5.color == true) {
			var _node6 = _node.right;
			if(_node6 == null) {
				tmp2 = false;
			} else {
				tmp2 = _node6.color == true;
			}
		} else {
			tmp2 = false;
		}
		if(tmp2) {
			this.swap_color(_node);
		}
		var _node7 = _node.left;
		var _node8 = _node.right;
		_node.nodecount = (_node7 == null ? 0 : _node7.nodecount) + (_node8 == null ? 0 : _node8.nodecount) + 1;
		return _node;
	}
	,node_find: function(_node,_key) {
		if(_node == null) {
			return null;
		}
		var comparison = this.compare(_key,_node.key);
		if(comparison < 0) {
			return this.node_find(_node.left,_key);
		} else if(comparison > 0) {
			return this.node_find(_node.right,_key);
		} else {
			return _node.value;
		}
	}
	,node_smallest: function(_node) {
		if(_node.left == null) {
			return _node;
		}
		return this.node_smallest(_node.left);
	}
	,node_remove_smallest: function(_node) {
		if(_node.left == null) {
			return null;
		}
		var tmp;
		var _node1 = _node.left;
		if(!(_node1 == null ? false : _node1.color == true)) {
			var _node2 = _node.left.left;
			tmp = !(_node2 == null ? false : _node2.color == true);
		} else {
			tmp = false;
		}
		if(tmp) {
			var _node3 = _node;
			this.swap_color(_node3);
			var _node4 = _node3.right.left;
			if(_node4 == null ? false : _node4.color == true) {
				_node3.right = this.rotate_right(_node3.right);
				_node3 = this.rotate_left(_node3);
			}
			_node = _node3;
		}
		_node.left = this.node_remove_smallest(_node.left);
		var _node5 = _node.left;
		var _node6 = _node.right;
		_node.nodecount = (_node5 == null ? 0 : _node5.nodecount) + (_node6 == null ? 0 : _node6.nodecount) + 1;
		var _node7 = _node;
		var _node8 = _node7.right;
		if(_node8 == null ? false : _node8.color == true) {
			_node7 = this.rotate_left(_node7);
		}
		var tmp1;
		var _node9 = _node7.left;
		if(_node9 == null ? false : _node9.color == true) {
			var _node10 = _node7.left.left;
			if(_node10 == null) {
				tmp1 = false;
			} else {
				tmp1 = _node10.color == true;
			}
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			_node7 = this.rotate_right(_node7);
		}
		var tmp2;
		var _node11 = _node7.left;
		if(_node11 == null ? false : _node11.color == true) {
			var _node12 = _node7.right;
			if(_node12 == null) {
				tmp2 = false;
			} else {
				tmp2 = _node12.color == true;
			}
		} else {
			tmp2 = false;
		}
		if(tmp2) {
			this.swap_color(_node7);
		}
		var _node13 = _node7.left;
		var _node14 = _node7.right;
		_node7.nodecount = (_node13 == null ? 0 : _node13.nodecount) + (_node14 == null ? 0 : _node14.nodecount) + 1;
		return _node7;
	}
	,node_remove: function(_node,_key) {
		if(this.compare(_key,_node.key) < 0) {
			var tmp;
			var _node1 = _node.left;
			if(!(_node1 == null ? false : _node1.color == true)) {
				var _node2 = _node.left.left;
				tmp = !(_node2 == null ? false : _node2.color == true);
			} else {
				tmp = false;
			}
			if(tmp) {
				var _node3 = _node;
				this.swap_color(_node3);
				var _node4 = _node3.right.left;
				if(_node4 == null ? false : _node4.color == true) {
					_node3.right = this.rotate_right(_node3.right);
					_node3 = this.rotate_left(_node3);
				}
				_node = _node3;
			}
			_node.left = this.node_remove(_node.left,_key);
		} else {
			var _node5 = _node.left;
			if(_node5 == null ? false : _node5.color == true) {
				_node = this.rotate_right(_node);
			}
			if(this.compare(_key,_node.key) == 0 && _node.right == null) {
				return null;
			}
			var tmp1;
			var _node6 = _node.right;
			if(!(_node6 == null ? false : _node6.color == true)) {
				var _node7 = _node.right.left;
				tmp1 = !(_node7 == null ? false : _node7.color == true);
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				var _node8 = _node;
				this.swap_color(_node8);
				var _node9 = _node8.left.left;
				if(_node9 == null ? false : _node9.color == true) {
					_node8 = this.rotate_right(_node8);
				}
				_node = _node8;
			}
			if(this.compare(_key,_node.key) == 0) {
				var _n = this.node_smallest(_node.right);
				_node.key = _n.key;
				_node.value = _n.value;
				_node.right = this.node_remove_smallest(_node.right);
			} else {
				_node.right = this.node_remove(_node.right,_key);
			}
		}
		var _node10 = _node;
		var _node11 = _node10.right;
		if(_node11 == null ? false : _node11.color == true) {
			_node10 = this.rotate_left(_node10);
		}
		var tmp2;
		var _node12 = _node10.left;
		if(_node12 == null ? false : _node12.color == true) {
			var _node13 = _node10.left.left;
			if(_node13 == null) {
				tmp2 = false;
			} else {
				tmp2 = _node13.color == true;
			}
		} else {
			tmp2 = false;
		}
		if(tmp2) {
			_node10 = this.rotate_right(_node10);
		}
		var tmp3;
		var _node14 = _node10.left;
		if(_node14 == null ? false : _node14.color == true) {
			var _node15 = _node10.right;
			if(_node15 == null) {
				tmp3 = false;
			} else {
				tmp3 = _node15.color == true;
			}
		} else {
			tmp3 = false;
		}
		if(tmp3) {
			this.swap_color(_node10);
		}
		var _node16 = _node10.left;
		var _node17 = _node10.right;
		_node10.nodecount = (_node16 == null ? 0 : _node16.nodecount) + (_node17 == null ? 0 : _node17.nodecount) + 1;
		return _node10;
	}
	,rotate_left: function(_node) {
		var _n = _node.right;
		_n.color = _node.color;
		_node.color = true;
		_node.right = _n.left;
		_n.left = _node;
		_n.nodecount = _node.nodecount;
		var _node1 = _node.left;
		var _node2 = _node.right;
		_node.nodecount = (_node1 == null ? 0 : _node1.nodecount) + (_node2 == null ? 0 : _node2.nodecount) + 1;
		return _n;
	}
	,rotate_right: function(_node) {
		var _n = _node.left;
		_n.color = _node.color;
		_node.color = true;
		_node.left = _n.right;
		_n.right = _node;
		_n.nodecount = _node.nodecount;
		var _node1 = _node.left;
		var _node2 = _node.right;
		_node.nodecount = (_node1 == null ? 0 : _node1.nodecount) + (_node2 == null ? 0 : _node2.nodecount) + 1;
		return _n;
	}
	,swap_color: function(_node) {
		_node.color = !_node.color;
		_node.left.color = !_node.left.color;
		_node.right.color = !_node.right.color;
	}
	,__class__: luxe_structural_BalancedBST_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry
};
var luxe_structural_OrderedMapIterator_$String_$luxe_$Component = function(omap) {
	this.index = 0;
	this.map = omap;
};
$hxClasses["luxe.structural.OrderedMapIterator_String_luxe_Component"] = luxe_structural_OrderedMapIterator_$String_$luxe_$Component;
luxe_structural_OrderedMapIterator_$String_$luxe_$Component.__name__ = true;
luxe_structural_OrderedMapIterator_$String_$luxe_$Component.prototype = {
	hasNext: function() {
		return this.index < this.map._keys.length;
	}
	,next: function() {
		return this.map.map.get(this.map._keys[this.index++]);
	}
	,__class__: luxe_structural_OrderedMapIterator_$String_$luxe_$Component
};
var luxe_structural_OrderedMap_$String_$luxe_$Component = function(_map) {
	this._keys = [];
	this.map = _map;
};
$hxClasses["luxe.structural.OrderedMap_String_luxe_Component"] = luxe_structural_OrderedMap_$String_$luxe_$Component;
luxe_structural_OrderedMap_$String_$luxe_$Component.__name__ = true;
luxe_structural_OrderedMap_$String_$luxe_$Component.__interfaces__ = [haxe_IMap];
luxe_structural_OrderedMap_$String_$luxe_$Component.prototype = {
	set: function(key,value) {
		if(!this.map.exists(key)) {
			this._keys.push(key);
		}
		this.map.set(key,value);
	}
	,iterator: function() {
		return new luxe_structural_OrderedMapIterator_$String_$luxe_$Component(this);
	}
	,remove: function(key) {
		if(this.map.remove(key)) {
			return HxOverrides.remove(this._keys,key);
		} else {
			return false;
		}
	}
	,exists: function(key) {
		return this.map.exists(key);
	}
	,get: function(key) {
		return this.map.get(key);
	}
	,__class__: luxe_structural_OrderedMap_$String_$luxe_$Component
};
var luxe_tween_actuators_IGenericActuator = function() { };
$hxClasses["luxe.tween.actuators.IGenericActuator"] = luxe_tween_actuators_IGenericActuator;
luxe_tween_actuators_IGenericActuator.__name__ = true;
luxe_tween_actuators_IGenericActuator.prototype = {
	__class__: luxe_tween_actuators_IGenericActuator
};
var luxe_tween_actuators_GenericActuator = function(target,duration,properties) {
	this.timescaled = false;
	this._autoVisible = true;
	this._delay = 0;
	this._reflect = false;
	this._repeat = 0;
	this._reverse = false;
	this._smartRotation = false;
	this._snapping = false;
	this.special = false;
	this.target = target;
	this.properties = properties;
	this.duration = duration;
	this._ease = luxe_tween_Actuate.defaultEase;
};
$hxClasses["luxe.tween.actuators.GenericActuator"] = luxe_tween_actuators_GenericActuator;
luxe_tween_actuators_GenericActuator.__name__ = true;
luxe_tween_actuators_GenericActuator.__interfaces__ = [luxe_tween_actuators_IGenericActuator];
luxe_tween_actuators_GenericActuator.prototype = {
	apply: function() {
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			if(Object.prototype.hasOwnProperty.call(this.target,i)) {
				this.target[i] = Reflect.field(this.properties,i);
			} else {
				var o = this.target;
				var value = Reflect.field(this.properties,i);
				var tmp;
				var tmp1;
				if(o.__properties__) {
					tmp = o.__properties__["set_" + i];
					tmp1 = tmp;
				} else {
					tmp1 = false;
				}
				if(tmp1) {
					o[tmp](value);
				} else {
					o[i] = value;
				}
			}
		}
	}
	,autoVisible: function(value) {
		if(value == null) {
			value = true;
		}
		this._autoVisible = value;
		return this;
	}
	,callMethod: function(method,params) {
		if(params == null) {
			params = [];
		}
		return method.apply(method,params);
	}
	,change: function() {
		if(this._onUpdate != null) {
			var method = this._onUpdate;
			var params = this._onUpdateParams;
			if(params == null) {
				params = [];
			}
			method.apply(method,params);
		}
	}
	,complete: function(sendEvent) {
		if(sendEvent == null) {
			sendEvent = true;
		}
		if(sendEvent) {
			this.change();
			if(this._onComplete != null) {
				var method = this._onComplete;
				var params = this._onCompleteParams;
				if(params == null) {
					params = [];
				}
				method.apply(method,params);
			}
		}
		luxe_tween_Actuate.unload(this);
	}
	,delay: function(duration) {
		this._delay = duration;
		return this;
	}
	,ease: function(easing) {
		this._ease = easing;
		return this;
	}
	,move: function() {
	}
	,timescale: function(_value) {
		if(_value == null) {
			_value = true;
		}
		this.timescaled = _value;
		return this;
	}
	,onComplete: function(handler,parameters) {
		this._onComplete = handler;
		if(parameters == null) {
			this._onCompleteParams = [];
		} else {
			this._onCompleteParams = parameters;
		}
		if(this.duration == 0) {
			this.complete();
		}
		return this;
	}
	,onRepeat: function(handler,parameters) {
		this._onRepeat = handler;
		if(parameters == null) {
			this._onRepeatParams = [];
		} else {
			this._onRepeatParams = parameters;
		}
		return this;
	}
	,onUpdate: function(handler,parameters) {
		this._onUpdate = handler;
		if(parameters == null) {
			this._onUpdateParams = [];
		} else {
			this._onUpdateParams = parameters;
		}
		return this;
	}
	,pause: function() {
	}
	,reflect: function(value) {
		if(value == null) {
			value = true;
		}
		this._reflect = value;
		this.special = true;
		return this;
	}
	,repeat: function(times) {
		if(times == null) {
			times = -1;
		}
		this._repeat = times;
		return this;
	}
	,resume: function() {
	}
	,reverse: function(value) {
		if(value == null) {
			value = true;
		}
		this._reverse = value;
		this.special = true;
		return this;
	}
	,smartRotation: function(value) {
		if(value == null) {
			value = true;
		}
		this._smartRotation = value;
		this.special = true;
		return this;
	}
	,snapping: function(value) {
		if(value == null) {
			value = true;
		}
		this._snapping = value;
		this.special = true;
		return this;
	}
	,stop: function(properties,complete,sendEvent) {
	}
	,__class__: luxe_tween_actuators_GenericActuator
};
var luxe_tween_actuators_SimpleActuator = function(target,duration,properties) {
	this.has_timescaled_starttime = false;
	this.active = true;
	this.propertyDetails = [];
	this.sendChange = false;
	this.paused = false;
	this.cacheVisible = false;
	this.initialized = false;
	this.setVisible = false;
	this.toggleVisible = false;
	this.startTime = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
	luxe_tween_actuators_GenericActuator.call(this,target,duration,properties);
	if(!luxe_tween_actuators_SimpleActuator.addedEvent) {
		luxe_tween_actuators_SimpleActuator.addedEvent = true;
		Luxe.on(4,luxe_tween_actuators_SimpleActuator.on_internal_update);
	}
};
$hxClasses["luxe.tween.actuators.SimpleActuator"] = luxe_tween_actuators_SimpleActuator;
luxe_tween_actuators_SimpleActuator.__name__ = true;
luxe_tween_actuators_SimpleActuator.on_internal_update = function(_) {
	luxe_tween_actuators_SimpleActuator.update_timer += Luxe.core.frame_delta;
	luxe_tween_actuators_SimpleActuator.current_time = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
	var currentTime = luxe_tween_actuators_SimpleActuator.current_time;
	var actuator;
	var j = 0;
	var _g1 = 0;
	var _g = luxe_tween_actuators_SimpleActuator.actuatorsLength;
	while(_g1 < _g) {
		++_g1;
		actuator = luxe_tween_actuators_SimpleActuator.actuators[j];
		if(actuator != null && actuator.active) {
			if(actuator.timescaled) {
				currentTime = luxe_tween_actuators_SimpleActuator.update_timer;
			} else {
				currentTime = luxe_tween_actuators_SimpleActuator.current_time;
			}
			if(actuator.timescaled && !actuator.has_timescaled_starttime) {
				actuator.has_timescaled_starttime = true;
				actuator.startTime = luxe_tween_actuators_SimpleActuator.update_timer;
				actuator.timeOffset = actuator.startTime;
			}
			if(currentTime > actuator.timeOffset) {
				actuator.update(currentTime);
			}
			++j;
		} else {
			luxe_tween_actuators_SimpleActuator.actuators.splice(j,1);
			--luxe_tween_actuators_SimpleActuator.actuatorsLength;
		}
	}
};
luxe_tween_actuators_SimpleActuator.__super__ = luxe_tween_actuators_GenericActuator;
luxe_tween_actuators_SimpleActuator.prototype = $extend(luxe_tween_actuators_GenericActuator.prototype,{
	autoVisible: function(value) {
		if(value == null) {
			value = true;
		}
		this._autoVisible = value;
		if(!value) {
			this.toggleVisible = false;
			if(this.setVisible) {
				var target = this.target;
				var value1 = this.cacheVisible;
				if(Object.prototype.hasOwnProperty.call(target,"visible")) {
					target["visible"] = value1;
				} else {
					var tmp;
					var tmp1;
					if(target.__properties__) {
						tmp = target.__properties__["set_" + "visible"];
						tmp1 = tmp;
					} else {
						tmp1 = false;
					}
					if(tmp1) {
						target[tmp](value1);
					} else {
						target["visible"] = value1;
					}
				}
			}
		}
		return this;
	}
	,delay: function(duration) {
		this._delay = duration;
		this.timeOffset = this.startTime + duration;
		return this;
	}
	,getField: function(target,propertyName) {
		var value = null;
		if(Object.prototype.hasOwnProperty.call(target,propertyName)) {
			value = Reflect.field(target,propertyName);
		} else {
			var tmp;
			var value1;
			if(target == null) {
				value1 = null;
			} else {
				var value2;
				if(target.__properties__) {
					tmp = target.__properties__["get_" + propertyName];
					value2 = tmp;
				} else {
					value2 = false;
				}
				if(value2) {
					value1 = target[tmp]();
				} else {
					value1 = target[propertyName];
				}
			}
			value = value1;
		}
		return value;
	}
	,initialize: function() {
		var details;
		var start;
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			var isField = true;
			if(Object.prototype.hasOwnProperty.call(this.target,i) && (!this.target.__properties__ || !this.target.__properties__["set_" + i])) {
				start = Reflect.field(this.target,i);
			} else {
				isField = false;
				var o = this.target;
				var tmp;
				if(o == null) {
					start = null;
				} else {
					var start1;
					if(o.__properties__) {
						tmp = o.__properties__["get_" + i];
						start1 = tmp;
					} else {
						start1 = false;
					}
					if(start1) {
						start = o[tmp]();
					} else {
						start = o[i];
					}
				}
			}
			if(typeof(start) == "number") {
				var details1 = this.target;
				var target = this.properties;
				var value = null;
				if(Object.prototype.hasOwnProperty.call(target,i)) {
					value = Reflect.field(target,i);
				} else {
					var tmp1;
					var value1;
					if(target == null) {
						value1 = null;
					} else {
						var value2;
						if(target.__properties__) {
							tmp1 = target.__properties__["get_" + i];
							value2 = tmp1;
						} else {
							value2 = false;
						}
						if(value2) {
							value1 = target[tmp1]();
						} else {
							value1 = target[i];
						}
					}
					value = value1;
				}
				details = new luxe_tween_actuators_PropertyDetails(details1,i,start,value - start,isField);
				this.propertyDetails.push(details);
			}
		}
		this.detailsLength = this.propertyDetails.length;
		this.initialized = true;
	}
	,move: function() {
		this.toggleVisible = Object.prototype.hasOwnProperty.call(this.properties,"alpha") && Object.prototype.hasOwnProperty.call(this.properties,"visible");
		var tmp;
		if(this.toggleVisible && this.properties.alpha != 0) {
			var target = this.target;
			var value = null;
			if(Object.prototype.hasOwnProperty.call(target,"visible")) {
				value = Reflect.field(target,"visible");
			} else {
				var tmp1;
				var value1;
				if(target == null) {
					value1 = null;
				} else {
					var value2;
					if(target.__properties__) {
						tmp1 = target.__properties__["get_" + "visible"];
						value2 = tmp1;
					} else {
						value2 = false;
					}
					if(value2) {
						value1 = target[tmp1]();
					} else {
						value1 = target["visible"];
					}
				}
				value = value1;
			}
			tmp = !value;
		} else {
			tmp = false;
		}
		if(tmp) {
			this.setVisible = true;
			var target1 = this.target;
			var value3 = null;
			if(Object.prototype.hasOwnProperty.call(target1,"visible")) {
				value3 = Reflect.field(target1,"visible");
			} else {
				var tmp2;
				var value4;
				if(target1 == null) {
					value4 = null;
				} else {
					var value5;
					if(target1.__properties__) {
						tmp2 = target1.__properties__["get_" + "visible"];
						value5 = tmp2;
					} else {
						value5 = false;
					}
					if(value5) {
						value4 = target1[tmp2]();
					} else {
						value4 = target1["visible"];
					}
				}
				value3 = value4;
			}
			this.cacheVisible = value3;
			var target2 = this.target;
			if(Object.prototype.hasOwnProperty.call(target2,"visible")) {
				target2["visible"] = true;
			} else {
				var tmp3;
				var tmp4;
				if(target2.__properties__) {
					tmp3 = target2.__properties__["set_" + "visible"];
					tmp4 = tmp3;
				} else {
					tmp4 = false;
				}
				if(tmp4) {
					target2[tmp3](true);
				} else {
					target2["visible"] = true;
				}
			}
		}
		this.timeOffset = this.startTime;
		luxe_tween_actuators_SimpleActuator.actuators.push(this);
		++luxe_tween_actuators_SimpleActuator.actuatorsLength;
	}
	,onUpdate: function(handler,parameters) {
		this._onUpdate = handler;
		if(parameters == null) {
			this._onUpdateParams = [];
		} else {
			this._onUpdateParams = parameters;
		}
		this.sendChange = true;
		return this;
	}
	,pause: function() {
		this.paused = true;
		this.pauseTime = this.timescaled ? luxe_tween_actuators_SimpleActuator.update_timer : luxe_tween_actuators_SimpleActuator.current_time;
	}
	,resume: function() {
		if(this.paused) {
			this.paused = false;
			this.timeOffset += (this.timescaled ? luxe_tween_actuators_SimpleActuator.update_timer : luxe_tween_actuators_SimpleActuator.current_time) - this.pauseTime;
		}
	}
	,setField: function(target,propertyName,value) {
		if(Object.prototype.hasOwnProperty.call(target,propertyName)) {
			target[propertyName] = value;
		} else {
			var tmp;
			var tmp1;
			if(target.__properties__) {
				tmp = target.__properties__["set_" + propertyName];
				tmp1 = tmp;
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				target[tmp](value);
			} else {
				target[propertyName] = value;
			}
		}
	}
	,setProperty: function(details,value) {
		if(details.isField) {
			var o = details.target;
			var field = details.propertyName;
			var tmp;
			var tmp1;
			if(o.__properties__) {
				tmp = o.__properties__["set_" + field];
				tmp1 = tmp;
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				o[tmp](value);
			} else {
				o[field] = value;
			}
		} else {
			var o1 = details.target;
			var field1 = details.propertyName;
			var tmp2;
			var tmp3;
			if(o1.__properties__) {
				tmp2 = o1.__properties__["set_" + field1];
				tmp3 = tmp2;
			} else {
				tmp3 = false;
			}
			if(tmp3) {
				o1[tmp2](value);
			} else {
				o1[field1] = value;
			}
		}
	}
	,stop: function(properties,complete,sendEvent) {
		if(this.active) {
			if(properties == null) {
				this.active = false;
				if(complete) {
					this.apply();
				}
				this.complete(sendEvent);
				return;
			}
			var _g = 0;
			var _g1 = Reflect.fields(properties);
			while(_g < _g1.length) {
				var i = _g1[_g];
				++_g;
				if(Object.prototype.hasOwnProperty.call(this.properties,i)) {
					this.active = false;
					if(complete) {
						this.apply();
					}
					this.complete(sendEvent);
					return;
				}
			}
		}
	}
	,update: function(currentTime) {
		if(!this.paused) {
			var details;
			var easing;
			var i;
			var tweenPosition = (currentTime - this.timeOffset) / this.duration;
			if(tweenPosition > 1) {
				tweenPosition = 1;
			}
			if(!this.initialized) {
				this.initialize();
			}
			if(!this.special) {
				easing = this._ease.calculate(tweenPosition);
				var _g1 = 0;
				var _g = this.detailsLength;
				while(_g1 < _g) {
					details = this.propertyDetails[_g1++];
					var value = details.start + details.change * easing;
					if(details.isField) {
						var o = details.target;
						var field = details.propertyName;
						var tmp;
						var tmp1;
						if(o.__properties__) {
							tmp = o.__properties__["set_" + field];
							tmp1 = tmp;
						} else {
							tmp1 = false;
						}
						if(tmp1) {
							o[tmp](value);
						} else {
							o[field] = value;
						}
					} else {
						var o1 = details.target;
						var field1 = details.propertyName;
						var tmp2;
						var tmp3;
						if(o1.__properties__) {
							tmp2 = o1.__properties__["set_" + field1];
							tmp3 = tmp2;
						} else {
							tmp3 = false;
						}
						if(tmp3) {
							o1[tmp2](value);
						} else {
							o1[field1] = value;
						}
					}
				}
			} else {
				if(!this._reverse) {
					easing = this._ease.calculate(tweenPosition);
				} else {
					easing = this._ease.calculate(1 - tweenPosition);
				}
				var endValue;
				var _g11 = 0;
				var _g2 = this.detailsLength;
				while(_g11 < _g2) {
					details = this.propertyDetails[_g11++];
					if(this._smartRotation && (details.propertyName == "rotation" || details.propertyName == "rotationX" || details.propertyName == "rotationY" || details.propertyName == "rotationZ")) {
						var rotation = details.change % 360;
						if(rotation > 180) {
							rotation -= 360;
						} else if(rotation < -180) {
							rotation += 360;
						}
						endValue = details.start + rotation * easing;
					} else {
						endValue = details.start + details.change * easing;
					}
					if(!this._snapping) {
						if(details.isField) {
							var o2 = details.target;
							var field2 = details.propertyName;
							var tmp4;
							var tmp5;
							if(o2.__properties__) {
								tmp4 = o2.__properties__["set_" + field2];
								tmp5 = tmp4;
							} else {
								tmp5 = false;
							}
							if(tmp5) {
								o2[tmp4](endValue);
							} else {
								o2[field2] = endValue;
							}
						} else {
							var o3 = details.target;
							var field3 = details.propertyName;
							var tmp6;
							var tmp7;
							if(o3.__properties__) {
								tmp6 = o3.__properties__["set_" + field3];
								tmp7 = tmp6;
							} else {
								tmp7 = false;
							}
							if(tmp7) {
								o3[tmp6](endValue);
							} else {
								o3[field3] = endValue;
							}
						}
					} else {
						var value1 = Math.round(endValue);
						if(details.isField) {
							var o4 = details.target;
							var field4 = details.propertyName;
							var tmp8;
							var tmp9;
							if(o4.__properties__) {
								tmp8 = o4.__properties__["set_" + field4];
								tmp9 = tmp8;
							} else {
								tmp9 = false;
							}
							if(tmp9) {
								o4[tmp8](value1);
							} else {
								o4[field4] = value1;
							}
						} else {
							var o5 = details.target;
							var field5 = details.propertyName;
							var tmp10;
							var tmp11;
							if(o5.__properties__) {
								tmp10 = o5.__properties__["set_" + field5];
								tmp11 = tmp10;
							} else {
								tmp11 = false;
							}
							if(tmp11) {
								o5[tmp10](value1);
							} else {
								o5[field5] = value1;
							}
						}
					}
				}
			}
			if(tweenPosition == 1) {
				if(this._repeat == 0) {
					this.active = false;
					var tmp12;
					if(this.toggleVisible) {
						var target = this.target;
						var value2 = null;
						if(Object.prototype.hasOwnProperty.call(target,"alpha")) {
							value2 = Reflect.field(target,"alpha");
						} else {
							var tmp13;
							var value3;
							if(target == null) {
								value3 = null;
							} else {
								var value4;
								if(target.__properties__) {
									tmp13 = target.__properties__["get_" + "alpha"];
									value4 = tmp13;
								} else {
									value4 = false;
								}
								if(value4) {
									value3 = target[tmp13]();
								} else {
									value3 = target["alpha"];
								}
							}
							value2 = value3;
						}
						tmp12 = value2 == 0;
					} else {
						tmp12 = false;
					}
					if(tmp12) {
						var target1 = this.target;
						if(Object.prototype.hasOwnProperty.call(target1,"visible")) {
							target1["visible"] = false;
						} else {
							var tmp14;
							var tmp15;
							if(target1.__properties__) {
								tmp14 = target1.__properties__["set_" + "visible"];
								tmp15 = tmp14;
							} else {
								tmp15 = false;
							}
							if(tmp15) {
								target1[tmp14](false);
							} else {
								target1["visible"] = false;
							}
						}
					}
					this.complete(true);
					return;
				} else {
					if(this._onRepeat != null) {
						var method = this._onRepeat;
						var params = this._onRepeatParams;
						if(params == null) {
							params = [];
						}
						method.apply(method,params);
					}
					if(this._reflect) {
						this._reverse = !this._reverse;
					}
					this.startTime = currentTime;
					this.timeOffset = this.startTime + this._delay;
					if(this._repeat > 0) {
						this._repeat--;
					}
				}
			}
			if(this.sendChange) {
				this.change();
			}
		}
	}
	,__class__: luxe_tween_actuators_SimpleActuator
});
var luxe_tween_easing_Quad = function() { };
$hxClasses["luxe.tween.easing.Quad"] = luxe_tween_easing_Quad;
luxe_tween_easing_Quad.__name__ = true;
luxe_tween_easing_Quad.__properties__ = {get_easeOut:"get_easeOut"}
luxe_tween_easing_Quad.get_easeOut = function() {
	return new luxe_tween_easing_QuadEaseOut();
};
var luxe_tween_easing_IEasing = function() { };
$hxClasses["luxe.tween.easing.IEasing"] = luxe_tween_easing_IEasing;
luxe_tween_easing_IEasing.__name__ = true;
luxe_tween_easing_IEasing.prototype = {
	__class__: luxe_tween_easing_IEasing
};
var luxe_tween_easing_QuadEaseOut = function() {
};
$hxClasses["luxe.tween.easing.QuadEaseOut"] = luxe_tween_easing_QuadEaseOut;
luxe_tween_easing_QuadEaseOut.__name__ = true;
luxe_tween_easing_QuadEaseOut.__interfaces__ = [luxe_tween_easing_IEasing];
luxe_tween_easing_QuadEaseOut.prototype = {
	calculate: function(k) {
		return -k * (k - 2);
	}
	,__class__: luxe_tween_easing_QuadEaseOut
};
var luxe_tween_Actuate = function() { };
$hxClasses["luxe.tween.Actuate"] = luxe_tween_Actuate;
luxe_tween_Actuate.__name__ = true;
luxe_tween_Actuate.apply = function(target,properties,customActuator) {
	luxe_tween_Actuate.stop(target,properties);
	if(customActuator == null) {
		customActuator = luxe_tween_Actuate.defaultActuator;
	}
	var actuator = Type.createInstance(customActuator,[target,0,properties]);
	actuator.apply();
	return actuator;
};
luxe_tween_Actuate.getLibrary = function(target,allowCreation) {
	if(allowCreation == null) {
		allowCreation = true;
	}
	if(luxe_tween_Actuate.targetLibraries.h.__keys__[target.__id__] == null && allowCreation) {
		luxe_tween_Actuate.targetLibraries.set(target,[]);
	}
	return luxe_tween_Actuate.targetLibraries.h[target.__id__];
};
luxe_tween_Actuate.stop = function(target,properties,complete,sendEvent) {
	if(sendEvent == null) {
		sendEvent = true;
	}
	if(complete == null) {
		complete = false;
	}
	if(target != null) {
		if(js_Boot.__instanceof(target,luxe_tween_actuators_GenericActuator)) {
			(js_Boot.__cast(target , luxe_tween_actuators_GenericActuator)).stop(null,complete,sendEvent);
		} else {
			var library = luxe_tween_Actuate.getLibrary(target,false);
			if(library != null) {
				if(typeof(properties) == "string") {
					var temp = { };
					temp[properties] = null;
					properties = temp;
				} else if((properties instanceof Array) && properties.__enum__ == null) {
					var temp1 = { };
					var _g = 0;
					var _g1 = js_Boot.__cast(properties , Array);
					while(_g < _g1.length) {
						var property = _g1[_g];
						++_g;
						temp1[property] = null;
					}
					properties = temp1;
				}
				var i = library.length - 1;
				while(i >= 0) {
					library[i].stop(properties,complete,sendEvent);
					--i;
				}
			}
		}
	}
};
luxe_tween_Actuate.tween = function(target,duration,properties,overwrite,customActuator) {
	if(overwrite == null) {
		overwrite = true;
	}
	if(target != null) {
		if(duration > 0) {
			if(customActuator == null) {
				customActuator = luxe_tween_Actuate.defaultActuator;
			}
			var actuator = Type.createInstance(customActuator,[target,duration,properties]);
			var library = luxe_tween_Actuate.getLibrary(actuator.target);
			if(overwrite) {
				var i = library.length - 1;
				while(i >= 0) {
					library[i].stop(actuator.properties,false,false);
					--i;
				}
				library = luxe_tween_Actuate.getLibrary(actuator.target);
			}
			library.push(actuator);
			actuator.move();
			return actuator;
		} else {
			return luxe_tween_Actuate.apply(target,properties,customActuator);
		}
	}
	return null;
};
luxe_tween_Actuate.unload = function(actuator) {
	var target = actuator.target;
	if(luxe_tween_Actuate.targetLibraries.h.__keys__[target.__id__] != null) {
		HxOverrides.remove(luxe_tween_Actuate.targetLibraries.h[target.__id__],actuator);
		if(luxe_tween_Actuate.targetLibraries.h[target.__id__].length == 0) {
			luxe_tween_Actuate.targetLibraries.remove(target);
		}
	}
};
var luxe_tween_IComponentPath = function() { };
$hxClasses["luxe.tween.IComponentPath"] = luxe_tween_IComponentPath;
luxe_tween_IComponentPath.__name__ = true;
luxe_tween_IComponentPath.prototype = {
	__class__: luxe_tween_IComponentPath
	,__properties__: {get_end:"get_end"}
};
var luxe_tween_actuators_MethodActuator = function(target,duration,properties) {
	this.currentParameters = [];
	this.tweenProperties = { };
	luxe_tween_actuators_SimpleActuator.call(this,target,duration,properties);
	if(!Object.prototype.hasOwnProperty.call(properties,"start")) {
		this.properties.start = [];
	}
	if(!Object.prototype.hasOwnProperty.call(properties,"end")) {
		this.properties.end = this.properties.start;
	}
	var _g1 = 0;
	var _g = this.properties.start.length;
	while(_g1 < _g) {
		++_g1;
		this.currentParameters.push(null);
	}
};
$hxClasses["luxe.tween.actuators.MethodActuator"] = luxe_tween_actuators_MethodActuator;
luxe_tween_actuators_MethodActuator.__name__ = true;
luxe_tween_actuators_MethodActuator.__super__ = luxe_tween_actuators_SimpleActuator;
luxe_tween_actuators_MethodActuator.prototype = $extend(luxe_tween_actuators_SimpleActuator.prototype,{
	apply: function() {
		var method = this.target;
		var params = this.properties.end;
		if(params == null) {
			params = [];
		}
		method.apply(method,params);
	}
	,complete: function(sendEvent) {
		if(sendEvent == null) {
			sendEvent = true;
		}
		var _g1 = 0;
		var _g = this.properties.start.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.currentParameters[i] = Reflect.field(this.tweenProperties,"param" + i);
		}
		var method = this.target;
		var params = this.currentParameters;
		if(params == null) {
			params = [];
		}
		method.apply(method,params);
		luxe_tween_actuators_SimpleActuator.prototype.complete.call(this,sendEvent);
	}
	,initialize: function() {
		var details;
		var propertyName;
		var start;
		var _g1 = 0;
		var _g = this.properties.start.length;
		while(_g1 < _g) {
			var i = _g1++;
			propertyName = "param" + i;
			start = this.properties.start[i];
			this.tweenProperties[propertyName] = start;
			if(typeof(start) == "number" || typeof(start) == "number" && ((start | 0) === start)) {
				details = new luxe_tween_actuators_PropertyDetails(this.tweenProperties,propertyName,start,this.properties.end[i] - start);
				this.propertyDetails.push(details);
			}
		}
		this.detailsLength = this.propertyDetails.length;
		this.initialized = true;
	}
	,update: function(currentTime) {
		luxe_tween_actuators_SimpleActuator.prototype.update.call(this,currentTime);
		if(this.active) {
			var _g1 = 0;
			var _g = this.properties.start.length;
			while(_g1 < _g) {
				var i = _g1++;
				this.currentParameters[i] = Reflect.field(this.tweenProperties,"param" + i);
			}
			var method = this.target;
			var params = this.currentParameters;
			if(params == null) {
				params = [];
			}
			method.apply(method,params);
		}
	}
	,__class__: luxe_tween_actuators_MethodActuator
});
var luxe_tween_actuators_MotionPathActuator = function(target,duration,properties) {
	luxe_tween_actuators_SimpleActuator.call(this,target,duration,properties);
};
$hxClasses["luxe.tween.actuators.MotionPathActuator"] = luxe_tween_actuators_MotionPathActuator;
luxe_tween_actuators_MotionPathActuator.__name__ = true;
luxe_tween_actuators_MotionPathActuator.__super__ = luxe_tween_actuators_SimpleActuator;
luxe_tween_actuators_MotionPathActuator.prototype = $extend(luxe_tween_actuators_SimpleActuator.prototype,{
	apply: function() {
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var propertyName = _g1[_g];
			++_g;
			if(Object.prototype.hasOwnProperty.call(this.target,propertyName)) {
				this.target[propertyName] = (js_Boot.__cast(Reflect.field(this.properties,propertyName) , luxe_tween_IComponentPath)).get_end();
			} else {
				var o = this.target;
				var value = (js_Boot.__cast(Reflect.field(this.properties,propertyName) , luxe_tween_IComponentPath)).get_end();
				var tmp;
				var tmp1;
				if(o.__properties__) {
					tmp = o.__properties__["set_" + propertyName];
					tmp1 = tmp;
				} else {
					tmp1 = false;
				}
				if(tmp1) {
					o[tmp](value);
				} else {
					o[propertyName] = value;
				}
			}
		}
	}
	,initialize: function() {
		var details;
		var path;
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var propertyName = _g1[_g];
			++_g;
			path = js_Boot.__cast(Reflect.field(this.properties,propertyName) , luxe_tween_IComponentPath);
			if(path != null) {
				var isField = true;
				if(Object.prototype.hasOwnProperty.call(this.target,propertyName)) {
					path.start = Reflect.field(this.target,propertyName);
				} else {
					isField = false;
					var o = this.target;
					var tmp;
					var tmp1;
					if(o == null) {
						tmp1 = null;
					} else {
						var tmp2;
						if(o.__properties__) {
							tmp = o.__properties__["get_" + propertyName];
							tmp2 = tmp;
						} else {
							tmp2 = false;
						}
						if(tmp2) {
							tmp1 = o[tmp]();
						} else {
							tmp1 = o[propertyName];
						}
					}
					path.start = tmp1;
				}
				details = new luxe_tween_actuators_PropertyPathDetails(this.target,propertyName,path,isField);
				this.propertyDetails.push(details);
			}
		}
		this.detailsLength = this.propertyDetails.length;
		this.initialized = true;
	}
	,update: function(currentTime) {
		if(!this.paused) {
			var details;
			var easing;
			var tweenPosition = (currentTime - this.timeOffset) / this.duration;
			if(tweenPosition > 1) {
				tweenPosition = 1;
			}
			if(!this.initialized) {
				this.initialize();
			}
			if(!this.special) {
				easing = this._ease.calculate(tweenPosition);
				var _g = 0;
				var _g1 = this.propertyDetails;
				while(_g < _g1.length) {
					var details1 = _g1[_g];
					++_g;
					if(details1.isField) {
						details1.target[details1.propertyName] = (js_Boot.__cast(details1 , luxe_tween_actuators_PropertyPathDetails)).path.calculate(easing);
					} else {
						var o = details1.target;
						var field = details1.propertyName;
						var value = (js_Boot.__cast(details1 , luxe_tween_actuators_PropertyPathDetails)).path.calculate(easing);
						var tmp;
						var tmp1;
						if(o.__properties__) {
							tmp = o.__properties__["set_" + field];
							tmp1 = tmp;
						} else {
							tmp1 = false;
						}
						if(tmp1) {
							o[tmp](value);
						} else {
							o[field] = value;
						}
					}
				}
			} else {
				if(!this._reverse) {
					easing = this._ease.calculate(tweenPosition);
				} else {
					easing = this._ease.calculate(1 - tweenPosition);
				}
				var endValue;
				var _g2 = 0;
				var _g11 = this.propertyDetails;
				while(_g2 < _g11.length) {
					var details2 = _g11[_g2];
					++_g2;
					if(!this._snapping) {
						if(details2.isField) {
							details2.target[details2.propertyName] = (js_Boot.__cast(details2 , luxe_tween_actuators_PropertyPathDetails)).path.calculate(easing);
						} else {
							var o1 = details2.target;
							var field1 = details2.propertyName;
							var value1 = (js_Boot.__cast(details2 , luxe_tween_actuators_PropertyPathDetails)).path.calculate(easing);
							var tmp2;
							var tmp3;
							if(o1.__properties__) {
								tmp2 = o1.__properties__["set_" + field1];
								tmp3 = tmp2;
							} else {
								tmp3 = false;
							}
							if(tmp3) {
								o1[tmp2](value1);
							} else {
								o1[field1] = value1;
							}
						}
					} else if(details2.isField) {
						details2.target[details2.propertyName] = Math.round((js_Boot.__cast(details2 , luxe_tween_actuators_PropertyPathDetails)).path.calculate(easing));
					} else {
						var o2 = details2.target;
						var field2 = details2.propertyName;
						var value2 = Math.round((js_Boot.__cast(details2 , luxe_tween_actuators_PropertyPathDetails)).path.calculate(easing));
						var tmp4;
						var tmp5;
						if(o2.__properties__) {
							tmp4 = o2.__properties__["set_" + field2];
							tmp5 = tmp4;
						} else {
							tmp5 = false;
						}
						if(tmp5) {
							o2[tmp4](value2);
						} else {
							o2[field2] = value2;
						}
					}
				}
			}
			if(tweenPosition == 1) {
				if(this._repeat == 0) {
					this.active = false;
					var tmp6;
					if(this.toggleVisible) {
						var target = this.target;
						var value3 = null;
						if(Object.prototype.hasOwnProperty.call(target,"alpha")) {
							value3 = Reflect.field(target,"alpha");
						} else {
							var tmp7;
							var value4;
							if(target == null) {
								value4 = null;
							} else {
								var value5;
								if(target.__properties__) {
									tmp7 = target.__properties__["get_" + "alpha"];
									value5 = tmp7;
								} else {
									value5 = false;
								}
								if(value5) {
									value4 = target[tmp7]();
								} else {
									value4 = target["alpha"];
								}
							}
							value3 = value4;
						}
						tmp6 = value3 == 0;
					} else {
						tmp6 = false;
					}
					if(tmp6) {
						var target1 = this.target;
						if(Object.prototype.hasOwnProperty.call(target1,"visible")) {
							target1["visible"] = false;
						} else {
							var tmp8;
							var tmp9;
							if(target1.__properties__) {
								tmp8 = target1.__properties__["set_" + "visible"];
								tmp9 = tmp8;
							} else {
								tmp9 = false;
							}
							if(tmp9) {
								target1[tmp8](false);
							} else {
								target1["visible"] = false;
							}
						}
					}
					this.complete(true);
					return;
				} else {
					if(this._reflect) {
						this._reverse = !this._reverse;
					}
					this.startTime = currentTime;
					this.timeOffset = this.startTime + this._delay;
					if(this._repeat > 0) {
						this._repeat--;
					}
				}
			}
			if(this.sendChange) {
				this.change();
			}
		}
	}
	,__class__: luxe_tween_actuators_MotionPathActuator
});
var luxe_tween_actuators_PropertyDetails = function(target,propertyName,start,change,isField) {
	if(isField == null) {
		isField = true;
	}
	this.target = target;
	this.propertyName = propertyName;
	this.start = start;
	this.change = change;
	this.isField = isField;
};
$hxClasses["luxe.tween.actuators.PropertyDetails"] = luxe_tween_actuators_PropertyDetails;
luxe_tween_actuators_PropertyDetails.__name__ = true;
luxe_tween_actuators_PropertyDetails.prototype = {
	__class__: luxe_tween_actuators_PropertyDetails
};
var luxe_tween_actuators_PropertyPathDetails = function(target,propertyName,path,isField) {
	if(isField == null) {
		isField = true;
	}
	luxe_tween_actuators_PropertyDetails.call(this,target,propertyName,0,0,isField);
	this.path = path;
};
$hxClasses["luxe.tween.actuators.PropertyPathDetails"] = luxe_tween_actuators_PropertyPathDetails;
luxe_tween_actuators_PropertyPathDetails.__name__ = true;
luxe_tween_actuators_PropertyPathDetails.__super__ = luxe_tween_actuators_PropertyDetails;
luxe_tween_actuators_PropertyPathDetails.prototype = $extend(luxe_tween_actuators_PropertyDetails.prototype,{
	__class__: luxe_tween_actuators_PropertyPathDetails
});
var luxe_tween_easing_Linear = function() { };
$hxClasses["luxe.tween.easing.Linear"] = luxe_tween_easing_Linear;
luxe_tween_easing_Linear.__name__ = true;
luxe_tween_easing_Linear.__properties__ = {get_easeNone:"get_easeNone"}
luxe_tween_easing_Linear.get_easeNone = function() {
	return new luxe_tween_easing_LinearEaseNone();
};
var luxe_tween_easing_LinearEaseNone = function() {
};
$hxClasses["luxe.tween.easing.LinearEaseNone"] = luxe_tween_easing_LinearEaseNone;
luxe_tween_easing_LinearEaseNone.__name__ = true;
luxe_tween_easing_LinearEaseNone.__interfaces__ = [luxe_tween_easing_IEasing];
luxe_tween_easing_LinearEaseNone.prototype = {
	calculate: function(k) {
		return k;
	}
	,__class__: luxe_tween_easing_LinearEaseNone
};
var luxe_utils_GeometryUtils = function() {
	this._v_cache = new phoenix_Vector();
};
$hxClasses["luxe.utils.GeometryUtils"] = luxe_utils_GeometryUtils;
luxe_utils_GeometryUtils.__name__ = true;
luxe_utils_GeometryUtils.prototype = {
	random_point_in_unit_circle: function() {
		var _r = Math.sqrt(Math.random());
		var _t = (-1 + 2 * Math.random()) * 6.283185307179586;
		return new phoenix_Vector(_r * Math.cos(_t),_r * Math.sin(_t));
	}
	,__class__: luxe_utils_GeometryUtils
};
var luxe_utils_Random = function(_initial_seed) {
	if(!(_initial_seed > 0)) {
		throw new js__$Boot_HaxeError(luxe_DebugError.assertion("_initial_seed > 0" + (" ( " + "initial negative seed will return negative random results, if this was intentional, define luxe_random_allow_negative_seed" + " )")));
	}
	this.initial = this.seed = _initial_seed;
	this.seed = this.initial;
};
$hxClasses["luxe.utils.Random"] = luxe_utils_Random;
luxe_utils_Random.__name__ = true;
luxe_utils_Random.prototype = {
	__class__: luxe_utils_Random
};
var luxe_utils_Utils = function(_luxe) {
	this.core = _luxe;
	this.geometry = new luxe_utils_GeometryUtils();
	this.random = new luxe_utils_Random(Math.random() * 2147483647);
	this._byte_levels = ["bytes","Kb","MB","GB","TB"];
};
$hxClasses["luxe.utils.Utils"] = luxe_utils_Utils;
luxe_utils_Utils.__name__ = true;
luxe_utils_Utils.prototype = {
	uniqueid: function(val) {
		if(val == null) {
			val = Std.random(2147483647);
		}
		var to_char = function(value) {
			if(value > 9) {
				var ascii = 65 + (value - 10);
				if(ascii > 90) {
					ascii += 6;
				}
				return String.fromCharCode(ascii);
			} else {
				return (value == null ? "null" : "" + value).charAt(0);
			}
		};
		var r = val % 62 | 0;
		var q = val / 62 | 0;
		if(q > 0) {
			return this.uniqueid(q) + to_char(r);
		} else {
			return Std.string(to_char(r));
		}
	}
	,bytes_to_string: function(bytes,precision) {
		if(precision == null) {
			precision = 3;
		}
		var index = bytes == 0 ? 0 : Math.floor(Math.log(bytes) / Math.log(1024));
		var _byte_value = bytes / Math.pow(1024,index);
		var n = Math.pow(10,precision);
		_byte_value = (_byte_value * n | 0) / n;
		return _byte_value + " " + this._byte_levels[index];
	}
	,premultiply_alpha: function(_pixels) {
		var count = _pixels.length;
		var index = 0;
		while(index < count) {
			var g = _pixels[index + 1];
			var b = _pixels[index + 2];
			var a = _pixels[index + 3] / 255.0;
			_pixels[index] = _pixels[index] * a | 0;
			_pixels[index + 1] = g * a | 0;
			_pixels[index + 2] = b * a | 0;
			index += 4;
		}
		return _pixels;
	}
	,__class__: luxe_utils_Utils
};
var luxe_utils_unifill_Exception = { __ename__ : true, __constructs__ : ["InvalidCodePoint","InvalidCodeUnitSequence"] };
luxe_utils_unifill_Exception.InvalidCodePoint = function(code) { var $x = ["InvalidCodePoint",0,code]; $x.__enum__ = luxe_utils_unifill_Exception; $x.toString = $estr; return $x; };
luxe_utils_unifill_Exception.InvalidCodeUnitSequence = function(index) { var $x = ["InvalidCodeUnitSequence",1,index]; $x.__enum__ = luxe_utils_unifill_Exception; $x.toString = $estr; return $x; };
var luxe_utils_unifill_Unifill = function() { };
$hxClasses["luxe.utils.unifill.Unifill"] = luxe_utils_unifill_Unifill;
luxe_utils_unifill_Unifill.__name__ = true;
luxe_utils_unifill_Unifill.uSplit = function(s,delimiter) {
	var _g1_index;
	if(delimiter.length == 0) {
		var _g = [];
		var _g1_i = 0;
		var endIndex = s.length;
		_g1_index = 0;
		while(_g1_index < endIndex) {
			_g1_i = _g1_index;
			var c = s.charCodeAt(_g1_index);
			_g1_index += !(55296 <= c && c <= 56319) ? 1 : 2;
			var i = _g1_i;
			var s1 = s;
			var c1 = s1.charCodeAt(i);
			_g.push(HxOverrides.substr(s1,i,!(55296 <= c1 && c1 <= 56319) ? 1 : 2));
		}
		return _g;
	} else {
		return s.split(delimiter);
	}
};
var luxe_utils_unifill__$Utf16_Utf16_$Impl_$ = {};
$hxClasses["luxe.utils.unifill._Utf16.Utf16_Impl_"] = luxe_utils_unifill__$Utf16_Utf16_$Impl_$;
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.__name__ = true;
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointAt = function(this1,index) {
	return luxe_utils_unifill__$Utf16_Utf16Impl.decode_code_point(this1.length,function(i) {
		return this1.charCodeAt(i);
	},index);
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointCount = function(this1,beginIndex,endIndex) {
	var index = beginIndex;
	var i = 0;
	while(index < endIndex) {
		var c = this1.charCodeAt(index);
		index += !(55296 <= c && c <= 56319) ? 1 : 2;
		++i;
	}
	return i;
};
var luxe_utils_unifill__$Utf16_Utf16Impl = function() { };
$hxClasses["luxe.utils.unifill._Utf16.Utf16Impl"] = luxe_utils_unifill__$Utf16_Utf16Impl;
luxe_utils_unifill__$Utf16_Utf16Impl.__name__ = true;
luxe_utils_unifill__$Utf16_Utf16Impl.decode_code_point = function(len,accessor,index) {
	if(index < 0 || len <= index) {
		throw new js__$Boot_HaxeError(luxe_utils_unifill_Exception.InvalidCodeUnitSequence(index));
	}
	var hi = accessor(index);
	if(55296 <= hi && hi <= 56319) {
		if(index + 1 < 0 || len <= index + 1) {
			throw new js__$Boot_HaxeError(luxe_utils_unifill_Exception.InvalidCodeUnitSequence(index));
		}
		var lo = accessor(index + 1);
		if(56320 <= lo && lo <= 57343) {
			return hi - 55232 << 10 | lo & 1023;
		} else {
			throw new js__$Boot_HaxeError(luxe_utils_unifill_Exception.InvalidCodeUnitSequence(index));
		}
	} else if(56320 <= hi && hi <= 57343) {
		throw new js__$Boot_HaxeError(luxe_utils_unifill_Exception.InvalidCodeUnitSequence(index));
	} else {
		return hi;
	}
};
var phoenix_BatchState = function(_r) {
	this.batcher = _r;
	this.geom_state = new phoenix_geometry_GeometryState();
	this.last_geom_state = new phoenix_geometry_GeometryState();
};
$hxClasses["phoenix.BatchState"] = phoenix_BatchState;
phoenix_BatchState.__name__ = true;
phoenix_BatchState.prototype = {
	deactivate: function(batcher) {
		if(this.last_texture_id != null) {
			Luxe.renderer.state.bindTexture2D(null);
		}
		Luxe.renderer.state.useProgram(null);
		if(this.is_clipping) {
			snow_modules_opengl_web_GL.gl.disable(3089);
		}
		snow_modules_opengl_web_GL.gl.blendFunc(770,771);
		snow_modules_opengl_web_GL.gl.blendEquation(32774);
	}
	,update: function(geom) {
		var _this = this.geom_state;
		var _other = this.last_geom_state;
		_other.dirty = _this.dirty;
		_other.dirty = true;
		_other.texture = _this.texture;
		_other.dirty = true;
		_other.shader = _this.shader;
		_other.depth = _this.depth;
		_other.dirty = true;
		_other.primitive_type = _this.primitive_type;
		_other.dirty = true;
		_other.clip = _this.clip;
		_other.dirty = true;
		_other.clip_x = _this.clip_x;
		_other.dirty = true;
		_other.clip_y = _this.clip_y;
		_other.dirty = true;
		_other.clip_w = _this.clip_w;
		_other.dirty = true;
		_other.clip_h = _this.clip_h;
		_other.dirty = true;
		_other.blend_src_alpha = _this.blend_src_alpha;
		_other.dirty = true;
		_other.blend_src_rgb = _this.blend_src_rgb;
		_other.dirty = true;
		_other.blend_dest_alpha = _this.blend_dest_alpha;
		_other.dirty = true;
		_other.blend_dest_rgb = _this.blend_dest_rgb;
		_other.ignore_blend = _this.ignore_blend;
		var _this1 = this.geom_state;
		var other = geom.state;
		if(_this1.depth != other.depth) {
			_this1.depth = other.depth;
		}
		if(_this1.texture != other.texture) {
			_this1.dirty = true;
			_this1.texture = other.texture;
		}
		if(_this1.shader != other.shader) {
			_this1.dirty = true;
			_this1.shader = other.shader;
		}
		if(_this1.primitive_type != other.primitive_type) {
			_this1.dirty = true;
			_this1.primitive_type = other.primitive_type;
		}
		if(_this1.clip != other.clip) {
			_this1.dirty = true;
			_this1.clip = other.clip;
		}
		if(_this1.clip_x != other.clip_x) {
			_this1.dirty = true;
			_this1.clip_x = other.clip_x;
		}
		if(_this1.clip_y != other.clip_y) {
			_this1.dirty = true;
			_this1.clip_y = other.clip_y;
		}
		if(_this1.clip_w != other.clip_w) {
			_this1.dirty = true;
			_this1.clip_w = other.clip_w;
		}
		if(_this1.clip_h != other.clip_h) {
			_this1.dirty = true;
			_this1.clip_h = other.clip_h;
		}
		if(_this1.blend_src_alpha != other.blend_src_alpha) {
			_this1.dirty = true;
			_this1.blend_src_alpha = other.blend_src_alpha;
		}
		if(_this1.blend_src_rgb != other.blend_src_rgb) {
			_this1.dirty = true;
			_this1.blend_src_rgb = other.blend_src_rgb;
		}
		if(_this1.blend_dest_alpha != other.blend_dest_alpha) {
			_this1.dirty = true;
			_this1.blend_dest_alpha = other.blend_dest_alpha;
		}
		if(_this1.blend_dest_rgb != other.blend_dest_rgb) {
			_this1.dirty = true;
			_this1.blend_dest_rgb = other.blend_dest_rgb;
		}
		if(_this1.ignore_blend != other.ignore_blend) {
			_this1.ignore_blend = other.ignore_blend;
		}
		if(this.geom_state.clip) {
			this.last_clip_rect = this.clip_rect;
			this.clip_rect = geom.clip_rect;
		}
		if(!this.geom_state.dirty) {
			return this.last_clip_rect != this.clip_rect;
		} else {
			return true;
		}
	}
	,__class__: phoenix_BatchState
};
var phoenix_Batcher = function(_r,_name,_max_verts) {
	if(_max_verts == null) {
		_max_verts = 16384;
	}
	if(_name == null) {
		_name = "";
	}
	this.normal_floats = 0;
	this.color_floats = 0;
	this.tcoord_floats = 0;
	this.pos_floats = 0;
	this.sequence = -1;
	this.show_stats = 1;
	this.name = "";
	this.visible_count = 0;
	this.static_batched_count = 0;
	this.dynamic_batched_count = 0;
	this.draw_calls = 0;
	this.vert_count = 0;
	this.max_floats = 0;
	this.max_verts = 0;
	this.tree_changed = false;
	this.layer = 0;
	this.enabled = true;
	this.id = Luxe.utils.uniqueid();
	this.renderer = _r;
	this.sequence = ++phoenix_Batcher._sequence_key;
	this.geometry = new luxe_structural_BalancedBST_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry($bind(this,this.geometry_compare));
	this.emitter = new luxe_Emitter();
	this.max_verts = _max_verts;
	this.max_floats = this.max_verts * 4;
	this.pos_list = new Float32Array(this.max_floats);
	this.tcoord_list = new Float32Array(this.max_floats);
	this.color_list = new Float32Array(this.max_floats);
	this.view = this.renderer.camera;
	snow_modules_opengl_web_GL.gl.enableVertexAttribArray(0);
	snow_modules_opengl_web_GL.gl.enableVertexAttribArray(1);
	snow_modules_opengl_web_GL.gl.enableVertexAttribArray(2);
	if(_name.length == 0) {
		this.name = Luxe.utils.uniqueid();
	} else {
		this.name = _name;
	}
	this._dropped = [];
	this.renderer.stats.batchers++;
	phoenix_Batcher.all.push(this);
};
$hxClasses["phoenix.Batcher"] = phoenix_Batcher;
phoenix_Batcher.__name__ = true;
phoenix_Batcher.prototype = {
	add: function(_geom,_force_add) {
		if(_force_add == null) {
			_force_add = false;
		}
		if(this.geometry.find(_geom.key) == null || _force_add) {
			if(!Lambda.has(_geom.batchers,this)) {
				_geom.batchers.push(this);
			}
			var _this = this.geometry;
			_this.root = _this.node_insert(_this.root,_geom.key,_geom);
			_this.root.color = false;
			_geom.added = true;
			this.tree_changed = true;
		}
	}
	,remove: function(_geom,_remove_batcher_from_geometry) {
		if(_remove_batcher_from_geometry == null) {
			_remove_batcher_from_geometry = true;
		}
		if(_remove_batcher_from_geometry) {
			HxOverrides.remove(_geom.batchers,this);
			if(_geom.batchers.length == 0) {
				_geom.added = false;
			}
		}
		var _node = this.geometry.root;
		if(_node == null) {
			0;
		} else {
			_node.nodecount;
		}
		this.geometry.remove(_geom.key);
		var _node1 = this.geometry.root;
		if(_node1 == null) {
			0;
		} else {
			_node1.nodecount;
		}
		this.tree_changed = true;
	}
	,batch: function(persist_immediate) {
		if(persist_immediate == null) {
			persist_immediate = false;
		}
		this.dynamic_batched_count = 0;
		this.static_batched_count = 0;
		this.visible_count = 0;
		this.pos_floats = 0;
		this.tcoord_floats = 0;
		this.color_floats = 0;
		this.normal_floats = 0;
		this.state = new phoenix_BatchState(this);
		var geom = null;
		var _g = this.geometry.iterator();
		while(_g.current == null || _g.rightest == null ? false : _g.tree.compare(_g.current.key,_g.rightest.key) <= 0) {
			var _temp = _g.current;
			var tmp;
			if(!(_g.current == null || _g.rightest == null ? false : _g.tree.compare(_g.current.key,_g.rightest.key) <= 0)) {
				tmp = null;
			} else if(_g.current.right != null) {
				var _node = _g.current.right;
				while(_node.left != null) _node = _node.left;
				tmp = _node;
			} else {
				var _next = null;
				var _temp1 = _g.tree.root;
				while(_temp1 != null) {
					var _comp = _g.tree.compare(_g.current.key,_temp1.key);
					if(_comp < 0) {
						_next = _temp1;
						_temp1 = _temp1.left;
					} else if(_comp > 0) {
						_temp1 = _temp1.right;
					} else {
						_g.current = _next;
						break;
					}
				}
				tmp = _next;
			}
			_g.current = tmp;
			var _geom = _temp.value;
			geom = _geom;
			if(_geom != null && !_geom.dropped) {
				if(this.state.update(_geom)) {
					var type = this.state.last_geom_state.primitive_type;
					if(this.pos_floats != 0) {
						if(this.pos_floats > this.max_floats) {
							throw new js__$Boot_HaxeError("uh oh, somehow too many floats are being submitted (max:$max_floats, attempt:$pos_floats).");
						}
						var _pos = new Float32Array(this.pos_list.buffer,0,this.pos_floats * 4 / 4 | 0);
						var _tcoords = new Float32Array(this.tcoord_list.buffer,0,this.tcoord_floats * 4 / 4 | 0);
						var _colors = new Float32Array(this.color_list.buffer,0,this.color_floats * 4 / 4 | 0);
						var _normals = null;
						this.submit_buffers(type,_pos,_tcoords,_colors,_normals);
						_pos = null;
						_tcoords = null;
						_colors = null;
						_normals = null;
						this.pos_floats = 0;
						this.tcoord_floats = 0;
						this.color_floats = 0;
						this.normal_floats = 0;
					}
				}
				var _this = this.state;
				if(_this.geom_state.dirty) {
					if(_this.geom_state.texture != null) {
						if(_this.last_texture_id != _this.geom_state.texture.id) {
							_this.last_texture_id = _this.geom_state.texture.id;
							if(_this.geom_state.texture.texture != null) {
								_this.geom_state.texture.bind();
							}
						}
					} else {
						Luxe.renderer.state.bindTexture2D(null);
						_this.last_texture_id = null;
					}
					var _shader = this.shader == null ? _this.geom_state.shader : this.shader;
					if(_shader == null) {
						if(_this.geom_state.texture != null) {
							_shader = this.renderer.shaders.textured.shader;
						} else {
							_shader = this.renderer.shaders.plain.shader;
						}
					}
					if(_this.last_shader_id != _shader.program) {
						if(!_shader.no_default_uniforms) {
							var _value = this.view.proj_arr;
							var _this1 = _shader.uniforms;
							var _location = snow_modules_opengl_web_GL.gl.getUniformLocation(_shader.program,"projectionMatrix");
							var _matrix4 = _this1.matrix4arrs.get("projectionMatrix");
							if(_matrix4 != null) {
								_matrix4.value = _value;
							} else {
								_matrix4 = new phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array("projectionMatrix",_value,_location);
								_this1.matrix4arrs.set("projectionMatrix",_matrix4);
							}
							_this1.dirty_matrix4arrs.push(_matrix4);
							var _value1 = this.view.view_inverse_arr;
							var _this2 = _shader.uniforms;
							var _location1 = snow_modules_opengl_web_GL.gl.getUniformLocation(_shader.program,"modelViewMatrix");
							var _matrix41 = _this2.matrix4arrs.get("modelViewMatrix");
							if(_matrix41 != null) {
								_matrix41.value = _value1;
							} else {
								_matrix41 = new phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array("modelViewMatrix",_value1,_location1);
								_this2.matrix4arrs.set("modelViewMatrix",_matrix41);
							}
							_this2.dirty_matrix4arrs.push(_matrix41);
						}
						_shader["use"]();
						_shader.uniforms.apply();
						Luxe.renderer.state.activeTexture(33984);
						_this.last_shader_id = _shader.program;
					}
					var blend_dirty = _this.last_blend_src_rgb != _this.geom_state.blend_src_rgb;
					if(!blend_dirty) {
						blend_dirty = _this.last_blend_src_alpha != _this.geom_state.blend_src_alpha;
					} else {
						blend_dirty = true;
					}
					if(!blend_dirty) {
						blend_dirty = _this.last_blend_dest_rgb != _this.geom_state.blend_dest_rgb;
					} else {
						blend_dirty = true;
					}
					if(!blend_dirty) {
						blend_dirty = _this.last_blend_dest_alpha != _this.geom_state.blend_dest_alpha;
					} else {
						blend_dirty = true;
					}
					if(blend_dirty && !_this.geom_state.ignore_blend) {
						_this.last_blend_src_rgb = _this.geom_state.blend_src_rgb;
						_this.last_blend_src_alpha = _this.geom_state.blend_src_alpha;
						_this.last_blend_dest_rgb = _this.geom_state.blend_dest_rgb;
						_this.last_blend_dest_alpha = _this.geom_state.blend_dest_alpha;
						snow_modules_opengl_web_GL.gl.blendFuncSeparate(_this.last_blend_src_rgb,_this.last_blend_dest_rgb,_this.last_blend_src_alpha,_this.last_blend_dest_alpha);
					}
				}
				if(_this.geom_state.clip) {
					if(!_this.is_clipping) {
						snow_modules_opengl_web_GL.gl.enable(3089);
						_this.is_clipping = true;
					}
					if(_this.clip_rect != null) {
						if(!_this.clip_rect.equal(_this.last_clip_rect)) {
							this.renderer.state.scissor(_this.clip_rect.x,_this.clip_rect.y,_this.clip_rect.w,_this.clip_rect.h);
						}
					}
				} else if(_this.is_clipping) {
					snow_modules_opengl_web_GL.gl.disable(3089);
					_this.is_clipping = false;
				}
				_this.geom_state.dirty = false;
				if(_geom.visible) {
					this.visible_count++;
					if(_geom.buffer_based) {
						this.visible_count--;
						continue;
					}
					if(_geom.locked) {
						var type1 = this.state.last_geom_state.primitive_type;
						if(this.pos_floats != 0) {
							if(this.pos_floats > this.max_floats) {
								throw new js__$Boot_HaxeError("uh oh, somehow too many floats are being submitted (max:$max_floats, attempt:$pos_floats).");
							}
							var _pos1 = new Float32Array(this.pos_list.buffer,0,this.pos_floats * 4 / 4 | 0);
							var _tcoords1 = new Float32Array(this.tcoord_list.buffer,0,this.tcoord_floats * 4 / 4 | 0);
							var _colors1 = new Float32Array(this.color_list.buffer,0,this.color_floats * 4 / 4 | 0);
							var _normals1 = null;
							this.submit_buffers(type1,_pos1,_tcoords1,_colors1,_normals1);
							_pos1 = null;
							_tcoords1 = null;
							_colors1 = null;
							_normals1 = null;
							this.pos_floats = 0;
							this.tcoord_floats = 0;
							this.color_floats = 0;
							this.normal_floats = 0;
						}
						if(_geom.vertices.length != 0) {
							if(_geom.update_buffers()) {
								snow_modules_opengl_web_GL.gl.bindBuffer(34962,_geom.vb_pos);
								snow_modules_opengl_web_GL.gl.vertexAttribPointer(0,4,5126,false,0,0);
								snow_modules_opengl_web_GL.gl.bufferData(34962,_geom.buffer_pos,_geom.buffer_type);
								snow_modules_opengl_web_GL.gl.bindBuffer(34962,_geom.vb_tcoords);
								snow_modules_opengl_web_GL.gl.vertexAttribPointer(1,4,5126,false,0,0);
								snow_modules_opengl_web_GL.gl.bufferData(34962,_geom.buffer_tcoords,_geom.buffer_type);
								snow_modules_opengl_web_GL.gl.bindBuffer(34962,_geom.vb_colors);
								snow_modules_opengl_web_GL.gl.vertexAttribPointer(2,4,5126,false,0,0);
								snow_modules_opengl_web_GL.gl.bufferData(34962,_geom.buffer_colors,_geom.buffer_type);
							} else {
								snow_modules_opengl_web_GL.gl.bindBuffer(34962,_geom.vb_pos);
								snow_modules_opengl_web_GL.gl.vertexAttribPointer(0,4,5126,false,0,0);
								snow_modules_opengl_web_GL.gl.bindBuffer(34962,_geom.vb_tcoords);
								snow_modules_opengl_web_GL.gl.vertexAttribPointer(1,4,5126,false,0,0);
								snow_modules_opengl_web_GL.gl.bindBuffer(34962,_geom.vb_colors);
								snow_modules_opengl_web_GL.gl.vertexAttribPointer(2,4,5126,false,0,0);
							}
							snow_modules_opengl_web_GL.gl.drawArrays(_geom.state.primitive_type,0,_geom.buffer_pos.length / 4 | 0);
							this.static_batched_count++;
							this.draw_calls++;
							_geom.set_dirty(false);
						}
						this.vert_count += _geom.vertices.length;
					} else if(_geom.state.primitive_type == 3 || _geom.state.primitive_type == 2 || _geom.state.primitive_type == 5 || _geom.state.primitive_type == 6) {
						if(_geom.vertices.length > this.max_verts) {
							_geom.set_locked(true);
							_geom.dirty_based = false;
							haxe_Log.trace("  i / batcher / " + ("WARNING batcher `" + this.name + "` trying to batch a geometry `" + _geom.id + "` that has more verts than the batcher has preallocated, (" + _geom.vertices.length + " vs max of " + this.max_verts + ")"),{ fileName : "Batcher.hx", lineNumber : 573, className : "phoenix.Batcher", methodName : "geometry_batch"});
							haxe_Log.trace("  i / batcher / " + "WARNING geometry has been marked as direct submit, and will be submitted independently!",{ fileName : "Batcher.hx", lineNumber : 574, className : "phoenix.Batcher", methodName : "geometry_batch"});
						} else {
							if(_geom.vertices.length + this.pos_floats / 4 > this.max_verts) {
								var type2 = _geom.state.primitive_type;
								if(this.pos_floats != 0) {
									if(this.pos_floats > this.max_floats) {
										throw new js__$Boot_HaxeError("uh oh, somehow too many floats are being submitted (max:$max_floats, attempt:$pos_floats).");
									}
									var _pos2 = new Float32Array(this.pos_list.buffer,0,this.pos_floats * 4 / 4 | 0);
									var _tcoords2 = new Float32Array(this.tcoord_list.buffer,0,this.tcoord_floats * 4 / 4 | 0);
									var _colors2 = new Float32Array(this.color_list.buffer,0,this.color_floats * 4 / 4 | 0);
									var _normals2 = null;
									this.submit_buffers(type2,_pos2,_tcoords2,_colors2,_normals2);
									_pos2 = null;
									_tcoords2 = null;
									_colors2 = null;
									_normals2 = null;
									this.pos_floats = 0;
									this.tcoord_floats = 0;
									this.color_floats = 0;
									this.normal_floats = 0;
								}
							}
							var vert_index = this.pos_floats;
							var tcoord_index = this.tcoord_floats;
							var color_index = this.color_floats;
							var vertlist = this.pos_list;
							var tcoordlist = this.tcoord_list;
							var colorlist = this.color_list;
							var _this3 = _geom.transform;
							if(!_this3._destroying) {
								if(_this3.parent != null && _this3.parent.dirty) {
									_this3.parent.clean_check();
								}
								if(_this3.dirty && !_this3._cleaning && !_this3.manual_update) {
									_this3.clean();
								}
							}
							var _el = _this3.world.matrix.elements;
							var _count = _geom.vertices.length;
							var _idx = 0;
							while(_idx < _count) {
								var v = _geom.vertices[_idx];
								var _vx = v.pos.x;
								var _vy = v.pos.y;
								var _vz = v.pos.z;
								var _tvy = _el[1] * _vx + _el[5] * _vy + _el[9] * _vz + _el[13];
								var _tvz = _el[2] * _vx + _el[6] * _vy + _el[10] * _vz + _el[14];
								vertlist[vert_index] = _el[0] * _vx + _el[4] * _vy + _el[8] * _vz + _el[12];
								vertlist[vert_index + 1] = _tvy;
								vertlist[vert_index + 2] = _tvz;
								vertlist[vert_index + 3] = v.pos.w;
								vert_index += 4;
								var _vuv = v.uv.uv0;
								tcoordlist[tcoord_index] = _vuv.u;
								tcoordlist[tcoord_index + 1] = _vuv.v;
								tcoordlist[tcoord_index + 2] = _vuv.w;
								tcoordlist[tcoord_index + 3] = _vuv.t;
								tcoord_index += 4;
								colorlist[color_index] = v.color.r;
								colorlist[color_index + 1] = v.color.g;
								colorlist[color_index + 2] = v.color.b;
								colorlist[color_index + 3] = v.color.a;
								color_index += 4;
								++_idx;
							}
							var _length = _geom.vertices.length * 4;
							this.pos_floats += _length;
							this.tcoord_floats += _length;
							this.color_floats += _length;
							this.normal_floats += _length;
						}
						var type3 = _geom.state.primitive_type;
						if(this.pos_floats != 0) {
							if(this.pos_floats > this.max_floats) {
								throw new js__$Boot_HaxeError("uh oh, somehow too many floats are being submitted (max:$max_floats, attempt:$pos_floats).");
							}
							var _pos3 = new Float32Array(this.pos_list.buffer,0,this.pos_floats * 4 / 4 | 0);
							var _tcoords3 = new Float32Array(this.tcoord_list.buffer,0,this.tcoord_floats * 4 / 4 | 0);
							var _colors3 = new Float32Array(this.color_list.buffer,0,this.color_floats * 4 / 4 | 0);
							var _normals3 = null;
							this.submit_buffers(type3,_pos3,_tcoords3,_colors3,_normals3);
							_pos3 = null;
							_tcoords3 = null;
							_colors3 = null;
							_normals3 = null;
							this.pos_floats = 0;
							this.tcoord_floats = 0;
							this.color_floats = 0;
							this.normal_floats = 0;
						}
						this.vert_count += _geom.vertices.length;
					} else {
						if(_geom.vertices.length > this.max_verts) {
							_geom.set_locked(true);
							_geom.dirty_based = false;
							haxe_Log.trace("  i / batcher / " + ("WARNING batcher `" + this.name + "` trying to batch a geometry `" + _geom.id + "` that has more verts than the batcher has preallocated, (" + _geom.vertices.length + " vs max of " + this.max_verts + ")"),{ fileName : "Batcher.hx", lineNumber : 573, className : "phoenix.Batcher", methodName : "geometry_batch"});
							haxe_Log.trace("  i / batcher / " + "WARNING geometry has been marked as direct submit, and will be submitted independently!",{ fileName : "Batcher.hx", lineNumber : 574, className : "phoenix.Batcher", methodName : "geometry_batch"});
						} else {
							if(_geom.vertices.length + this.pos_floats / 4 > this.max_verts) {
								var type4 = _geom.state.primitive_type;
								if(this.pos_floats != 0) {
									if(this.pos_floats > this.max_floats) {
										throw new js__$Boot_HaxeError("uh oh, somehow too many floats are being submitted (max:$max_floats, attempt:$pos_floats).");
									}
									var _pos4 = new Float32Array(this.pos_list.buffer,0,this.pos_floats * 4 / 4 | 0);
									var _tcoords4 = new Float32Array(this.tcoord_list.buffer,0,this.tcoord_floats * 4 / 4 | 0);
									var _colors4 = new Float32Array(this.color_list.buffer,0,this.color_floats * 4 / 4 | 0);
									var _normals4 = null;
									this.submit_buffers(type4,_pos4,_tcoords4,_colors4,_normals4);
									_pos4 = null;
									_tcoords4 = null;
									_colors4 = null;
									_normals4 = null;
									this.pos_floats = 0;
									this.tcoord_floats = 0;
									this.color_floats = 0;
									this.normal_floats = 0;
								}
							}
							var vert_index1 = this.pos_floats;
							var tcoord_index1 = this.tcoord_floats;
							var color_index1 = this.color_floats;
							var vertlist1 = this.pos_list;
							var tcoordlist1 = this.tcoord_list;
							var colorlist1 = this.color_list;
							var _this4 = _geom.transform;
							if(!_this4._destroying) {
								if(_this4.parent != null && _this4.parent.dirty) {
									_this4.parent.clean_check();
								}
								if(_this4.dirty && !_this4._cleaning && !_this4.manual_update) {
									_this4.clean();
								}
							}
							var _el1 = _this4.world.matrix.elements;
							var _count1 = _geom.vertices.length;
							var _idx1 = 0;
							while(_idx1 < _count1) {
								var v1 = _geom.vertices[_idx1];
								var _vx1 = v1.pos.x;
								var _vy1 = v1.pos.y;
								var _vz1 = v1.pos.z;
								var _tvy1 = _el1[1] * _vx1 + _el1[5] * _vy1 + _el1[9] * _vz1 + _el1[13];
								var _tvz1 = _el1[2] * _vx1 + _el1[6] * _vy1 + _el1[10] * _vz1 + _el1[14];
								vertlist1[vert_index1] = _el1[0] * _vx1 + _el1[4] * _vy1 + _el1[8] * _vz1 + _el1[12];
								vertlist1[vert_index1 + 1] = _tvy1;
								vertlist1[vert_index1 + 2] = _tvz1;
								vertlist1[vert_index1 + 3] = v1.pos.w;
								vert_index1 += 4;
								var _vuv1 = v1.uv.uv0;
								tcoordlist1[tcoord_index1] = _vuv1.u;
								tcoordlist1[tcoord_index1 + 1] = _vuv1.v;
								tcoordlist1[tcoord_index1 + 2] = _vuv1.w;
								tcoordlist1[tcoord_index1 + 3] = _vuv1.t;
								tcoord_index1 += 4;
								colorlist1[color_index1] = v1.color.r;
								colorlist1[color_index1 + 1] = v1.color.g;
								colorlist1[color_index1 + 2] = v1.color.b;
								colorlist1[color_index1 + 3] = v1.color.a;
								color_index1 += 4;
								++_idx1;
							}
							var _length1 = _geom.vertices.length * 4;
							this.pos_floats += _length1;
							this.tcoord_floats += _length1;
							this.color_floats += _length1;
							this.normal_floats += _length1;
						}
						this.dynamic_batched_count++;
						this.vert_count += _geom.vertices.length;
					}
					if(!persist_immediate && _geom.immediate) {
						_geom.dropped = true;
						this._dropped.push(_geom);
					}
				}
			}
		}
		if(this.pos_floats > 0 && geom != null) {
			this.state.update(geom);
			var _this5 = this.state;
			if(_this5.geom_state.dirty) {
				if(_this5.geom_state.texture != null) {
					if(_this5.last_texture_id != _this5.geom_state.texture.id) {
						_this5.last_texture_id = _this5.geom_state.texture.id;
						if(_this5.geom_state.texture.texture != null) {
							_this5.geom_state.texture.bind();
						}
					}
				} else {
					Luxe.renderer.state.bindTexture2D(null);
					_this5.last_texture_id = null;
				}
				var _shader1 = this.shader == null ? _this5.geom_state.shader : this.shader;
				if(_shader1 == null) {
					if(_this5.geom_state.texture != null) {
						_shader1 = this.renderer.shaders.textured.shader;
					} else {
						_shader1 = this.renderer.shaders.plain.shader;
					}
				}
				if(_this5.last_shader_id != _shader1.program) {
					if(!_shader1.no_default_uniforms) {
						var _value2 = this.view.proj_arr;
						var _this6 = _shader1.uniforms;
						var _location2 = snow_modules_opengl_web_GL.gl.getUniformLocation(_shader1.program,"projectionMatrix");
						var _matrix42 = _this6.matrix4arrs.get("projectionMatrix");
						if(_matrix42 != null) {
							_matrix42.value = _value2;
						} else {
							_matrix42 = new phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array("projectionMatrix",_value2,_location2);
							_this6.matrix4arrs.set("projectionMatrix",_matrix42);
						}
						_this6.dirty_matrix4arrs.push(_matrix42);
						var _value3 = this.view.view_inverse_arr;
						var _this7 = _shader1.uniforms;
						var _location3 = snow_modules_opengl_web_GL.gl.getUniformLocation(_shader1.program,"modelViewMatrix");
						var _matrix43 = _this7.matrix4arrs.get("modelViewMatrix");
						if(_matrix43 != null) {
							_matrix43.value = _value3;
						} else {
							_matrix43 = new phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array("modelViewMatrix",_value3,_location3);
							_this7.matrix4arrs.set("modelViewMatrix",_matrix43);
						}
						_this7.dirty_matrix4arrs.push(_matrix43);
					}
					_shader1["use"]();
					_shader1.uniforms.apply();
					Luxe.renderer.state.activeTexture(33984);
					_this5.last_shader_id = _shader1.program;
				}
				var blend_dirty1 = _this5.last_blend_src_rgb != _this5.geom_state.blend_src_rgb;
				if(!blend_dirty1) {
					blend_dirty1 = _this5.last_blend_src_alpha != _this5.geom_state.blend_src_alpha;
				} else {
					blend_dirty1 = true;
				}
				if(!blend_dirty1) {
					blend_dirty1 = _this5.last_blend_dest_rgb != _this5.geom_state.blend_dest_rgb;
				} else {
					blend_dirty1 = true;
				}
				if(!blend_dirty1) {
					blend_dirty1 = _this5.last_blend_dest_alpha != _this5.geom_state.blend_dest_alpha;
				} else {
					blend_dirty1 = true;
				}
				if(blend_dirty1 && !_this5.geom_state.ignore_blend) {
					_this5.last_blend_src_rgb = _this5.geom_state.blend_src_rgb;
					_this5.last_blend_src_alpha = _this5.geom_state.blend_src_alpha;
					_this5.last_blend_dest_rgb = _this5.geom_state.blend_dest_rgb;
					_this5.last_blend_dest_alpha = _this5.geom_state.blend_dest_alpha;
					snow_modules_opengl_web_GL.gl.blendFuncSeparate(_this5.last_blend_src_rgb,_this5.last_blend_dest_rgb,_this5.last_blend_src_alpha,_this5.last_blend_dest_alpha);
				}
			}
			if(_this5.geom_state.clip) {
				if(!_this5.is_clipping) {
					snow_modules_opengl_web_GL.gl.enable(3089);
					_this5.is_clipping = true;
				}
				if(_this5.clip_rect != null) {
					if(!_this5.clip_rect.equal(_this5.last_clip_rect)) {
						this.renderer.state.scissor(_this5.clip_rect.x,_this5.clip_rect.y,_this5.clip_rect.w,_this5.clip_rect.h);
					}
				}
			} else if(_this5.is_clipping) {
				snow_modules_opengl_web_GL.gl.disable(3089);
				_this5.is_clipping = false;
			}
			_this5.geom_state.dirty = false;
			var type5 = this.state.last_geom_state.primitive_type;
			if(this.pos_floats != 0) {
				if(this.pos_floats > this.max_floats) {
					throw new js__$Boot_HaxeError("uh oh, somehow too many floats are being submitted (max:$max_floats, attempt:$pos_floats).");
				}
				var _pos5 = new Float32Array(this.pos_list.buffer,0,this.pos_floats * 4 / 4 | 0);
				var _tcoords5 = new Float32Array(this.tcoord_list.buffer,0,this.tcoord_floats * 4 / 4 | 0);
				var _colors5 = new Float32Array(this.color_list.buffer,0,this.color_floats * 4 / 4 | 0);
				var _normals5 = null;
				this.submit_buffers(type5,_pos5,_tcoords5,_colors5,_normals5);
				_pos5 = null;
				_tcoords5 = null;
				_colors5 = null;
				_normals5 = null;
				this.pos_floats = 0;
				this.tcoord_floats = 0;
				this.color_floats = 0;
				this.normal_floats = 0;
			}
		}
		this.state.deactivate(this);
		this.state = null;
		if(this._dropped.length > 0) {
			var _g1 = 0;
			var _g11 = this._dropped;
			while(_g1 < _g11.length) {
				var geom1 = _g11[_g1];
				++_g1;
				geom1.drop();
				geom1 = null;
			}
			this._dropped = null;
			this._dropped = [];
		}
	}
	,submit_buffers: function(type,_pos,_tcoords,_colors,_normals) {
		var pb = snow_modules_opengl_web_GL.gl.createBuffer();
		var cb = snow_modules_opengl_web_GL.gl.createBuffer();
		var tb = snow_modules_opengl_web_GL.gl.createBuffer();
		snow_modules_opengl_web_GL.gl.bindBuffer(34962,pb);
		snow_modules_opengl_web_GL.gl.vertexAttribPointer(0,4,5126,false,0,0);
		snow_modules_opengl_web_GL.gl.bufferData(34962,_pos,35040);
		snow_modules_opengl_web_GL.gl.bindBuffer(34962,tb);
		snow_modules_opengl_web_GL.gl.vertexAttribPointer(1,4,5126,false,0,0);
		snow_modules_opengl_web_GL.gl.bufferData(34962,_tcoords,35040);
		snow_modules_opengl_web_GL.gl.bindBuffer(34962,cb);
		snow_modules_opengl_web_GL.gl.vertexAttribPointer(2,4,5126,false,0,0);
		snow_modules_opengl_web_GL.gl.bufferData(34962,_colors,35040);
		snow_modules_opengl_web_GL.gl.drawArrays(type,0,_pos.length / 4 | 0);
		snow_modules_opengl_web_GL.gl.deleteBuffer(pb);
		snow_modules_opengl_web_GL.gl.deleteBuffer(cb);
		snow_modules_opengl_web_GL.gl.deleteBuffer(tb);
		this.draw_calls++;
	}
	,geometry_compare: function(a,b) {
		if(a.uuid == b.uuid) {
			return 0;
		}
		if(a.depth < b.depth) {
			return -1;
		}
		if(a.depth > b.depth) {
			return 1;
		}
		if(a.shader != null && b.shader != null) {
			if(a.shader.id < b.shader.id) {
				return -1;
			}
			if(a.shader.id > b.shader.id) {
				return 1;
			}
		} else if(a.shader != null && b.shader == null) {
			return 1;
		} else if(a.shader == null && b.shader != null) {
			return -1;
		}
		if(a.texture != null && b.texture != null) {
			if(a.texture.id < b.texture.id) {
				return -1;
			}
			if(a.texture.id > b.texture.id) {
				return 1;
			}
		} else if(a.texture != null && b.texture == null) {
			return 1;
		} else if(a.texture == null && b.texture != null) {
			return -1;
		}
		var a_primitive_index = a.primitive_type;
		var b_primitive_index = b.primitive_type;
		if(a_primitive_index < b_primitive_index) {
			return -1;
		}
		if(a_primitive_index > b_primitive_index) {
			return 1;
		}
		if(a.clip != b.clip) {
			if(a.clip == false && b.clip == true) {
				return 1;
			} else if(a.clip == true && b.clip == false) {
				return -1;
			}
		}
		if(a.timestamp < b.timestamp) {
			return -1;
		}
		if(a.timestamp > b.timestamp) {
			return 1;
		}
		if(a.sequence < b.sequence) {
			return -1;
		}
		if(a.sequence > b.sequence) {
			return 1;
		}
		return 1;
	}
	,set_show_stats: function(_value) {
		if(_value == 0) {
			this.renderer.stats.batchers--;
		} else {
			this.renderer.stats.batchers++;
		}
		return this.show_stats = _value;
	}
	,__class__: phoenix_Batcher
	,__properties__: {set_show_stats:"set_show_stats"}
};
var phoenix_BitmapFont = function(_options) {
	if(_options == null) {
		throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options was null"));
	}
	_options.resource_type = 6;
	luxe_resource_Resource.call(this,_options);
	if(_options.texture_path != null) {
		this.texture_path = _options.texture_path;
	} else {
		this.texture_path = haxe_io_Path.directory(this.id);
	}
	this.pages = new haxe_ds_IntMap();
	if(_options.pages != null) {
		if(_options.font_data == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options.font_data was null" + (" ( " + "BitmapFont create from pages + font_data requires both of those options" + " )")));
		}
	}
	if(_options.font_data != null) {
		if(_options.pages == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options.pages was null" + (" ( " + "BitmapFont create from pages + font_data requires both of those options" + " )")));
		}
		this.set_info(luxe_importers_bitmapfont_BitmapFontParser.parse(_options.font_data));
		this.apply_pages(_options.pages);
	}
};
$hxClasses["phoenix.BitmapFont"] = phoenix_BitmapFont;
phoenix_BitmapFont.__name__ = true;
phoenix_BitmapFont.__super__ = luxe_resource_Resource;
phoenix_BitmapFont.prototype = $extend(luxe_resource_Resource.prototype,{
	wrap_string_to_bounds: function(_string,_bounds,_point_size,_letter_spc) {
		if(_letter_spc == null) {
			_letter_spc = 0.0;
		}
		if(_point_size == null) {
			_point_size = 1.0;
		}
		var _gthis = this;
		if(_bounds == null) {
			return _string;
		}
		var _cur_x = 0.0;
		var _idx = 0;
		var _final_str = "";
		var _max_w = 0.0;
		var _lines = luxe_utils_unifill_Unifill.uSplit(" ","\n");
		var _g = 0;
		while(_g < _lines.length) {
			var _line = _lines[_g];
			++_g;
			_max_w = Math.max(_max_w,_gthis.width_of_line(_line,_point_size,_letter_spc));
		}
		var _spacew = _max_w;
		var _strings = _string.split(" ");
		var _count = _strings.length;
		var _g1 = 0;
		while(_g1 < _strings.length) {
			var _str = _strings[_g1];
			++_g1;
			while(false) {
			}
			var index = _str.indexOf("\n",0);
			if((index >= 0 ? luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointCount(_str,0,index) : -1) == -1) {
				if(_str == "") {
					_str = " ";
				}
				var _max_w1 = 0.0;
				var _lines1 = luxe_utils_unifill_Unifill.uSplit(_str,"\n");
				var _g2 = 0;
				while(_g2 < _lines1.length) {
					var _line1 = _lines1[_g2];
					++_g2;
					_max_w1 = Math.max(_max_w1,_gthis.width_of_line(_line1,_point_size,_letter_spc));
				}
				var _w = _max_w1;
				if(_cur_x + _w > _bounds.w) {
					_cur_x = 0;
					_final_str += "\n";
				}
				_cur_x += _w;
				_final_str += _str;
			} else {
				var _widx = 0;
				var _words = _str.split("\n");
				var _g11 = 0;
				while(_g11 < _words.length) {
					var _word = _words[_g11];
					++_g11;
					if(_word != "") {
						var _max_w2 = 0.0;
						var _lines2 = luxe_utils_unifill_Unifill.uSplit(_word,"\n");
						var _g3 = 0;
						while(_g3 < _lines2.length) {
							var _line2 = _lines2[_g3];
							++_g3;
							_max_w2 = Math.max(_max_w2,_gthis.width_of_line(_line2,_point_size,_letter_spc));
						}
						var _w1 = _max_w2;
						if(_cur_x + _w1 > _bounds.w) {
							_cur_x = 0;
							_final_str += "\n";
						}
						_cur_x += _w1;
						_final_str += _word;
					} else {
						_cur_x = 0;
					}
					if(_widx < _words.length - 1) {
						_final_str += "\n";
						_cur_x = 0;
					}
					++_widx;
				}
			}
			if(_idx < _count - 1) {
				_final_str += " ";
				_cur_x += _spacew + _letter_spc;
			}
			++_idx;
		}
		return _final_str;
	}
	,width_of_line: function(_string,_point_size,_letter_spc) {
		if(_letter_spc == null) {
			_letter_spc = 0.0;
		}
		if(_point_size == null) {
			_point_size = 1.0;
		}
		var _g_endIndex;
		var _g_index;
		var _cur_x = 0.0;
		var _cur_w = 0.0;
		var _ratio = _point_size / this.info.point_size;
		var i = 0;
		var _len = luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointCount(_string,0,_string.length);
		var _g_i = 0;
		_g_index = 0;
		_g_endIndex = _string.length;
		while(_g_index < _g_endIndex) {
			_g_i = _g_index;
			var c = _string.charCodeAt(_g_index);
			_g_index += !(55296 <= c && c <= 56319) ? 1 : 2;
			var _index = luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointAt(_string,_g_i);
			var _char = this.info.chars.h[_index];
			if(_char == null) {
				_char = this.space_char;
			}
			var _cw = (_char.xoffset + Math.max(_char.width,_char.xadvance)) * _ratio;
			var _cx = _cur_x + _char.xoffset * _ratio;
			var _spacing = _char.xadvance;
			if(i < _len - 1) {
				var index = i + 1;
				var s = _string;
				var i1;
				if(index >= 0) {
					var index1 = 0;
					var len = s.length;
					var i2 = 0;
					while(i2 < index && index1 < len) {
						var c1 = s.charCodeAt(index1);
						index1 += !(55296 <= c1 && c1 <= 56319) ? 1 : 2;
						++i2;
					}
					i1 = index1;
				} else {
					while(false) {
					}
					i1 = 0;
				}
				var _next_index = luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointAt(_string,i1);
				var _map = this.info.kernings.get(_index);
				_spacing += _map != null && _map.h.hasOwnProperty(_next_index) ? _map.h[_next_index] : 0;
				if(_next_index >= 32) {
					_spacing += _letter_spc;
				}
			}
			_cur_x += _spacing * _ratio;
			_cur_w = Math.max(_cur_w,_cx + _cw);
			++i;
		}
		return _cur_w;
	}
	,clear: function() {
		this.set_info(null);
		var _pageid = this.pages.keys();
		while(_pageid.hasNext()) {
			var _pageid1 = _pageid.next();
			var _page = this.pages.h[_pageid1];
			_page.destroy();
			this.pages.remove(_pageid1);
			_page = null;
		}
	}
	,reload: function() {
		var _gthis = this;
		if(this.state == 6) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("state != ResourceState.destroyed"));
		}
		this.clear();
		return new snow_api_Promise(function(resolve,reject) {
			_gthis.set_state(2);
			snow_systems_assets_AssetText.load(Luxe.core.app.assets,_gthis.id).then(function(_asset) {
				var tmp = luxe_importers_bitmapfont_BitmapFontParser.parse(_asset.text);
				_gthis.set_info(tmp);
				_asset.destroy();
				_asset = null;
				if(_gthis.info == null) {
					throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("info was null"));
				}
				var _tex_get = [];
				var _g = 0;
				var _g1 = _gthis.info.pages;
				while(_g < _g1.length) {
					var _page = _g1[_g];
					++_g;
					var _path = haxe_io_Path.join([_gthis.texture_path,_page.file]);
					var _prior = _gthis.system.cache.get(_path);
					if(_prior != null) {
						_tex_get.push(_prior.reload());
					} else {
						_tex_get.push(_gthis.system.load_texture(_path));
					}
				}
				snow_api_Promise.all(_tex_get).then(function(_pages) {
					_gthis.apply_pages(_pages);
					_gthis.set_state(3);
					resolve(_gthis);
				}).error(function(_error) {
					_gthis.set_state(4);
					reject(_error);
				});
			}).error(function(_error1) {
				_gthis.set_state(4);
				reject(_error1);
			});
		});
	}
	,apply_pages: function(_pages) {
		var _pageid = 0;
		var _g = 0;
		while(_g < _pages.length) {
			var _page = _pages[_g];
			++_g;
			_page.slot = _pageid;
			this.pages.h[_pageid] = _page;
			++_pageid;
		}
	}
	,set_info: function(_info) {
		this.info = _info;
		if(this.info != null) {
			this.space_char = this.info.chars.h[32];
		}
		return this.info;
	}
	,__class__: phoenix_BitmapFont
	,__properties__: $extend(luxe_resource_Resource.prototype.__properties__,{set_info:"set_info"})
});
var phoenix_ProjectionType = { __ename__ : true, __constructs__ : ["ortho","perspective","custom"] };
phoenix_ProjectionType.ortho = ["ortho",0];
phoenix_ProjectionType.ortho.toString = $estr;
phoenix_ProjectionType.ortho.__enum__ = phoenix_ProjectionType;
phoenix_ProjectionType.perspective = ["perspective",1];
phoenix_ProjectionType.perspective.toString = $estr;
phoenix_ProjectionType.perspective.__enum__ = phoenix_ProjectionType;
phoenix_ProjectionType.custom = ["custom",2];
phoenix_ProjectionType.custom.toString = $estr;
phoenix_ProjectionType.custom.__enum__ = phoenix_ProjectionType;
var phoenix_Camera = function(_options) {
	this.refresh_pos_ = false;
	this.up_ = new phoenix_Vector(0,1,0);
	this.setup_ = true;
	this.look_at_dirty = true;
	this.projection_dirty = true;
	this.transform_dirty = true;
	this.minimum_zoom = 0.01;
	this.depth_test = false;
	this.cull_backfaces = false;
	this.aspect = 1.5;
	this.fov_type = phoenix_FOVType.horizontal;
	this.fov = 60;
	this.far = -1000;
	this.near = 1000;
	this.zoom = 1.0;
	this.name = "camera";
	this.transform = new phoenix_Transform();
	this.projection_matrix = new phoenix_Matrix();
	this.view_matrix = new phoenix_Matrix();
	this.view_matrix_inverse = new phoenix_Matrix();
	this.look_at_matrix = new phoenix_Matrix();
	if(_options == null) {
		_options = { projection : phoenix_ProjectionType.ortho, depth_test : false, cull_backfaces : false, near : 1000, far : -1000};
	}
	if(_options.projection == null) {
		_options.projection = phoenix_ProjectionType.ortho;
	}
	this.projection = _options.projection;
	this.set_center(new phoenix_Vector(Luxe.core.screen.get_w() / 2,Luxe.core.screen.get_h() / 2));
	this.set_pos(new phoenix_Vector());
	if(_options.viewport == null) {
		_options.viewport = new phoenix_Rectangle(0,0,Luxe.core.screen.get_w(),Luxe.core.screen.get_h());
	}
	this.set_viewport(_options.viewport);
	if(_options.camera_name != null) {
		this.name = _options.camera_name;
	}
	var _this = this.transform;
	if(_this._clean_handlers == null) {
		_this._clean_handlers = [];
	}
	_this._clean_handlers.push($bind(this,this.on_transform_cleaned));
	switch(this.projection[1]) {
	case 0:
		this.set_ortho(_options);
		break;
	case 1:
		this.set_perspective(_options);
		break;
	case 2:
		break;
	}
	this.process();
	this.setup_ = false;
};
$hxClasses["phoenix.Camera"] = phoenix_Camera;
phoenix_Camera.__name__ = true;
phoenix_Camera.prototype = {
	set_ortho: function(_options) {
		this.projection = phoenix_ProjectionType.ortho;
		switch(this.projection[1]) {
		case 0:
			this.cull_backfaces = false;
			this.depth_test = false;
			break;
		case 1:
			this.cull_backfaces = true;
			this.depth_test = true;
			break;
		case 2:
			break;
		}
		if(_options.aspect != null) {
			this.projection_dirty = true;
			this.aspect = _options.aspect;
			var _fov = this.fov;
			this.projection_dirty = true;
			if(this.fov_type == phoenix_FOVType.horizontal) {
				this.fov_y = 180 / Math.PI * (2 * Math.atan(Math.tan(_fov * (Math.PI / 180) / 2) * (1 / this.aspect)));
			} else {
				this.fov_y = _fov;
			}
			this.fov = _fov;
		}
		if(_options.far != null) {
			this.projection_dirty = true;
			this.far = _options.far;
		}
		if(_options.fov != null) {
			var _fov1 = _options.fov;
			this.projection_dirty = true;
			if(this.fov_type == phoenix_FOVType.horizontal) {
				this.fov_y = 180 / Math.PI * (2 * Math.atan(Math.tan(_fov1 * (Math.PI / 180) / 2) * (1 / this.aspect)));
			} else {
				this.fov_y = _fov1;
			}
			this.fov = _fov1;
		}
		if(_options.near != null) {
			this.projection_dirty = true;
			this.near = _options.near;
		}
		if(_options.viewport != null) {
			this.set_viewport(_options.viewport);
		}
		if(_options.cull_backfaces != null) {
			this.cull_backfaces = _options.cull_backfaces;
		}
		if(_options.depth_test != null) {
			this.depth_test = _options.depth_test;
		}
		if(_options.fov_type != null) {
			this.fov_type = _options.fov_type;
			var _fov2 = this.fov;
			this.projection_dirty = true;
			if(this.fov_type == phoenix_FOVType.horizontal) {
				this.fov_y = 180 / Math.PI * (2 * Math.atan(Math.tan(_fov2 * (Math.PI / 180) / 2) * (1 / this.aspect)));
			} else {
				this.fov_y = _fov2;
			}
			this.fov = _fov2;
		} else {
			this.fov_type = phoenix_FOVType.horizontal;
			var _fov3 = this.fov;
			this.projection_dirty = true;
			if(this.fov_type == phoenix_FOVType.horizontal) {
				this.fov_y = 180 / Math.PI * (2 * Math.atan(Math.tan(_fov3 * (Math.PI / 180) / 2) * (1 / this.aspect)));
			} else {
				this.fov_y = _fov3;
			}
			this.fov = _fov3;
		}
	}
	,set_perspective: function(_options) {
		this.projection = phoenix_ProjectionType.perspective;
		switch(this.projection[1]) {
		case 0:
			this.cull_backfaces = false;
			this.depth_test = false;
			break;
		case 1:
			this.cull_backfaces = true;
			this.depth_test = true;
			break;
		case 2:
			break;
		}
		if(_options.aspect != null) {
			this.projection_dirty = true;
			this.aspect = _options.aspect;
			var _fov = this.fov;
			this.projection_dirty = true;
			if(this.fov_type == phoenix_FOVType.horizontal) {
				this.fov_y = 180 / Math.PI * (2 * Math.atan(Math.tan(_fov * (Math.PI / 180) / 2) * (1 / this.aspect)));
			} else {
				this.fov_y = _fov;
			}
			this.fov = _fov;
		}
		if(_options.far != null) {
			this.projection_dirty = true;
			this.far = _options.far;
		}
		if(_options.fov != null) {
			var _fov1 = _options.fov;
			this.projection_dirty = true;
			if(this.fov_type == phoenix_FOVType.horizontal) {
				this.fov_y = 180 / Math.PI * (2 * Math.atan(Math.tan(_fov1 * (Math.PI / 180) / 2) * (1 / this.aspect)));
			} else {
				this.fov_y = _fov1;
			}
			this.fov = _fov1;
		}
		if(_options.near != null) {
			this.projection_dirty = true;
			this.near = _options.near;
		}
		if(_options.viewport != null) {
			this.set_viewport(_options.viewport);
		}
		if(_options.cull_backfaces != null) {
			this.cull_backfaces = _options.cull_backfaces;
		}
		if(_options.depth_test != null) {
			this.depth_test = _options.depth_test;
		}
		if(_options.fov_type != null) {
			this.fov_type = _options.fov_type;
			var _fov2 = this.fov;
			this.projection_dirty = true;
			if(this.fov_type == phoenix_FOVType.horizontal) {
				this.fov_y = 180 / Math.PI * (2 * Math.atan(Math.tan(_fov2 * (Math.PI / 180) / 2) * (1 / this.aspect)));
			} else {
				this.fov_y = _fov2;
			}
			this.fov = _fov2;
		} else {
			this.fov_type = phoenix_FOVType.horizontal;
			var _fov3 = this.fov;
			this.projection_dirty = true;
			if(this.fov_type == phoenix_FOVType.horizontal) {
				this.fov_y = 180 / Math.PI * (2 * Math.atan(Math.tan(_fov3 * (Math.PI / 180) / 2) * (1 / this.aspect)));
			} else {
				this.fov_y = _fov3;
			}
			this.fov = _fov3;
		}
		var _this = this.transform.origin;
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = 0;
		if(!_this._construct) {
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(0);
			}
		}
		_this.y = 0;
		if(!_this._construct) {
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(0);
			}
		}
		_this.z = 0;
		if(!_this._construct) {
			if(_this.listen_z != null && !_this.ignore_listeners) {
				_this.listen_z(0);
			}
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) {
			_this.listen_x(_this.x);
		}
		if(_this.listen_y != null && !_this.ignore_listeners) {
			_this.listen_y(_this.y);
		}
		if(_this.listen_z != null && !_this.ignore_listeners) {
			_this.listen_z(_this.z);
		}
	}
	,process: function() {
		if(this.target != null) {
			this.update_look_at();
		}
		this.update_projection_matrix();
		this.update_view_matrix();
		if(this.cull_backfaces) {
			Luxe.renderer.state.enable(2884);
		} else {
			Luxe.renderer.state.disable(2884);
		}
		if(this.depth_test) {
			Luxe.renderer.state.enable(2929);
		} else {
			Luxe.renderer.state.disable(2929);
		}
	}
	,on_transform_cleaned: function(t) {
		this.transform_dirty = true;
	}
	,update_look_at: function() {
		if(this.look_at_dirty && this.target != null) {
			var _this = this.look_at_matrix;
			var _eye = this.target;
			var _target = this.pos;
			var _up = this.up_;
			var _x = new phoenix_Vector();
			var _y = new phoenix_Vector();
			var _z = new phoenix_Vector();
			var te = _this.elements;
			var _x1 = _target.x - _eye.x;
			var _y1 = _target.y - _eye.y;
			var _z1 = _target.z - _eye.z;
			var b = Math.sqrt(_x1 * _x1 + _y1 * _y1 + _z1 * _z1);
			_z = new phoenix_Vector(_x1 / b,_y1 / b,_z1 / b);
			if(Math.sqrt(_z.x * _z.x + _z.y * _z.y + _z.z * _z.z) == 0) {
				_z.z = 1;
				if(!_z._construct) {
					if(_z.listen_z != null && !_z.ignore_listeners) {
						_z.listen_z(1);
					}
				}
			}
			var _x2 = _up.y * _z.z - _up.z * _z.y;
			var _y2 = _up.z * _z.x - _up.x * _z.z;
			var _z2 = _up.x * _z.y - _up.y * _z.x;
			var b1 = Math.sqrt(_x2 * _x2 + _y2 * _y2 + _z2 * _z2);
			_x = new phoenix_Vector(_x2 / b1,_y2 / b1,_z2 / b1);
			if(Math.sqrt(_x.x * _x.x + _x.y * _x.y + _x.z * _x.z) == 0) {
				var _g = _z;
				var _x3 = _g.x + 0.0001;
				_g.x = _x3;
				if(!_g._construct) {
					if(_g.listen_x != null && !_g.ignore_listeners) {
						_g.listen_x(_x3);
					}
				}
				var _x4 = _up.y * _z.z - _up.z * _z.y;
				var _y3 = _up.z * _z.x - _up.x * _z.z;
				var _z3 = _up.x * _z.y - _up.y * _z.x;
				var b2 = Math.sqrt(_x4 * _x4 + _y3 * _y3 + _z3 * _z3);
				_x = new phoenix_Vector(_x4 / b2,_y3 / b2,_z3 / b2);
			}
			_y = new phoenix_Vector(_z.y * _x.z - _z.z * _x.y,_z.z * _x.x - _z.x * _x.z,_z.x * _x.y - _z.y * _x.x);
			te[0] = _x.x;
			te[4] = _y.x;
			te[8] = _z.x;
			te[1] = _x.y;
			te[5] = _y.y;
			te[9] = _z.y;
			te[2] = _x.z;
			te[6] = _y.z;
			te[10] = _z.z;
			this.transform.local.rotation.setFromRotationMatrix(this.look_at_matrix);
		}
	}
	,update_view_matrix: function() {
		var _this = this.transform;
		if(!_this._destroying) {
			if(_this.parent != null && _this.parent.dirty) {
				_this.parent.clean_check();
			}
			if(_this.dirty && !_this._cleaning && !_this.manual_update) {
				_this.clean();
			}
		}
		this.view_matrix = _this.world.matrix;
		if(!this.transform_dirty) {
			return;
		}
		var _this1 = this.view_matrix;
		var te = _this1.elements;
		var _this2 = new phoenix_Matrix(te[0],te[4],te[8],te[12],te[1],te[5],te[9],te[13],te[2],te[6],te[10],te[14],te[3],te[7],te[11],te[15]);
		var te1 = _this2.elements;
		var me = _this1.elements;
		var n11 = me[0];
		var n12 = me[4];
		var n13 = me[8];
		var n14 = me[12];
		var n21 = me[1];
		var n22 = me[5];
		var n23 = me[9];
		var n24 = me[13];
		var n31 = me[2];
		var n32 = me[6];
		var n33 = me[10];
		var n34 = me[14];
		var n41 = me[3];
		var n42 = me[7];
		var n43 = me[11];
		var n44 = me[15];
		te1[0] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;
		te1[4] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;
		te1[8] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;
		te1[12] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;
		te1[1] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;
		te1[5] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;
		te1[9] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;
		te1[13] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;
		te1[2] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;
		te1[6] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;
		te1[10] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;
		te1[14] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;
		te1[3] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;
		te1[7] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;
		te1[11] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;
		te1[15] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;
		var det = me[0] * te1[0] + me[1] * te1[4] + me[2] * te1[8] + me[3] * te1[12];
		var tmp;
		if(det == 0) {
			haxe_Log.trace("Matrix.getInverse: cant invert matrix, determinant is 0",{ fileName : "Matrix.hx", lineNumber : 697, className : "phoenix.Matrix", methodName : "getInverse"});
			var e = _this2.elements;
			e[0] = 1;
			e[4] = 0;
			e[8] = 0;
			e[12] = 0;
			e[1] = 0;
			e[5] = 1;
			e[9] = 0;
			e[13] = 0;
			e[2] = 0;
			e[6] = 0;
			e[10] = 1;
			e[14] = 0;
			e[3] = 0;
			e[7] = 0;
			e[11] = 0;
			e[15] = 1;
			tmp = _this2;
		} else {
			var _s = 1 / det;
			var te2 = _this2.elements;
			te2[0] *= _s;
			te2[4] *= _s;
			te2[8] *= _s;
			te2[12] *= _s;
			te2[1] *= _s;
			te2[5] *= _s;
			te2[9] *= _s;
			te2[13] *= _s;
			te2[2] *= _s;
			te2[6] *= _s;
			te2[10] *= _s;
			te2[14] *= _s;
			te2[3] *= _s;
			te2[7] *= _s;
			te2[11] *= _s;
			te2[15] *= _s;
			tmp = _this2;
		}
		this.view_matrix_inverse = tmp;
		var _this3 = this.view_matrix_inverse;
		var i = 0;
		while(i < 16) {
			_this3._float32array[i] = _this3.elements[i];
			++i;
		}
		this.view_inverse_arr = _this3._float32array;
		this.transform_dirty = false;
	}
	,update_projection_matrix: function() {
		if(!this.projection_dirty) {
			return;
		}
		switch(this.projection[1]) {
		case 0:
			var _l = 0.0;
			var _t = 0.0;
			var _r = this.viewport.w;
			var _b = this.viewport.h;
			if(this.ortho_left != null) {
				_l = this.ortho_left;
			}
			if(this.ortho_right != null) {
				_r = this.ortho_right;
			}
			if(this.ortho_top != null) {
				_t = this.ortho_top;
			}
			if(this.ortho_bottom != null) {
				_b = this.ortho_bottom;
			}
			var _near = this.near;
			var _far = this.far;
			var te = this.projection_matrix.elements;
			var w = _r - _l;
			var h = _t - _b;
			var p = _far - _near;
			te[0] = 2 / w;
			te[4] = 0;
			te[8] = 0;
			te[12] = -((_r + _l) / w);
			te[1] = 0;
			te[5] = 2 / h;
			te[9] = 0;
			te[13] = -((_t + _b) / h);
			te[2] = 0;
			te[6] = 0;
			te[10] = -2 / p;
			te[14] = -((_far + _near) / p);
			te[3] = 0;
			te[7] = 0;
			te[11] = 0;
			te[15] = 1;
			break;
		case 1:
			var _aspect = this.aspect;
			var _near1 = this.near;
			var _far1 = this.far;
			var ymax = _near1 * Math.tan(this.fov_y * 0.5 * 0.0174532925199432781);
			var ymin = -ymax;
			var xmin = ymin * _aspect;
			var xmax = ymax * _aspect;
			var te1 = this.projection_matrix.elements;
			te1[0] = 2 * _near1 / (xmax - xmin);
			te1[4] = 0;
			te1[8] = (xmax + xmin) / (xmax - xmin);
			te1[12] = 0;
			te1[1] = 0;
			te1[5] = 2 * _near1 / (ymax - ymin);
			te1[9] = (ymax + ymin) / (ymax - ymin);
			te1[13] = 0;
			te1[2] = 0;
			te1[6] = 0;
			te1[10] = -(_far1 + _near1) / (_far1 - _near1);
			te1[14] = -2 * _far1 * _near1 / (_far1 - _near1);
			te1[3] = 0;
			te1[7] = 0;
			te1[11] = -1;
			te1[15] = 0;
			break;
		case 2:
			break;
		}
		var _this = this.projection_matrix;
		var i = 0;
		while(i < 16) {
			_this._float32array[i] = _this.elements[i];
			++i;
		}
		this.proj_arr = _this._float32array;
		this.projection_dirty = false;
	}
	,set_zoom: function(_z) {
		var _new_zoom = _z;
		if(_z < this.minimum_zoom) {
			_new_zoom = this.minimum_zoom;
		}
		switch(this.projection[1]) {
		case 0:
			var _this = this.transform.local.scale;
			var _x = 1 / _new_zoom;
			_this.x = _x;
			if(!_this._construct) {
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_x);
				}
			}
			var _this1 = this.transform.local.scale;
			var _y = 1 / _new_zoom;
			_this1.y = _y;
			if(!_this1._construct) {
				if(_this1.listen_y != null && !_this1.ignore_listeners) {
					_this1.listen_y(_y);
				}
			}
			var _this2 = this.transform.local.scale;
			var _z1 = 1 / _new_zoom;
			_this2.z = _z1;
			if(!_this2._construct) {
				if(_this2.listen_z != null && !_this2.ignore_listeners) {
					_this2.listen_z(_z1);
				}
			}
			break;
		case 1:
			break;
		case 2:
			break;
		}
		return this.zoom = _new_zoom;
	}
	,set_center: function(_p) {
		this.center = _p;
		switch(this.projection[1]) {
		case 0:
			if(!this.refresh_pos_ && !this.setup_) {
				this.pos.ignore_listeners = true;
				var _this = this.pos;
				var _x = _p.x - this.viewport.w / 2;
				_this.x = _x;
				if(!_this._construct) {
					if(_this.listen_x != null && !_this.ignore_listeners) {
						_this.listen_x(_x);
					}
				}
				var _this1 = this.pos;
				var _y = _p.y - this.viewport.h / 2;
				_this1.y = _y;
				if(!_this1._construct) {
					if(_this1.listen_y != null && !_this1.ignore_listeners) {
						_this1.listen_y(_y);
					}
				}
				this.pos.ignore_listeners = false;
				var _this2 = this.transform.local.pos;
				var _x1 = _p.x;
				var _y1 = _p.y;
				var _z = _p.z;
				var _w = _p.w;
				var prev = _this2.ignore_listeners;
				_this2.ignore_listeners = true;
				_this2.x = _x1;
				if(!_this2._construct) {
					if(_this2.listen_x != null && !_this2.ignore_listeners) {
						_this2.listen_x(_x1);
					}
				}
				_this2.y = _y1;
				if(!_this2._construct) {
					if(_this2.listen_y != null && !_this2.ignore_listeners) {
						_this2.listen_y(_y1);
					}
				}
				_this2.z = _z;
				if(!_this2._construct) {
					if(_this2.listen_z != null && !_this2.ignore_listeners) {
						_this2.listen_z(_z);
					}
				}
				_this2.w = _w;
				_this2.ignore_listeners = prev;
				if(_this2.listen_x != null && !_this2.ignore_listeners) {
					_this2.listen_x(_this2.x);
				}
				if(_this2.listen_y != null && !_this2.ignore_listeners) {
					_this2.listen_y(_this2.y);
				}
				if(_this2.listen_z != null && !_this2.ignore_listeners) {
					_this2.listen_z(_this2.z);
				}
			}
			break;
		case 1:
			break;
		case 2:
			break;
		}
		var _v = this.center;
		var listener = $bind(this,this._center_changed);
		_v.listen_x = listener;
		_v.listen_y = listener;
		_v.listen_z = listener;
		return this.center;
	}
	,set_viewport: function(_r) {
		this.projection_dirty = true;
		this.viewport = _r;
		switch(this.projection[1]) {
		case 0:
			var _this = this.transform;
			var o = new phoenix_Vector(_r.w / 2,_r.h / 2);
			_this.dirty = true;
			if(_this.dirty && !_this._setup && _this._dirty_handlers != null && _this._dirty_handlers.length > 0) {
				var _g = 0;
				var _g1 = _this._dirty_handlers;
				while(_g < _g1.length) {
					var _handler = _g1[_g];
					++_g;
					if(_handler != null) {
						_handler(_this);
					}
				}
			}
			_this.origin = o;
			if(_this._origin_handlers != null && _this._origin_handlers.length > 0) {
				var _origin = _this.origin;
				var _g2 = 0;
				var _g11 = _this._origin_handlers;
				while(_g2 < _g11.length) {
					var _handler1 = _g11[_g2];
					++_g2;
					if(_handler1 != null) {
						_handler1(_origin);
					}
				}
			}
			this.set_pos(this.pos);
			break;
		case 1:
			break;
		case 2:
			break;
		}
		return this.viewport;
	}
	,set_pos: function(_p) {
		this.pos = _p;
		switch(this.projection[1]) {
		case 0:
			var _cx = this.center.x;
			var _cy = this.center.y;
			if(this.viewport != null) {
				_cx = _p.x + this.viewport.w / 2;
				_cy = _p.y + this.viewport.h / 2;
			}
			this.refresh_pos_ = true;
			this.center.ignore_listeners = true;
			var _this = this.center;
			_this.x = _cx;
			if(!_this._construct) {
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_cx);
				}
			}
			var _this1 = this.center;
			_this1.y = _cy;
			if(!_this1._construct) {
				if(_this1.listen_y != null && !_this1.ignore_listeners) {
					_this1.listen_y(_cy);
				}
			}
			this.center.ignore_listeners = false;
			this.refresh_pos_ = false;
			var _this2 = this.transform.local.pos;
			_this2.x = _cx;
			if(!_this2._construct) {
				if(_this2.listen_x != null && !_this2.ignore_listeners) {
					_this2.listen_x(_cx);
				}
			}
			var _this3 = this.transform.local.pos;
			_this3.y = _cy;
			if(!_this3._construct) {
				if(_this3.listen_y != null && !_this3.ignore_listeners) {
					_this3.listen_y(_cy);
				}
			}
			break;
		case 1:
			var value = this.pos;
			var _this4 = this.transform.local;
			_this4.pos = value;
			if(value != null) {
				var _v = _this4.pos;
				var listener = $bind(_this4,_this4._pos_change);
				_v.listen_x = listener;
				_v.listen_y = listener;
				_v.listen_z = listener;
				if(_this4.pos_changed != null && !_this4.ignore_listeners) {
					_this4.pos_changed(_this4.pos);
				}
			}
			break;
		case 2:
			break;
		}
		var _v1 = this.pos;
		var listener1 = $bind(this,this._pos_changed);
		_v1.listen_x = listener1;
		_v1.listen_y = listener1;
		_v1.listen_z = listener1;
		return this.pos;
	}
	,_pos_changed: function(v) {
		this.set_pos(this.pos);
	}
	,_center_changed: function(v) {
		this.set_center(this.center);
	}
	,__class__: phoenix_Camera
	,__properties__: {set_pos:"set_pos",set_zoom:"set_zoom",set_center:"set_center",set_viewport:"set_viewport"}
};
var phoenix_FOVType = { __ename__ : true, __constructs__ : ["vertical","horizontal"] };
phoenix_FOVType.vertical = ["vertical",0];
phoenix_FOVType.vertical.toString = $estr;
phoenix_FOVType.vertical.__enum__ = phoenix_FOVType;
phoenix_FOVType.horizontal = ["horizontal",1];
phoenix_FOVType.horizontal.toString = $estr;
phoenix_FOVType.horizontal.__enum__ = phoenix_FOVType;
var phoenix_ColorHSL = function() {
	this.l = 1.0;
	this.s = 1.0;
	this.h = 0.0;
};
$hxClasses["phoenix.ColorHSL"] = phoenix_ColorHSL;
phoenix_ColorHSL.__name__ = true;
phoenix_ColorHSL.__super__ = phoenix_Color;
phoenix_ColorHSL.prototype = $extend(phoenix_Color.prototype,{
	set_h: function(_h) {
		this.h = _h;
		this._refresh();
		return _h;
	}
	,set_s: function(_s) {
		this.s = _s;
		this._refresh();
		return _s;
	}
	,set_l: function(_l) {
		this.l = _l;
		this._refresh();
		return _l;
	}
	,_refresh: function() {
		this.refreshing = true;
		phoenix_Color.prototype.fromColorHSL.call(this,this);
		this.refreshing = false;
		return this;
	}
	,fromColor: function(_color) {
		var max = _color.maxRGB();
		var min = _color.minRGB();
		var add = max + min;
		var sub = max - min;
		var _h = 0;
		if(max == min) {
			_h = 0;
		} else if(max == _color.r) {
			_h = (60 * (_color.g - _color.b) / sub + 360) % 360;
		} else if(max == _color.g) {
			_h = 60 * (_color.b - _color.r) / sub + 120;
		} else if(max == _color.b) {
			_h = 60 * (_color.r - _color.g) / sub + 240;
		}
		var _s = max == min ? 0 : this.l <= 0.5 ? sub / add : sub / (2 - add);
		this.set_h(_h);
		this.set_s(_s);
		this.set_l(add / 2);
		this.a = _color.a;
		return this;
	}
	,__class__: phoenix_ColorHSL
	,__properties__: $extend(phoenix_Color.prototype.__properties__,{set_l:"set_l",set_s:"set_s",set_h:"set_h"})
});
var phoenix_ColorHSV = function() {
	this.v = 1.0;
	this.s = 0.0;
	this.h = 0.0;
};
$hxClasses["phoenix.ColorHSV"] = phoenix_ColorHSV;
phoenix_ColorHSV.__name__ = true;
phoenix_ColorHSV.__super__ = phoenix_Color;
phoenix_ColorHSV.prototype = $extend(phoenix_Color.prototype,{
	set_h: function(_h) {
		this.h = _h;
		this._refresh();
		return _h;
	}
	,set_s: function(_s) {
		this.s = _s;
		this._refresh();
		return this.s;
	}
	,set_v: function(_v) {
		this.v = _v;
		this._refresh();
		return this.v;
	}
	,_refresh: function() {
		this.refreshing = true;
		phoenix_Color.prototype.fromColorHSV.call(this,this);
		this.refreshing = false;
		return this;
	}
	,fromColorHSL: function(_color_hsl) {
		_color_hsl._refresh();
		return this.fromColor(_color_hsl);
	}
	,fromColor: function(_color) {
		var max = _color.maxRGB();
		var min = _color.minRGB();
		var sub = max - min;
		var _h = 0;
		if(max == min) {
			_h = 0;
		} else if(max == _color.r) {
			_h = (60 * (_color.g - _color.b) / sub + 360) % 360;
		} else if(max == _color.g) {
			_h = 60 * (_color.b - _color.r) / sub + 120;
		} else if(max == _color.b) {
			_h = 60 * (_color.r - _color.g) / sub + 240;
		}
		this.set_h(_h);
		this.set_s(max == 0 ? 0 : 1 - min / max);
		this.set_v(max);
		this.a = _color.a;
		return this;
	}
	,__class__: phoenix_ColorHSV
	,__properties__: $extend(phoenix_Color.prototype.__properties__,{set_v:"set_v",set_s:"set_s",set_h:"set_h"})
});
var phoenix_MatrixTransform = function(p,r,s) {
	this.pos = p;
	this.rotation = r;
	this.scale = s;
};
$hxClasses["phoenix.MatrixTransform"] = phoenix_MatrixTransform;
phoenix_MatrixTransform.__name__ = true;
phoenix_MatrixTransform.prototype = {
	__class__: phoenix_MatrixTransform
};
var phoenix_Matrix = function(n11,n12,n13,n14,n21,n22,n23,n24,n31,n32,n33,n34,n41,n42,n43,n44) {
	if(n44 == null) {
		n44 = 1;
	}
	if(n43 == null) {
		n43 = 0;
	}
	if(n42 == null) {
		n42 = 0;
	}
	if(n41 == null) {
		n41 = 0;
	}
	if(n34 == null) {
		n34 = 0;
	}
	if(n33 == null) {
		n33 = 1;
	}
	if(n32 == null) {
		n32 = 0;
	}
	if(n31 == null) {
		n31 = 0;
	}
	if(n24 == null) {
		n24 = 0;
	}
	if(n23 == null) {
		n23 = 0;
	}
	if(n22 == null) {
		n22 = 1;
	}
	if(n21 == null) {
		n21 = 0;
	}
	if(n14 == null) {
		n14 = 0;
	}
	if(n13 == null) {
		n13 = 0;
	}
	if(n12 == null) {
		n12 = 0;
	}
	if(n11 == null) {
		n11 = 1;
	}
	this.elements = [];
	var i = 0;
	while(i++ < 16) this.elements.push(0.0);
	var e = this.elements;
	e[0] = n11;
	e[4] = n12;
	e[8] = n13;
	e[12] = n14;
	e[1] = n21;
	e[5] = n22;
	e[9] = n23;
	e[13] = n24;
	e[2] = n31;
	e[6] = n32;
	e[10] = n33;
	e[14] = n34;
	e[3] = n41;
	e[7] = n42;
	e[11] = n43;
	e[15] = n44;
	this._float32array = new Float32Array(this.elements);
};
$hxClasses["phoenix.Matrix"] = phoenix_Matrix;
phoenix_Matrix.__name__ = true;
phoenix_Matrix.prototype = {
	__class__: phoenix_Matrix
};
var phoenix_Quaternion = function(_x,_y,_z,_w) {
	if(_w == null) {
		_w = 1;
	}
	if(_z == null) {
		_z = 0;
	}
	if(_y == null) {
		_y = 0;
	}
	if(_x == null) {
		_x = 0;
	}
	this.ignore_euler = false;
	this._construct = false;
	this.ignore_listeners = false;
	this.w = 0.0;
	this.z = 0.0;
	this.y = 0.0;
	this.x = 0.0;
	this._construct = true;
	this.x = _x;
	if(!this._construct) {
		if(!(this.euler == null || this.ignore_euler || this._construct)) {
			var _this = this.euler;
			var sqx = this.x * this.x;
			var sqy = this.y * this.y;
			var sqz = this.z * this.z;
			var sqw = this.w * this.w;
			var _x1 = _this.x;
			var _y1 = _this.y;
			var _z1 = _this.z;
			_x1 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw - sqx - sqy + sqz);
			var value = 2 * (this.x * this.z + this.y * this.w);
			_y1 = Math.asin(value < -1 ? -1 : value > 1 ? 1 : value);
			_z1 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw + sqx - sqy - sqz);
			var prev = _this.ignore_listeners;
			_this.ignore_listeners = true;
			_this.x = _x1;
			if(!_this._construct) {
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_x1);
				}
			}
			_this.y = _y1;
			if(!_this._construct) {
				if(_this.listen_y != null && !_this.ignore_listeners) {
					_this.listen_y(_y1);
				}
			}
			_this.z = _z1;
			if(!_this._construct) {
				if(_this.listen_z != null && !_this.ignore_listeners) {
					_this.listen_z(_z1);
				}
			}
			_this.ignore_listeners = prev;
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(_this.x);
			}
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(_this.y);
			}
			if(_this.listen_z != null && !_this.ignore_listeners) {
				_this.listen_z(_this.z);
			}
		}
		if(this.listen_x != null && !this.ignore_listeners) {
			this.listen_x(this.x);
		}
	}
	this.y = _y;
	if(!this._construct) {
		if(!(this.euler == null || this.ignore_euler || this._construct)) {
			var _this1 = this.euler;
			var sqx1 = this.x * this.x;
			var sqy1 = this.y * this.y;
			var sqz1 = this.z * this.z;
			var sqw1 = this.w * this.w;
			var _x2 = _this1.x;
			var _y2 = _this1.y;
			var _z2 = _this1.z;
			_x2 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw1 - sqx1 - sqy1 + sqz1);
			var value1 = 2 * (this.x * this.z + this.y * this.w);
			_y2 = Math.asin(value1 < -1 ? -1 : value1 > 1 ? 1 : value1);
			_z2 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw1 + sqx1 - sqy1 - sqz1);
			var prev1 = _this1.ignore_listeners;
			_this1.ignore_listeners = true;
			_this1.x = _x2;
			if(!_this1._construct) {
				if(_this1.listen_x != null && !_this1.ignore_listeners) {
					_this1.listen_x(_x2);
				}
			}
			_this1.y = _y2;
			if(!_this1._construct) {
				if(_this1.listen_y != null && !_this1.ignore_listeners) {
					_this1.listen_y(_y2);
				}
			}
			_this1.z = _z2;
			if(!_this1._construct) {
				if(_this1.listen_z != null && !_this1.ignore_listeners) {
					_this1.listen_z(_z2);
				}
			}
			_this1.ignore_listeners = prev1;
			if(_this1.listen_x != null && !_this1.ignore_listeners) {
				_this1.listen_x(_this1.x);
			}
			if(_this1.listen_y != null && !_this1.ignore_listeners) {
				_this1.listen_y(_this1.y);
			}
			if(_this1.listen_z != null && !_this1.ignore_listeners) {
				_this1.listen_z(_this1.z);
			}
		}
		if(this.listen_y != null && !this.ignore_listeners) {
			this.listen_y(this.y);
		}
	}
	this.z = _z;
	if(!this._construct) {
		if(!(this.euler == null || this.ignore_euler || this._construct)) {
			var _this2 = this.euler;
			var sqx2 = this.x * this.x;
			var sqy2 = this.y * this.y;
			var sqz2 = this.z * this.z;
			var sqw2 = this.w * this.w;
			var _x3 = _this2.x;
			var _y3 = _this2.y;
			var _z3 = _this2.z;
			_x3 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw2 - sqx2 - sqy2 + sqz2);
			var value2 = 2 * (this.x * this.z + this.y * this.w);
			_y3 = Math.asin(value2 < -1 ? -1 : value2 > 1 ? 1 : value2);
			_z3 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw2 + sqx2 - sqy2 - sqz2);
			var prev2 = _this2.ignore_listeners;
			_this2.ignore_listeners = true;
			_this2.x = _x3;
			if(!_this2._construct) {
				if(_this2.listen_x != null && !_this2.ignore_listeners) {
					_this2.listen_x(_x3);
				}
			}
			_this2.y = _y3;
			if(!_this2._construct) {
				if(_this2.listen_y != null && !_this2.ignore_listeners) {
					_this2.listen_y(_y3);
				}
			}
			_this2.z = _z3;
			if(!_this2._construct) {
				if(_this2.listen_z != null && !_this2.ignore_listeners) {
					_this2.listen_z(_z3);
				}
			}
			_this2.ignore_listeners = prev2;
			if(_this2.listen_x != null && !_this2.ignore_listeners) {
				_this2.listen_x(_this2.x);
			}
			if(_this2.listen_y != null && !_this2.ignore_listeners) {
				_this2.listen_y(_this2.y);
			}
			if(_this2.listen_z != null && !_this2.ignore_listeners) {
				_this2.listen_z(_this2.z);
			}
		}
		if(this.listen_z != null && !this.ignore_listeners) {
			this.listen_z(this.z);
		}
	}
	this.w = _w;
	if(!this._construct) {
		if(!(this.euler == null || this.ignore_euler || this._construct)) {
			var _this3 = this.euler;
			var sqx3 = this.x * this.x;
			var sqy3 = this.y * this.y;
			var sqz3 = this.z * this.z;
			var sqw3 = this.w * this.w;
			var _x4 = _this3.x;
			var _y4 = _this3.y;
			var _z4 = _this3.z;
			_x4 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw3 - sqx3 - sqy3 + sqz3);
			var value3 = 2 * (this.x * this.z + this.y * this.w);
			_y4 = Math.asin(value3 < -1 ? -1 : value3 > 1 ? 1 : value3);
			_z4 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw3 + sqx3 - sqy3 - sqz3);
			var prev3 = _this3.ignore_listeners;
			_this3.ignore_listeners = true;
			_this3.x = _x4;
			if(!_this3._construct) {
				if(_this3.listen_x != null && !_this3.ignore_listeners) {
					_this3.listen_x(_x4);
				}
			}
			_this3.y = _y4;
			if(!_this3._construct) {
				if(_this3.listen_y != null && !_this3.ignore_listeners) {
					_this3.listen_y(_y4);
				}
			}
			_this3.z = _z4;
			if(!_this3._construct) {
				if(_this3.listen_z != null && !_this3.ignore_listeners) {
					_this3.listen_z(_z4);
				}
			}
			_this3.ignore_listeners = prev3;
			if(_this3.listen_x != null && !_this3.ignore_listeners) {
				_this3.listen_x(_this3.x);
			}
			if(_this3.listen_y != null && !_this3.ignore_listeners) {
				_this3.listen_y(_this3.y);
			}
			if(_this3.listen_z != null && !_this3.ignore_listeners) {
				_this3.listen_z(_this3.z);
			}
		}
		if(this.listen_w != null && !this.ignore_listeners) {
			this.listen_w(this.w);
		}
	}
	this.euler = new phoenix_Vector();
	this._construct = false;
};
$hxClasses["phoenix.Quaternion"] = phoenix_Quaternion;
phoenix_Quaternion.__name__ = true;
phoenix_Quaternion.prototype = {
	copy: function(_quaternion) {
		var _y = _quaternion.y;
		var _z = _quaternion.z;
		var _w = _quaternion.w;
		this.ignore_euler = true;
		this.x = _quaternion.x;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this = this.euler;
				var sqx = this.x * this.x;
				var sqy = this.y * this.y;
				var sqz = this.z * this.z;
				var sqw = this.w * this.w;
				var _x = _this.x;
				var _y1 = _this.y;
				var _z1 = _this.z;
				_x = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw - sqx - sqy + sqz);
				var value = 2 * (this.x * this.z + this.y * this.w);
				_y1 = Math.asin(value < -1 ? -1 : value > 1 ? 1 : value);
				_z1 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw + sqx - sqy - sqz);
				var prev = _this.ignore_listeners;
				_this.ignore_listeners = true;
				_this.x = _x;
				if(!_this._construct) {
					if(_this.listen_x != null && !_this.ignore_listeners) {
						_this.listen_x(_x);
					}
				}
				_this.y = _y1;
				if(!_this._construct) {
					if(_this.listen_y != null && !_this.ignore_listeners) {
						_this.listen_y(_y1);
					}
				}
				_this.z = _z1;
				if(!_this._construct) {
					if(_this.listen_z != null && !_this.ignore_listeners) {
						_this.listen_z(_z1);
					}
				}
				_this.ignore_listeners = prev;
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_this.x);
				}
				if(_this.listen_y != null && !_this.ignore_listeners) {
					_this.listen_y(_this.y);
				}
				if(_this.listen_z != null && !_this.ignore_listeners) {
					_this.listen_z(_this.z);
				}
			}
			if(this.listen_x != null && !this.ignore_listeners) {
				this.listen_x(this.x);
			}
		}
		this.y = _y;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this1 = this.euler;
				var sqx1 = this.x * this.x;
				var sqy1 = this.y * this.y;
				var sqz1 = this.z * this.z;
				var sqw1 = this.w * this.w;
				var _x1 = _this1.x;
				var _y2 = _this1.y;
				var _z2 = _this1.z;
				_x1 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw1 - sqx1 - sqy1 + sqz1);
				var value1 = 2 * (this.x * this.z + this.y * this.w);
				_y2 = Math.asin(value1 < -1 ? -1 : value1 > 1 ? 1 : value1);
				_z2 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw1 + sqx1 - sqy1 - sqz1);
				var prev1 = _this1.ignore_listeners;
				_this1.ignore_listeners = true;
				_this1.x = _x1;
				if(!_this1._construct) {
					if(_this1.listen_x != null && !_this1.ignore_listeners) {
						_this1.listen_x(_x1);
					}
				}
				_this1.y = _y2;
				if(!_this1._construct) {
					if(_this1.listen_y != null && !_this1.ignore_listeners) {
						_this1.listen_y(_y2);
					}
				}
				_this1.z = _z2;
				if(!_this1._construct) {
					if(_this1.listen_z != null && !_this1.ignore_listeners) {
						_this1.listen_z(_z2);
					}
				}
				_this1.ignore_listeners = prev1;
				if(_this1.listen_x != null && !_this1.ignore_listeners) {
					_this1.listen_x(_this1.x);
				}
				if(_this1.listen_y != null && !_this1.ignore_listeners) {
					_this1.listen_y(_this1.y);
				}
				if(_this1.listen_z != null && !_this1.ignore_listeners) {
					_this1.listen_z(_this1.z);
				}
			}
			if(this.listen_y != null && !this.ignore_listeners) {
				this.listen_y(this.y);
			}
		}
		this.z = _z;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this2 = this.euler;
				var sqx2 = this.x * this.x;
				var sqy2 = this.y * this.y;
				var sqz2 = this.z * this.z;
				var sqw2 = this.w * this.w;
				var _x2 = _this2.x;
				var _y3 = _this2.y;
				var _z3 = _this2.z;
				_x2 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw2 - sqx2 - sqy2 + sqz2);
				var value2 = 2 * (this.x * this.z + this.y * this.w);
				_y3 = Math.asin(value2 < -1 ? -1 : value2 > 1 ? 1 : value2);
				_z3 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw2 + sqx2 - sqy2 - sqz2);
				var prev2 = _this2.ignore_listeners;
				_this2.ignore_listeners = true;
				_this2.x = _x2;
				if(!_this2._construct) {
					if(_this2.listen_x != null && !_this2.ignore_listeners) {
						_this2.listen_x(_x2);
					}
				}
				_this2.y = _y3;
				if(!_this2._construct) {
					if(_this2.listen_y != null && !_this2.ignore_listeners) {
						_this2.listen_y(_y3);
					}
				}
				_this2.z = _z3;
				if(!_this2._construct) {
					if(_this2.listen_z != null && !_this2.ignore_listeners) {
						_this2.listen_z(_z3);
					}
				}
				_this2.ignore_listeners = prev2;
				if(_this2.listen_x != null && !_this2.ignore_listeners) {
					_this2.listen_x(_this2.x);
				}
				if(_this2.listen_y != null && !_this2.ignore_listeners) {
					_this2.listen_y(_this2.y);
				}
				if(_this2.listen_z != null && !_this2.ignore_listeners) {
					_this2.listen_z(_this2.z);
				}
			}
			if(this.listen_z != null && !this.ignore_listeners) {
				this.listen_z(this.z);
			}
		}
		this.w = _w;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this3 = this.euler;
				var sqx3 = this.x * this.x;
				var sqy3 = this.y * this.y;
				var sqz3 = this.z * this.z;
				var sqw3 = this.w * this.w;
				var _x3 = _this3.x;
				var _y4 = _this3.y;
				var _z4 = _this3.z;
				_x3 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw3 - sqx3 - sqy3 + sqz3);
				var value3 = 2 * (this.x * this.z + this.y * this.w);
				_y4 = Math.asin(value3 < -1 ? -1 : value3 > 1 ? 1 : value3);
				_z4 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw3 + sqx3 - sqy3 - sqz3);
				var prev3 = _this3.ignore_listeners;
				_this3.ignore_listeners = true;
				_this3.x = _x3;
				if(!_this3._construct) {
					if(_this3.listen_x != null && !_this3.ignore_listeners) {
						_this3.listen_x(_x3);
					}
				}
				_this3.y = _y4;
				if(!_this3._construct) {
					if(_this3.listen_y != null && !_this3.ignore_listeners) {
						_this3.listen_y(_y4);
					}
				}
				_this3.z = _z4;
				if(!_this3._construct) {
					if(_this3.listen_z != null && !_this3.ignore_listeners) {
						_this3.listen_z(_z4);
					}
				}
				_this3.ignore_listeners = prev3;
				if(_this3.listen_x != null && !_this3.ignore_listeners) {
					_this3.listen_x(_this3.x);
				}
				if(_this3.listen_y != null && !_this3.ignore_listeners) {
					_this3.listen_y(_this3.y);
				}
				if(_this3.listen_z != null && !_this3.ignore_listeners) {
					_this3.listen_z(_this3.z);
				}
			}
			if(this.listen_w != null && !this.ignore_listeners) {
				this.listen_w(this.w);
			}
		}
		this.ignore_euler = false;
		if(!(this.euler == null || this.ignore_euler || this._construct)) {
			var _this4 = this.euler;
			var sqx4 = this.x * this.x;
			var sqy4 = this.y * this.y;
			var sqz4 = this.z * this.z;
			var sqw4 = this.w * this.w;
			var _x4 = _this4.x;
			var _y5 = _this4.y;
			var _z5 = _this4.z;
			_x4 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw4 - sqx4 - sqy4 + sqz4);
			var value4 = 2 * (this.x * this.z + this.y * this.w);
			_y5 = Math.asin(value4 < -1 ? -1 : value4 > 1 ? 1 : value4);
			_z5 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw4 + sqx4 - sqy4 - sqz4);
			var prev4 = _this4.ignore_listeners;
			_this4.ignore_listeners = true;
			_this4.x = _x4;
			if(!_this4._construct) {
				if(_this4.listen_x != null && !_this4.ignore_listeners) {
					_this4.listen_x(_x4);
				}
			}
			_this4.y = _y5;
			if(!_this4._construct) {
				if(_this4.listen_y != null && !_this4.ignore_listeners) {
					_this4.listen_y(_y5);
				}
			}
			_this4.z = _z5;
			if(!_this4._construct) {
				if(_this4.listen_z != null && !_this4.ignore_listeners) {
					_this4.listen_z(_z5);
				}
			}
			_this4.ignore_listeners = prev4;
			if(_this4.listen_x != null && !_this4.ignore_listeners) {
				_this4.listen_x(_this4.x);
			}
			if(_this4.listen_y != null && !_this4.ignore_listeners) {
				_this4.listen_y(_this4.y);
			}
			if(_this4.listen_z != null && !_this4.ignore_listeners) {
				_this4.listen_z(_this4.z);
			}
		}
		if(this.listen_x != null && !this.ignore_listeners) {
			this.listen_x(this.x);
		}
		if(this.listen_y != null && !this.ignore_listeners) {
			this.listen_y(this.y);
		}
		if(this.listen_z != null && !this.ignore_listeners) {
			this.listen_z(this.z);
		}
		if(this.listen_w != null && !this.ignore_listeners) {
			this.listen_w(this.w);
		}
		return this;
	}
	,setFromEuler: function(_euler,_order) {
		if(_order == null) {
			_order = 0;
		}
		var _x = this.x;
		var _y = this.y;
		var _z = this.z;
		var _w = this.w;
		var c1 = Math.cos(_euler.x / 2);
		var c2 = Math.cos(_euler.y / 2);
		var c3 = Math.cos(_euler.z / 2);
		var s1 = Math.sin(_euler.x / 2);
		var s2 = Math.sin(_euler.y / 2);
		var s3 = Math.sin(_euler.z / 2);
		if(_order == 0) {
			_x = s1 * c2 * c3 + c1 * s2 * s3;
			_y = c1 * s2 * c3 - s1 * c2 * s3;
			_z = c1 * c2 * s3 + s1 * s2 * c3;
			_w = c1 * c2 * c3 - s1 * s2 * s3;
		} else if(_order == 1) {
			_x = s1 * c2 * c3 + c1 * s2 * s3;
			_y = c1 * s2 * c3 - s1 * c2 * s3;
			_z = c1 * c2 * s3 - s1 * s2 * c3;
			_w = c1 * c2 * c3 + s1 * s2 * s3;
		} else if(_order == 2) {
			_x = s1 * c2 * c3 - c1 * s2 * s3;
			_y = c1 * s2 * c3 + s1 * c2 * s3;
			_z = c1 * c2 * s3 + s1 * s2 * c3;
			_w = c1 * c2 * c3 - s1 * s2 * s3;
		} else if(_order == 3) {
			_x = s1 * c2 * c3 - c1 * s2 * s3;
			_y = c1 * s2 * c3 + s1 * c2 * s3;
			_z = c1 * c2 * s3 - s1 * s2 * c3;
			_w = c1 * c2 * c3 + s1 * s2 * s3;
		} else if(_order == 4) {
			_x = s1 * c2 * c3 + c1 * s2 * s3;
			_y = c1 * s2 * c3 + s1 * c2 * s3;
			_z = c1 * c2 * s3 - s1 * s2 * c3;
			_w = c1 * c2 * c3 - s1 * s2 * s3;
		} else if(_order == 5) {
			_x = s1 * c2 * c3 - c1 * s2 * s3;
			_y = c1 * s2 * c3 - s1 * c2 * s3;
			_z = c1 * c2 * s3 + s1 * s2 * c3;
			_w = c1 * c2 * c3 + s1 * s2 * s3;
		}
		this.ignore_euler = true;
		this.x = _x;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this = this.euler;
				var sqx = this.x * this.x;
				var sqy = this.y * this.y;
				var sqz = this.z * this.z;
				var sqw = this.w * this.w;
				var _x1 = _this.x;
				var _y1 = _this.y;
				var _z1 = _this.z;
				_x1 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw - sqx - sqy + sqz);
				var value = 2 * (this.x * this.z + this.y * this.w);
				_y1 = Math.asin(value < -1 ? -1 : value > 1 ? 1 : value);
				_z1 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw + sqx - sqy - sqz);
				var prev = _this.ignore_listeners;
				_this.ignore_listeners = true;
				_this.x = _x1;
				if(!_this._construct) {
					if(_this.listen_x != null && !_this.ignore_listeners) {
						_this.listen_x(_x1);
					}
				}
				_this.y = _y1;
				if(!_this._construct) {
					if(_this.listen_y != null && !_this.ignore_listeners) {
						_this.listen_y(_y1);
					}
				}
				_this.z = _z1;
				if(!_this._construct) {
					if(_this.listen_z != null && !_this.ignore_listeners) {
						_this.listen_z(_z1);
					}
				}
				_this.ignore_listeners = prev;
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_this.x);
				}
				if(_this.listen_y != null && !_this.ignore_listeners) {
					_this.listen_y(_this.y);
				}
				if(_this.listen_z != null && !_this.ignore_listeners) {
					_this.listen_z(_this.z);
				}
			}
			if(this.listen_x != null && !this.ignore_listeners) {
				this.listen_x(this.x);
			}
		}
		this.y = _y;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this1 = this.euler;
				var sqx1 = this.x * this.x;
				var sqy1 = this.y * this.y;
				var sqz1 = this.z * this.z;
				var sqw1 = this.w * this.w;
				var _x2 = _this1.x;
				var _y2 = _this1.y;
				var _z2 = _this1.z;
				_x2 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw1 - sqx1 - sqy1 + sqz1);
				var value1 = 2 * (this.x * this.z + this.y * this.w);
				_y2 = Math.asin(value1 < -1 ? -1 : value1 > 1 ? 1 : value1);
				_z2 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw1 + sqx1 - sqy1 - sqz1);
				var prev1 = _this1.ignore_listeners;
				_this1.ignore_listeners = true;
				_this1.x = _x2;
				if(!_this1._construct) {
					if(_this1.listen_x != null && !_this1.ignore_listeners) {
						_this1.listen_x(_x2);
					}
				}
				_this1.y = _y2;
				if(!_this1._construct) {
					if(_this1.listen_y != null && !_this1.ignore_listeners) {
						_this1.listen_y(_y2);
					}
				}
				_this1.z = _z2;
				if(!_this1._construct) {
					if(_this1.listen_z != null && !_this1.ignore_listeners) {
						_this1.listen_z(_z2);
					}
				}
				_this1.ignore_listeners = prev1;
				if(_this1.listen_x != null && !_this1.ignore_listeners) {
					_this1.listen_x(_this1.x);
				}
				if(_this1.listen_y != null && !_this1.ignore_listeners) {
					_this1.listen_y(_this1.y);
				}
				if(_this1.listen_z != null && !_this1.ignore_listeners) {
					_this1.listen_z(_this1.z);
				}
			}
			if(this.listen_y != null && !this.ignore_listeners) {
				this.listen_y(this.y);
			}
		}
		this.z = _z;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this2 = this.euler;
				var sqx2 = this.x * this.x;
				var sqy2 = this.y * this.y;
				var sqz2 = this.z * this.z;
				var sqw2 = this.w * this.w;
				var _x3 = _this2.x;
				var _y3 = _this2.y;
				var _z3 = _this2.z;
				_x3 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw2 - sqx2 - sqy2 + sqz2);
				var value2 = 2 * (this.x * this.z + this.y * this.w);
				_y3 = Math.asin(value2 < -1 ? -1 : value2 > 1 ? 1 : value2);
				_z3 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw2 + sqx2 - sqy2 - sqz2);
				var prev2 = _this2.ignore_listeners;
				_this2.ignore_listeners = true;
				_this2.x = _x3;
				if(!_this2._construct) {
					if(_this2.listen_x != null && !_this2.ignore_listeners) {
						_this2.listen_x(_x3);
					}
				}
				_this2.y = _y3;
				if(!_this2._construct) {
					if(_this2.listen_y != null && !_this2.ignore_listeners) {
						_this2.listen_y(_y3);
					}
				}
				_this2.z = _z3;
				if(!_this2._construct) {
					if(_this2.listen_z != null && !_this2.ignore_listeners) {
						_this2.listen_z(_z3);
					}
				}
				_this2.ignore_listeners = prev2;
				if(_this2.listen_x != null && !_this2.ignore_listeners) {
					_this2.listen_x(_this2.x);
				}
				if(_this2.listen_y != null && !_this2.ignore_listeners) {
					_this2.listen_y(_this2.y);
				}
				if(_this2.listen_z != null && !_this2.ignore_listeners) {
					_this2.listen_z(_this2.z);
				}
			}
			if(this.listen_z != null && !this.ignore_listeners) {
				this.listen_z(this.z);
			}
		}
		this.w = _w;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this3 = this.euler;
				var sqx3 = this.x * this.x;
				var sqy3 = this.y * this.y;
				var sqz3 = this.z * this.z;
				var sqw3 = this.w * this.w;
				var _x4 = _this3.x;
				var _y4 = _this3.y;
				var _z4 = _this3.z;
				_x4 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw3 - sqx3 - sqy3 + sqz3);
				var value3 = 2 * (this.x * this.z + this.y * this.w);
				_y4 = Math.asin(value3 < -1 ? -1 : value3 > 1 ? 1 : value3);
				_z4 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw3 + sqx3 - sqy3 - sqz3);
				var prev3 = _this3.ignore_listeners;
				_this3.ignore_listeners = true;
				_this3.x = _x4;
				if(!_this3._construct) {
					if(_this3.listen_x != null && !_this3.ignore_listeners) {
						_this3.listen_x(_x4);
					}
				}
				_this3.y = _y4;
				if(!_this3._construct) {
					if(_this3.listen_y != null && !_this3.ignore_listeners) {
						_this3.listen_y(_y4);
					}
				}
				_this3.z = _z4;
				if(!_this3._construct) {
					if(_this3.listen_z != null && !_this3.ignore_listeners) {
						_this3.listen_z(_z4);
					}
				}
				_this3.ignore_listeners = prev3;
				if(_this3.listen_x != null && !_this3.ignore_listeners) {
					_this3.listen_x(_this3.x);
				}
				if(_this3.listen_y != null && !_this3.ignore_listeners) {
					_this3.listen_y(_this3.y);
				}
				if(_this3.listen_z != null && !_this3.ignore_listeners) {
					_this3.listen_z(_this3.z);
				}
			}
			if(this.listen_w != null && !this.ignore_listeners) {
				this.listen_w(this.w);
			}
		}
		this.ignore_euler = false;
		if(!(this.euler == null || this.ignore_euler || this._construct)) {
			var _this4 = this.euler;
			var sqx4 = this.x * this.x;
			var sqy4 = this.y * this.y;
			var sqz4 = this.z * this.z;
			var sqw4 = this.w * this.w;
			var _x5 = _this4.x;
			var _y5 = _this4.y;
			var _z5 = _this4.z;
			_x5 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw4 - sqx4 - sqy4 + sqz4);
			var value4 = 2 * (this.x * this.z + this.y * this.w);
			_y5 = Math.asin(value4 < -1 ? -1 : value4 > 1 ? 1 : value4);
			_z5 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw4 + sqx4 - sqy4 - sqz4);
			var prev4 = _this4.ignore_listeners;
			_this4.ignore_listeners = true;
			_this4.x = _x5;
			if(!_this4._construct) {
				if(_this4.listen_x != null && !_this4.ignore_listeners) {
					_this4.listen_x(_x5);
				}
			}
			_this4.y = _y5;
			if(!_this4._construct) {
				if(_this4.listen_y != null && !_this4.ignore_listeners) {
					_this4.listen_y(_y5);
				}
			}
			_this4.z = _z5;
			if(!_this4._construct) {
				if(_this4.listen_z != null && !_this4.ignore_listeners) {
					_this4.listen_z(_z5);
				}
			}
			_this4.ignore_listeners = prev4;
			if(_this4.listen_x != null && !_this4.ignore_listeners) {
				_this4.listen_x(_this4.x);
			}
			if(_this4.listen_y != null && !_this4.ignore_listeners) {
				_this4.listen_y(_this4.y);
			}
			if(_this4.listen_z != null && !_this4.ignore_listeners) {
				_this4.listen_z(_this4.z);
			}
		}
		if(this.listen_x != null && !this.ignore_listeners) {
			this.listen_x(this.x);
		}
		if(this.listen_y != null && !this.ignore_listeners) {
			this.listen_y(this.y);
		}
		if(this.listen_z != null && !this.ignore_listeners) {
			this.listen_z(this.z);
		}
		if(this.listen_w != null && !this.ignore_listeners) {
			this.listen_w(this.w);
		}
		return this;
	}
	,setFromRotationMatrix: function(_m) {
		var te = _m.elements;
		var m11 = te[0];
		var m12 = te[4];
		var m13 = te[8];
		var m21 = te[1];
		var m22 = te[5];
		var m23 = te[9];
		var m31 = te[2];
		var m32 = te[6];
		var m33 = te[10];
		var _x = this.x;
		var _y = this.y;
		var _z = this.z;
		var _w = this.w;
		var tr = m11 + m22 + m33;
		var s;
		if(tr > 0) {
			s = 0.5 / Math.sqrt(tr + 1.0);
			_w = 0.25 / s;
			_x = (m32 - m23) * s;
			_y = (m13 - m31) * s;
			_z = (m21 - m12) * s;
		} else if(m11 > m22 && m11 > m33) {
			s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);
			_w = (m32 - m23) / s;
			_x = 0.25 * s;
			_y = (m12 + m21) / s;
			_z = (m13 + m31) / s;
		} else if(m22 > m33) {
			s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);
			_w = (m13 - m31) / s;
			_x = (m12 + m21) / s;
			_y = 0.25 * s;
			_z = (m23 + m32) / s;
		} else {
			s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);
			_w = (m21 - m12) / s;
			_x = (m13 + m31) / s;
			_y = (m23 + m32) / s;
			_z = 0.25 * s;
		}
		this.ignore_euler = true;
		this.x = _x;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this = this.euler;
				var sqx = this.x * this.x;
				var sqy = this.y * this.y;
				var sqz = this.z * this.z;
				var sqw = this.w * this.w;
				var _x1 = _this.x;
				var _y1 = _this.y;
				var _z1 = _this.z;
				_x1 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw - sqx - sqy + sqz);
				var value = 2 * (this.x * this.z + this.y * this.w);
				_y1 = Math.asin(value < -1 ? -1 : value > 1 ? 1 : value);
				_z1 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw + sqx - sqy - sqz);
				var prev = _this.ignore_listeners;
				_this.ignore_listeners = true;
				_this.x = _x1;
				if(!_this._construct) {
					if(_this.listen_x != null && !_this.ignore_listeners) {
						_this.listen_x(_x1);
					}
				}
				_this.y = _y1;
				if(!_this._construct) {
					if(_this.listen_y != null && !_this.ignore_listeners) {
						_this.listen_y(_y1);
					}
				}
				_this.z = _z1;
				if(!_this._construct) {
					if(_this.listen_z != null && !_this.ignore_listeners) {
						_this.listen_z(_z1);
					}
				}
				_this.ignore_listeners = prev;
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_this.x);
				}
				if(_this.listen_y != null && !_this.ignore_listeners) {
					_this.listen_y(_this.y);
				}
				if(_this.listen_z != null && !_this.ignore_listeners) {
					_this.listen_z(_this.z);
				}
			}
			if(this.listen_x != null && !this.ignore_listeners) {
				this.listen_x(this.x);
			}
		}
		this.y = _y;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this1 = this.euler;
				var sqx1 = this.x * this.x;
				var sqy1 = this.y * this.y;
				var sqz1 = this.z * this.z;
				var sqw1 = this.w * this.w;
				var _x2 = _this1.x;
				var _y2 = _this1.y;
				var _z2 = _this1.z;
				_x2 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw1 - sqx1 - sqy1 + sqz1);
				var value1 = 2 * (this.x * this.z + this.y * this.w);
				_y2 = Math.asin(value1 < -1 ? -1 : value1 > 1 ? 1 : value1);
				_z2 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw1 + sqx1 - sqy1 - sqz1);
				var prev1 = _this1.ignore_listeners;
				_this1.ignore_listeners = true;
				_this1.x = _x2;
				if(!_this1._construct) {
					if(_this1.listen_x != null && !_this1.ignore_listeners) {
						_this1.listen_x(_x2);
					}
				}
				_this1.y = _y2;
				if(!_this1._construct) {
					if(_this1.listen_y != null && !_this1.ignore_listeners) {
						_this1.listen_y(_y2);
					}
				}
				_this1.z = _z2;
				if(!_this1._construct) {
					if(_this1.listen_z != null && !_this1.ignore_listeners) {
						_this1.listen_z(_z2);
					}
				}
				_this1.ignore_listeners = prev1;
				if(_this1.listen_x != null && !_this1.ignore_listeners) {
					_this1.listen_x(_this1.x);
				}
				if(_this1.listen_y != null && !_this1.ignore_listeners) {
					_this1.listen_y(_this1.y);
				}
				if(_this1.listen_z != null && !_this1.ignore_listeners) {
					_this1.listen_z(_this1.z);
				}
			}
			if(this.listen_y != null && !this.ignore_listeners) {
				this.listen_y(this.y);
			}
		}
		this.z = _z;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this2 = this.euler;
				var sqx2 = this.x * this.x;
				var sqy2 = this.y * this.y;
				var sqz2 = this.z * this.z;
				var sqw2 = this.w * this.w;
				var _x3 = _this2.x;
				var _y3 = _this2.y;
				var _z3 = _this2.z;
				_x3 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw2 - sqx2 - sqy2 + sqz2);
				var value2 = 2 * (this.x * this.z + this.y * this.w);
				_y3 = Math.asin(value2 < -1 ? -1 : value2 > 1 ? 1 : value2);
				_z3 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw2 + sqx2 - sqy2 - sqz2);
				var prev2 = _this2.ignore_listeners;
				_this2.ignore_listeners = true;
				_this2.x = _x3;
				if(!_this2._construct) {
					if(_this2.listen_x != null && !_this2.ignore_listeners) {
						_this2.listen_x(_x3);
					}
				}
				_this2.y = _y3;
				if(!_this2._construct) {
					if(_this2.listen_y != null && !_this2.ignore_listeners) {
						_this2.listen_y(_y3);
					}
				}
				_this2.z = _z3;
				if(!_this2._construct) {
					if(_this2.listen_z != null && !_this2.ignore_listeners) {
						_this2.listen_z(_z3);
					}
				}
				_this2.ignore_listeners = prev2;
				if(_this2.listen_x != null && !_this2.ignore_listeners) {
					_this2.listen_x(_this2.x);
				}
				if(_this2.listen_y != null && !_this2.ignore_listeners) {
					_this2.listen_y(_this2.y);
				}
				if(_this2.listen_z != null && !_this2.ignore_listeners) {
					_this2.listen_z(_this2.z);
				}
			}
			if(this.listen_z != null && !this.ignore_listeners) {
				this.listen_z(this.z);
			}
		}
		this.w = _w;
		if(!this._construct) {
			if(!(this.euler == null || this.ignore_euler || this._construct)) {
				var _this3 = this.euler;
				var sqx3 = this.x * this.x;
				var sqy3 = this.y * this.y;
				var sqz3 = this.z * this.z;
				var sqw3 = this.w * this.w;
				var _x4 = _this3.x;
				var _y4 = _this3.y;
				var _z4 = _this3.z;
				_x4 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw3 - sqx3 - sqy3 + sqz3);
				var value3 = 2 * (this.x * this.z + this.y * this.w);
				_y4 = Math.asin(value3 < -1 ? -1 : value3 > 1 ? 1 : value3);
				_z4 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw3 + sqx3 - sqy3 - sqz3);
				var prev3 = _this3.ignore_listeners;
				_this3.ignore_listeners = true;
				_this3.x = _x4;
				if(!_this3._construct) {
					if(_this3.listen_x != null && !_this3.ignore_listeners) {
						_this3.listen_x(_x4);
					}
				}
				_this3.y = _y4;
				if(!_this3._construct) {
					if(_this3.listen_y != null && !_this3.ignore_listeners) {
						_this3.listen_y(_y4);
					}
				}
				_this3.z = _z4;
				if(!_this3._construct) {
					if(_this3.listen_z != null && !_this3.ignore_listeners) {
						_this3.listen_z(_z4);
					}
				}
				_this3.ignore_listeners = prev3;
				if(_this3.listen_x != null && !_this3.ignore_listeners) {
					_this3.listen_x(_this3.x);
				}
				if(_this3.listen_y != null && !_this3.ignore_listeners) {
					_this3.listen_y(_this3.y);
				}
				if(_this3.listen_z != null && !_this3.ignore_listeners) {
					_this3.listen_z(_this3.z);
				}
			}
			if(this.listen_w != null && !this.ignore_listeners) {
				this.listen_w(this.w);
			}
		}
		this.ignore_euler = false;
		if(!(this.euler == null || this.ignore_euler || this._construct)) {
			var _this4 = this.euler;
			var sqx4 = this.x * this.x;
			var sqy4 = this.y * this.y;
			var sqz4 = this.z * this.z;
			var sqw4 = this.w * this.w;
			var _x5 = _this4.x;
			var _y5 = _this4.y;
			var _z5 = _this4.z;
			_x5 = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw4 - sqx4 - sqy4 + sqz4);
			var value4 = 2 * (this.x * this.z + this.y * this.w);
			_y5 = Math.asin(value4 < -1 ? -1 : value4 > 1 ? 1 : value4);
			_z5 = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw4 + sqx4 - sqy4 - sqz4);
			var prev4 = _this4.ignore_listeners;
			_this4.ignore_listeners = true;
			_this4.x = _x5;
			if(!_this4._construct) {
				if(_this4.listen_x != null && !_this4.ignore_listeners) {
					_this4.listen_x(_x5);
				}
			}
			_this4.y = _y5;
			if(!_this4._construct) {
				if(_this4.listen_y != null && !_this4.ignore_listeners) {
					_this4.listen_y(_y5);
				}
			}
			_this4.z = _z5;
			if(!_this4._construct) {
				if(_this4.listen_z != null && !_this4.ignore_listeners) {
					_this4.listen_z(_z5);
				}
			}
			_this4.ignore_listeners = prev4;
			if(_this4.listen_x != null && !_this4.ignore_listeners) {
				_this4.listen_x(_this4.x);
			}
			if(_this4.listen_y != null && !_this4.ignore_listeners) {
				_this4.listen_y(_this4.y);
			}
			if(_this4.listen_z != null && !_this4.ignore_listeners) {
				_this4.listen_z(_this4.z);
			}
		}
		if(this.listen_x != null && !this.ignore_listeners) {
			this.listen_x(this.x);
		}
		if(this.listen_y != null && !this.ignore_listeners) {
			this.listen_y(this.y);
		}
		if(this.listen_z != null && !this.ignore_listeners) {
			this.listen_z(this.z);
		}
		if(this.listen_w != null && !this.ignore_listeners) {
			this.listen_w(this.w);
		}
		return this;
	}
	,clone: function() {
		return new phoenix_Quaternion(this.x,this.y,this.z,this.w);
	}
	,__class__: phoenix_Quaternion
};
var phoenix_Rectangle = function(_x,_y,_w,_h) {
	if(_h == null) {
		_h = 0;
	}
	if(_w == null) {
		_w = 0;
	}
	if(_y == null) {
		_y = 0;
	}
	if(_x == null) {
		_x = 0;
	}
	this.ignore_listeners = false;
	this.h = 0;
	this.w = 0;
	this.y = 0;
	this.x = 0;
	this.set_x(_x);
	this.set_y(_y);
	this.set_w(_w);
	this.set_h(_h);
};
$hxClasses["phoenix.Rectangle"] = phoenix_Rectangle;
phoenix_Rectangle.__name__ = true;
phoenix_Rectangle.listen = function(_r,listener) {
	_r.listen_x = listener;
	_r.listen_y = listener;
	_r.listen_w = listener;
	_r.listen_h = listener;
};
phoenix_Rectangle.prototype = {
	equal: function(_other) {
		if(_other == null) {
			return false;
		}
		if(this.x == _other.x && this.y == _other.y && this.w == _other.w) {
			return this.h == _other.h;
		} else {
			return false;
		}
	}
	,set: function(_x,_y,_w,_h) {
		var _setx = this.x;
		var _sety = this.y;
		var _setw = this.w;
		var _seth = this.h;
		if(_x != null) {
			_setx = _x;
		}
		if(_y != null) {
			_sety = _y;
		}
		if(_w != null) {
			_setw = _w;
		}
		if(_h != null) {
			_seth = _h;
		}
		this.set_x(_setx);
		this.set_y(_sety);
		this.set_w(_setw);
		this.set_h(_seth);
		return this;
	}
	,set_x: function(_x) {
		this.x = _x;
		if(this.listen_x != null && !this.ignore_listeners) {
			this.listen_x(_x);
		}
		return this.x;
	}
	,set_y: function(_y) {
		this.y = _y;
		if(this.listen_y != null && !this.ignore_listeners) {
			this.listen_y(_y);
		}
		return this.y;
	}
	,set_w: function(_w) {
		this.w = _w;
		if(this.listen_w != null && !this.ignore_listeners) {
			this.listen_w(_w);
		}
		return this.w;
	}
	,set_h: function(_h) {
		this.h = _h;
		if(this.listen_h != null && !this.ignore_listeners) {
			this.listen_h(_h);
		}
		return this.h;
	}
	,__class__: phoenix_Rectangle
	,__properties__: {set_h:"set_h",set_w:"set_w",set_y:"set_y",set_x:"set_x"}
};
var phoenix_RenderPath = function(_renderer) {
	this.renderer = _renderer;
};
$hxClasses["phoenix.RenderPath"] = phoenix_RenderPath;
phoenix_RenderPath.__name__ = true;
phoenix_RenderPath.prototype = {
	render: function(_batchers,_stats) {
		var c = _batchers.length;
		var i = 0;
		while(i < c) {
			var batch = _batchers[i];
			if(batch.enabled) {
				if(batch.name != "") {
					Luxe.debug.start(batch.name);
				}
				batch.draw_calls = 0;
				batch.vert_count = 0;
				batch.emitter.emit(1,batch);
				batch.view.process();
				batch.renderer.state.viewport(batch.view.viewport.x,batch.view.viewport.y,batch.view.viewport.w,batch.view.viewport.h);
				batch.batch(false);
				batch.emitter.emit(2,batch);
				var _stats1 = batch.renderer.stats;
				var _node = batch.geometry.root;
				_stats1.geometry_count += (_node == null ? 0 : _node.nodecount) * batch.show_stats;
				_stats1.dynamic_batched_count += batch.dynamic_batched_count * batch.show_stats;
				_stats1.static_batched_count += batch.static_batched_count * batch.show_stats;
				_stats1.visible_count += batch.visible_count * batch.show_stats;
				_stats1.draw_calls += batch.draw_calls * batch.show_stats;
				_stats1.vert_count += batch.vert_count * batch.show_stats;
				if(batch.name != "") {
					Luxe.debug.end(batch.name);
				}
			}
			batch = null;
			++i;
		}
	}
	,__class__: phoenix_RenderPath
};
var phoenix_RenderState = function(_renderer) {
	this._active_texture = -1;
	this._used_program = null;
	this.current_renderbuffer = null;
	this.current_framebuffer = null;
	this.depth_func = -1;
	this.depth_test = false;
	this.cull_face = false;
	this.renderer = _renderer;
	this._viewport = new phoenix_Rectangle(0,0,0,0);
};
$hxClasses["phoenix.RenderState"] = phoenix_RenderState;
phoenix_RenderState.__name__ = true;
phoenix_RenderState.prototype = {
	enable: function(what) {
		switch(what) {
		case 2884:
			if(!this.cull_face) {
				this.cull_face = true;
				snow_modules_opengl_web_GL.gl.enable(2884);
			}
			break;
		case 2929:
			if(Luxe.core.app.config.render.depth > 0) {
				if(!this.depth_test) {
					this.depth_test = true;
					snow_modules_opengl_web_GL.gl.enable(2929);
				}
			}
			break;
		}
	}
	,disable: function(what) {
		switch(what) {
		case 2884:
			if(this.cull_face) {
				this.cull_face = false;
				snow_modules_opengl_web_GL.gl.disable(2884);
			}
			break;
		case 2929:
			if(Luxe.core.app.config.render.depth > 0) {
				if(this.depth_test) {
					this.depth_test = false;
					snow_modules_opengl_web_GL.gl.disable(2929);
				}
			}
			break;
		}
	}
	,depth_function: function(what) {
		if(this.depth_func != what) {
			snow_modules_opengl_web_GL.gl.depthFunc(what);
			this.depth_func = what;
		}
	}
	,scissor: function(x,y,w,h) {
		var _target_scale = this.renderer.get_target().viewport_scale;
		x *= _target_scale;
		y *= _target_scale;
		w *= _target_scale;
		h *= _target_scale;
		snow_modules_opengl_web_GL.gl.scissor(x | 0,this.renderer.get_target().height - (y + h) | 0,w | 0,h | 0);
	}
	,viewport: function(x,y,w,h) {
		var _target_scale = this.renderer.get_target().viewport_scale;
		x *= _target_scale;
		y *= _target_scale;
		w *= _target_scale;
		h *= _target_scale;
		snow_modules_opengl_web_GL.gl.viewport(x | 0,this.renderer.get_target().height - (y + h) | 0,w | 0,h | 0);
	}
	,bindFramebuffer: function(buffer) {
		if(this.current_framebuffer != buffer) {
			if(buffer == null) {
				buffer = this.renderer.default_framebuffer;
			}
			snow_modules_opengl_web_GL.gl.bindFramebuffer(36160,buffer);
			this.current_framebuffer = buffer;
		}
	}
	,bindRenderbuffer: function(buffer) {
		if(this.current_renderbuffer != buffer) {
			if(buffer == null) {
				buffer = this.renderer.default_renderbuffer;
			}
			snow_modules_opengl_web_GL.gl.bindRenderbuffer(36161,buffer);
			this.current_renderbuffer = buffer;
		}
	}
	,useProgram: function(program) {
		if(this._used_program != program) {
			this._used_program = program;
			snow_modules_opengl_web_GL.gl.useProgram(program);
		}
	}
	,activeTexture: function(val) {
		if(this._active_texture != val) {
			snow_modules_opengl_web_GL.gl.activeTexture(val);
			this._active_texture = val;
		}
	}
	,bindTexture2D: function(tex) {
		if(phoenix_RenderState.bound_texture_2D != tex) {
			phoenix_RenderState.bound_texture_2D = tex;
			snow_modules_opengl_web_GL.gl.bindTexture(3553,tex);
		}
	}
	,bindTextureCube: function(tex) {
		if(phoenix_RenderState.bound_texture_cube != tex) {
			phoenix_RenderState.bound_texture_cube = tex;
			snow_modules_opengl_web_GL.gl.bindTexture(34067,tex);
		}
	}
	,__class__: phoenix_RenderState
};
var phoenix_Texture = function(_options) {
	this.load_premultiply_alpha = false;
	this.height = -1;
	this.width = -1;
	this.height_actual = -1;
	this.width_actual = -1;
	this.compressed = false;
	this.border = 0;
	this.slot = 0;
	if(_options == null) {
		throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options was null" + (" ( " + "Texture create requires non-null options" + " )")));
	}
	if(_options.resource_type == null) {
		_options.resource_type = 4;
	}
	luxe_resource_Resource.call(this,_options);
	if(_options.texture == null) {
		_options.texture = this.create_texture_id();
	}
	this.texture = _options.texture;
	this.bind();
	this.apply_default_options(_options);
	if(_options.pixels != null) {
		if(_options.width == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options.width was null" + (" ( " + "Texture create with pixels requires both width and height" + " )")));
		}
		if(_options.height == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options.height was null" + (" ( " + "Texture create with pixels requires both width and height" + " )")));
		}
	}
	if(_options.width != null || _options.height != null) {
		if(_options.height == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options.height was null" + (" ( " + "Texture requires both width and height, only width was given in construct options" + " )")));
		}
		if(_options.width == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options.width was null" + (" ( " + "Texture requires both width and height, only height was given in construct options" + " )")));
		}
		this.width = this.width_actual = _options.width;
		this.height = this.height_actual = _options.height;
		if(_options.pixels != null) {
			this.submit(_options.pixels);
		}
	}
};
$hxClasses["phoenix.Texture"] = phoenix_Texture;
phoenix_Texture.__name__ = true;
phoenix_Texture.max_size = function() {
	return snow_modules_opengl_web_GL.gl.getParameter(3379);
};
phoenix_Texture.__super__ = luxe_resource_Resource;
phoenix_Texture.prototype = $extend(luxe_resource_Resource.prototype,{
	memory_use: function() {
		return this.width_actual * this.height_actual * 4;
	}
	,submit: function(_pixels,_target,_level) {
		if(_level == null) {
			_level = 0;
		}
		if(_level < 0) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("_level >= 0" + (" ( " + "Texture submit level cannot be negative" + " )")));
		}
		var _max = phoenix_Texture.max_size();
		if(this.width_actual > _max) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("width_actual <= _max" + (" ( " + ("Texture actual width bigger than maximum hardware size (width:" + this.width_actual + ", max:" + _max + ")") + " )")));
		}
		if(this.height_actual > _max) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("height_actual <= _max" + (" ( " + ("Texture actual height bigger than maximum hardware size (height:" + this.height_actual + ", max:" + _max + ")") + " )")));
		}
		this.bind();
		if(_target == null) {
			_target = 3553;
		}
		if(this.type == 3553) {
			if(this.compressed) {
				snow_modules_opengl_web_GL.gl.compressedTexImage2D(_target,_level,this.format,this.width_actual,this.height_actual,this.border,_pixels);
			} else {
				snow_modules_opengl_web_GL.gl.texImage2D(_target,_level,this.format,this.width_actual,this.height_actual,this.border,this.format,this.data_type,_pixels);
			}
		}
	}
	,bind: function() {
		Luxe.renderer.state.activeTexture(33984 + this.slot);
		var _this = Luxe.renderer.state;
		var tex = this.texture;
		switch(this.type) {
		case 3553:
			_this.bindTexture2D(tex);
			break;
		case 34067:
			_this.bindTextureCube(tex);
			break;
		}
	}
	,reload: function() {
		var _gthis = this;
		if(this.state == 6) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("state != ResourceState.destroyed" + (" ( " + "Resource cannot reload when already destroyed" + " )")));
		}
		this.clear();
		return new snow_api_Promise(function(resolve,reject) {
			_gthis.set_state(2);
			var get = snow_systems_assets_AssetImage.load(Luxe.core.app.assets,_gthis.id);
			get.then(function(_asset) {
				_gthis.texture = _gthis.create_texture_id();
				_gthis.from_asset(_asset);
				_gthis.set_state(3);
				resolve(_gthis);
			});
			get.error(function(_error) {
				_gthis.set_state(4);
				reject(_error);
			});
		});
	}
	,from_asset: function(_asset,_clear_asset) {
		if(_clear_asset == null) {
			_clear_asset = true;
		}
		this.width = _asset.image.width;
		this.height = _asset.image.height;
		this.width_actual = _asset.image.width_actual;
		this.height_actual = _asset.image.height_actual;
		if(this.load_premultiply_alpha) {
			Luxe.utils.premultiply_alpha(_asset.image.pixels);
		}
		this.submit(_asset.image.pixels);
		if(_clear_asset) {
			_asset.image.pixels = null;
			_asset = null;
		}
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,10241,this.filter_min);
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,10240,this.filter_mag);
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,10242,this.clamp_s);
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,10243,this.clamp_t);
	}
	,clear: function() {
		if(this.texture != null) {
			snow_modules_opengl_web_GL.gl.deleteTexture(this.texture);
		}
	}
	,create_texture_id: function() {
		return snow_modules_opengl_web_GL.gl.createTexture();
	}
	,apply_default_options: function(_options) {
		if(_options.load_premultiply_alpha == null) {
			_options.load_premultiply_alpha = false;
		}
		this.load_premultiply_alpha = _options.load_premultiply_alpha;
		if(_options.compressed == null) {
			_options.compressed = false;
		}
		this.compressed = _options.compressed;
		if(_options.format == null) {
			_options.format = 6408;
		}
		this.format = _options.format;
		if(_options.type == null) {
			_options.type = 3553;
		}
		this.type = _options.type;
		if(_options.data_type == null) {
			_options.data_type = 5121;
		}
		this.data_type = _options.data_type;
		if(_options.filter_min == null) {
			_options.filter_min = phoenix_Texture.default_filter;
		}
		this.set_filter_min(_options.filter_min);
		if(_options.filter_mag == null) {
			_options.filter_mag = phoenix_Texture.default_filter;
		}
		this.set_filter_mag(_options.filter_mag);
		if(_options.clamp_s == null) {
			_options.clamp_s = phoenix_Texture.default_clamp;
		}
		this.set_clamp_s(_options.clamp_s);
		if(_options.clamp_t == null) {
			_options.clamp_t = phoenix_Texture.default_clamp;
		}
		this.set_clamp_t(_options.clamp_t);
	}
	,set_clamp_s: function(_clamp) {
		this.bind();
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,10242,_clamp);
		return this.clamp_s = _clamp;
	}
	,set_clamp_t: function(_clamp) {
		this.bind();
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,10243,_clamp);
		return this.clamp_t = _clamp;
	}
	,set_filter_min: function(_filter) {
		this.bind();
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,10241,_filter);
		return this.filter_min = _filter;
	}
	,set_filter_mag: function(_filter) {
		this.bind();
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,10240,_filter);
		return this.filter_mag = _filter;
	}
	,__class__: phoenix_Texture
	,__properties__: $extend(luxe_resource_Resource.prototype.__properties__,{set_clamp_t:"set_clamp_t",set_clamp_s:"set_clamp_s",set_filter_mag:"set_filter_mag",set_filter_min:"set_filter_min"})
});
var phoenix_RenderTarget = function() { };
$hxClasses["phoenix.RenderTarget"] = phoenix_RenderTarget;
phoenix_RenderTarget.__name__ = true;
phoenix_RenderTarget.prototype = {
	__class__: phoenix_RenderTarget
};
var phoenix_RenderTexture = function(_options) {
	this.viewport_scale = 1;
	_options.resource_type = 5;
	phoenix_Texture.call(this,_options);
	if(_options.width == null) {
		_options.width = Luxe.core.screen.get_w() | 0;
	}
	if(_options.height == null) {
		_options.height = Luxe.core.screen.get_h() | 0;
	}
	this.width = this.width_actual = _options.width;
	this.height = this.height_actual = _options.height;
	if(_options.texture != null) {
		this.submit(null);
	}
	snow_modules_opengl_web_GL.gl.texParameteri(this.type,10241,this.filter_min);
	snow_modules_opengl_web_GL.gl.texParameteri(this.type,10240,this.filter_mag);
	snow_modules_opengl_web_GL.gl.texParameteri(this.type,10242,this.clamp_s);
	snow_modules_opengl_web_GL.gl.texParameteri(this.type,10243,this.clamp_t);
	this.framebuffer = snow_modules_opengl_web_GL.gl.createFramebuffer();
	this.bindBuffer();
	this.renderbuffer = snow_modules_opengl_web_GL.gl.createRenderbuffer();
	this.bindRenderBuffer();
	snow_modules_opengl_web_GL.gl.renderbufferStorage(36161,33189,this.width,this.height);
	snow_modules_opengl_web_GL.gl.framebufferTexture2D(36160,36064,3553,this.texture,0);
	snow_modules_opengl_web_GL.gl.framebufferRenderbuffer(36160,36096,36161,this.renderbuffer);
	var status = snow_modules_opengl_web_GL.gl.checkFramebufferStatus(36160);
	switch(status) {
	case 36053:
		break;
	case 36054:
		throw new js__$Boot_HaxeError("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_ATTACHMENT");
		break;
	case 36055:
		throw new js__$Boot_HaxeError("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");
		break;
	case 36057:
		throw new js__$Boot_HaxeError("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_DIMENSIONS");
		break;
	case 36061:
		throw new js__$Boot_HaxeError("Incomplete framebuffer: FRAMEBUFFER_UNSUPPORTED");
		break;
	default:
		throw new js__$Boot_HaxeError("Incomplete framebuffer: " + status);
	}
	this.unbindBuffer();
	this.unbindRenderBuffer();
	this.system.add(this);
};
$hxClasses["phoenix.RenderTexture"] = phoenix_RenderTexture;
phoenix_RenderTexture.__name__ = true;
phoenix_RenderTexture.__interfaces__ = [phoenix_RenderTarget];
phoenix_RenderTexture.__super__ = phoenix_Texture;
phoenix_RenderTexture.prototype = $extend(phoenix_Texture.prototype,{
	clear: function() {
		phoenix_Texture.prototype.clear.call(this);
		if(this.framebuffer != null) {
			snow_modules_opengl_web_GL.gl.deleteFramebuffer(this.framebuffer);
		}
		if(this.renderbuffer != null) {
			snow_modules_opengl_web_GL.gl.deleteRenderbuffer(this.renderbuffer);
		}
	}
	,bindBuffer: function() {
		Luxe.renderer.state.bindFramebuffer(this.framebuffer);
	}
	,unbindBuffer: function(_other) {
		Luxe.renderer.state.bindFramebuffer(_other);
	}
	,bindRenderBuffer: function() {
		Luxe.renderer.state.bindRenderbuffer(this.renderbuffer);
	}
	,unbindRenderBuffer: function(_other) {
		Luxe.renderer.state.bindRenderbuffer(_other);
	}
	,__class__: phoenix_RenderTexture
});
var phoenix_Backbuffer = function(_render_w,_render_h,_render_scale,_fb,_rb) {
	this.width = _render_w;
	this.height = _render_h;
	this.viewport_scale = _render_scale;
	this.framebuffer = _fb;
	this.renderbuffer = _rb;
};
$hxClasses["phoenix.Backbuffer"] = phoenix_Backbuffer;
phoenix_Backbuffer.__name__ = true;
phoenix_Backbuffer.__interfaces__ = [phoenix_RenderTarget];
phoenix_Backbuffer.prototype = {
	__class__: phoenix_Backbuffer
};
var phoenix_Renderer = function(_core,_asset) {
	this.should_clear = true;
	this.core = _core;
	this.font_asset = _asset;
	this.default_framebuffer = snow_modules_opengl_web_GL.gl.getParameter(36006);
	this.default_renderbuffer = snow_modules_opengl_web_GL.gl.getParameter(36007);
	this.backbuffer = new phoenix_Backbuffer(this.core.app.runtime.window.width,this.core.app.runtime.window.height,window.devicePixelRatio == null ? 1.0 : window.devicePixelRatio,this.default_framebuffer,this.default_renderbuffer);
};
$hxClasses["phoenix.Renderer"] = phoenix_Renderer;
phoenix_Renderer.__name__ = true;
phoenix_Renderer.prototype = {
	init: function() {
		haxe_Log.trace(" i / renderer / " + ("opengl " + snow_modules_opengl_web_GL.versionString()),{ fileName : "Renderer.hx", lineNumber : 137, className : "phoenix.Renderer", methodName : "init"});
		this.state = new phoenix_RenderState(this);
		this.clear_color = new phoenix_Color().rgb(1710618);
		this.stats = new phoenix_RendererStats();
		this.set_target(this.default_target = this.backbuffer);
		this.batchers = [];
		this.camera = new phoenix_Camera();
		this.default_render_path = new phoenix_RenderPath(this);
		this.render_path = this.default_render_path;
		this.create_default_shaders();
		this.batcher = new phoenix_Batcher(this,"default batcher");
		var _this = this.batcher;
		_this.layer = 1;
		_this.renderer.batchers.sort(($_=_this.renderer,$bind($_,$_.sort_batchers)));
		this.add_batch(this.batcher);
		this.create_default_font();
		if(Luxe.core.app.config.render.depth > 0) {
			this.state.enable(2929);
			this.state.depth_function(515);
			snow_modules_opengl_web_GL.gl.clearDepth(1.0);
		}
		snow_modules_opengl_web_GL.gl.enable(3042);
		snow_modules_opengl_web_GL.gl.blendFunc(770,771);
		snow_modules_opengl_web_GL.gl.pixelStorei(37441,0);
	}
	,destroy: function() {
		this.clear(new phoenix_Color().rgb(16729099));
	}
	,sort_batchers: function(a,b) {
		if(a.layer < b.layer) {
			return -1;
		}
		if(a.layer > b.layer) {
			return 1;
		}
		if(a.sequence < b.sequence) {
			return -1;
		}
		if(a.sequence > b.sequence) {
			return 1;
		}
		return 1;
	}
	,add_batch: function(batch) {
		this.batchers.push(batch);
		this.batchers.sort($bind(this,this.sort_batchers));
	}
	,clear: function(_color) {
		if(_color == null) {
			_color = this.clear_color;
		}
		snow_modules_opengl_web_GL.gl.clearColor(_color.r,_color.g,_color.b,_color.a);
		if(Luxe.core.app.config.render.depth > 0) {
			snow_modules_opengl_web_GL.gl.clear(16640);
			snow_modules_opengl_web_GL.gl.clearDepth(1.0);
		} else {
			snow_modules_opengl_web_GL.gl.clear(16384);
		}
	}
	,internal_resized: function(_w,_h) {
		this.backbuffer.width = _w;
		this.backbuffer.height = _h;
		this.backbuffer.viewport_scale = window.devicePixelRatio == null ? 1.0 : window.devicePixelRatio;
	}
	,process: function() {
		if(this.should_clear) {
			this.clear(this.clear_color);
		}
		this.render_path.render(this.batchers,this.stats);
	}
	,prerender: function() {
		this.stats.reset();
	}
	,get_target: function() {
		return this.target;
	}
	,set_target: function(_target) {
		if(_target == null) {
			_target = this.default_target;
		}
		this.state.bindFramebuffer(_target.framebuffer);
		this.state.bindRenderbuffer(_target.renderbuffer);
		return this.target = _target;
	}
	,create_default_shaders: function() {
		var vert = null;
		var frag = null;
		var frag_textured = null;
		var frag_bitmapfont = null;
		if(vert == null) {
			vert = haxe_Resource.getString("default.vert.glsl");
			frag = haxe_Resource.getString("default.frag.glsl");
			frag_textured = haxe_Resource.getString("default.frag.textured.glsl");
			frag_bitmapfont = haxe_Resource.getString("default.frag.bitmapfont.glsl");
		}
		snow_modules_opengl_web_GL.gl.getExtension("OES_standard_derivatives");
		frag = "precision mediump float;\n" + frag;
		frag_textured = "precision mediump float;\n" + frag_textured;
		frag_bitmapfont = "#extension GL_OES_standard_derivatives : enable\n#extension OES_standard_derivatives : enable\nprecision mediump float;\n" + frag_bitmapfont;
		var _plain = new phoenix_Shader({ id : "luxe.shader", frag_id : "default", vert_id : "default"});
		var _textured = new phoenix_Shader({ id : "luxe.shader_textured", frag_id : "textured", vert_id : "default"});
		var _font = new phoenix_Shader({ id : "luxe.shader_bitmapfont", frag_id : "bitmapfont", vert_id : "default"});
		var _ok = true;
		_ok = _plain.from_string(vert,frag);
		if(_ok) {
			_ok = _textured.from_string(vert,frag_textured);
		} else {
			_ok = false;
		}
		if(_ok) {
			_ok = _font.from_string(vert,frag_bitmapfont);
		} else {
			_ok = false;
		}
		if(!_ok) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("_ok" + (" ( " + "Default shaders failed to compile or link. See log for errors" + " )")));
		}
		this.shaders = { plain : { shader : _plain, source : { vert : vert, frag : frag}}, textured : { shader : _textured, source : { vert : vert, frag : frag_textured}}, bitmapfont : { shader : _font, source : { vert : vert, frag : frag_bitmapfont}}};
	}
	,create_default_font: function() {
		if(this.font_asset == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("font_asset was null" + (" ( " + "Renderer / failed to create the default font" + " )")));
		}
		var _font_texture = new phoenix_Texture({ id : "luxe.font.png", width : this.font_asset.image.width_actual, height : this.font_asset.image.height_actual, pixels : this.font_asset.image.pixels});
		if(_font_texture == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_font_texture was null" + (" ( " + "Renderer / failed to create the default font... font_texture was null." + " )")));
		}
		this.font = new phoenix_BitmapFont({ id : "luxe.font", font_data : haxe_Resource.getString("default.fnt"), pages : [_font_texture]});
	}
	,__class__: phoenix_Renderer
	,__properties__: {set_target:"set_target",get_target:"get_target"}
};
var phoenix_RendererStats = function() {
	this.vert_count = 0;
	this.draw_calls = 0;
	this.visible_count = 0;
	this.static_batched_count = 0;
	this.dynamic_batched_count = 0;
	this.geometry_count = 0;
	this.batchers = 0;
};
$hxClasses["phoenix.RendererStats"] = phoenix_RendererStats;
phoenix_RendererStats.__name__ = true;
phoenix_RendererStats.prototype = {
	reset: function() {
		this.geometry_count = 0;
		this.dynamic_batched_count = 0;
		this.static_batched_count = 0;
		this.visible_count = 0;
		this.draw_calls = 0;
		this.vert_count = 0;
	}
	,__class__: phoenix_RendererStats
};
var phoenix_Uniforms = function() {
	this.clear();
};
$hxClasses["phoenix.Uniforms"] = phoenix_Uniforms;
phoenix_Uniforms.__name__ = true;
phoenix_Uniforms.prototype = {
	destroy: function() {
		this.ints = null;
		this.floats = null;
		this.vector2s = null;
		this.vector2arrs = null;
		this.vector3s = null;
		this.vector3arrs = null;
		this.vector4s = null;
		this.vector4arrs = null;
		this.matrix4s = null;
		this.matrix4arrs = null;
		this.colors = null;
		this.textures = null;
		this.dirty_ints = null;
		this.dirty_floats = null;
		this.dirty_vector2s = null;
		this.dirty_vector2arrs = null;
		this.dirty_vector3s = null;
		this.dirty_vector3arrs = null;
		this.dirty_vector4s = null;
		this.dirty_vector4arrs = null;
		this.dirty_matrix4s = null;
		this.dirty_matrix4arrs = null;
		this.dirty_colors = null;
		this.dirty_textures = null;
	}
	,clear: function() {
		this.destroy();
		this.ints = new haxe_ds_StringMap();
		this.floats = new haxe_ds_StringMap();
		this.vector2s = new haxe_ds_StringMap();
		this.vector2arrs = new haxe_ds_StringMap();
		this.vector3s = new haxe_ds_StringMap();
		this.vector3arrs = new haxe_ds_StringMap();
		this.vector4s = new haxe_ds_StringMap();
		this.vector4arrs = new haxe_ds_StringMap();
		this.matrix4s = new haxe_ds_StringMap();
		this.matrix4arrs = new haxe_ds_StringMap();
		this.colors = new haxe_ds_StringMap();
		this.textures = new haxe_ds_StringMap();
		this.dirty_ints = [];
		this.dirty_floats = [];
		this.dirty_vector2s = [];
		this.dirty_vector2arrs = [];
		this.dirty_vector3s = [];
		this.dirty_vector3arrs = [];
		this.dirty_vector4s = [];
		this.dirty_vector4arrs = [];
		this.dirty_matrix4s = [];
		this.dirty_matrix4arrs = [];
		this.dirty_colors = [];
		this.dirty_textures = [];
	}
	,apply: function() {
		while(this.dirty_ints.length > 0) {
			var uf = this.dirty_ints.pop();
			snow_modules_opengl_web_GL.gl.uniform1i(uf.location,uf.value);
		}
		while(this.dirty_floats.length > 0) {
			var uf1 = this.dirty_floats.pop();
			snow_modules_opengl_web_GL.gl.uniform1f(uf1.location,uf1.value);
		}
		while(this.dirty_vector2s.length > 0) {
			var uf2 = this.dirty_vector2s.pop();
			snow_modules_opengl_web_GL.gl.uniform2f(uf2.location,uf2.value.x,uf2.value.y);
		}
		while(this.dirty_vector2arrs.length > 0) {
			var uf3 = this.dirty_vector2arrs.pop();
			snow_modules_opengl_web_GL.gl.uniform2fv(uf3.location,uf3.value);
		}
		while(this.dirty_vector3s.length > 0) {
			var uf4 = this.dirty_vector3s.pop();
			snow_modules_opengl_web_GL.gl.uniform3f(uf4.location,uf4.value.x,uf4.value.y,uf4.value.z);
		}
		while(this.dirty_vector3arrs.length > 0) {
			var uf5 = this.dirty_vector3arrs.pop();
			snow_modules_opengl_web_GL.gl.uniform3fv(uf5.location,uf5.value);
		}
		while(this.dirty_vector4s.length > 0) {
			var uf6 = this.dirty_vector4s.pop();
			snow_modules_opengl_web_GL.gl.uniform4f(uf6.location,uf6.value.x,uf6.value.y,uf6.value.z,uf6.value.w);
		}
		while(this.dirty_vector4arrs.length > 0) {
			var uf7 = this.dirty_vector4arrs.pop();
			snow_modules_opengl_web_GL.gl.uniform4fv(uf7.location,uf7.value);
		}
		while(this.dirty_colors.length > 0) {
			var uf8 = this.dirty_colors.pop();
			snow_modules_opengl_web_GL.gl.uniform4f(uf8.location,uf8.value.r,uf8.value.g,uf8.value.b,uf8.value.a);
		}
		while(this.dirty_textures.length > 0) {
			var uf9 = this.dirty_textures.pop();
			snow_modules_opengl_web_GL.gl.uniform1i(uf9.location,uf9.value.slot);
			uf9.value.bind();
		}
		while(this.dirty_matrix4s.length > 0) {
			var uf10 = this.dirty_matrix4s.pop();
			var location = uf10.location;
			var _this = uf10.value;
			var i = 0;
			while(i < 16) {
				_this._float32array[i] = _this.elements[i];
				++i;
			}
			snow_modules_opengl_web_GL.gl.uniformMatrix4fv(location,false,_this._float32array);
		}
		while(this.dirty_matrix4arrs.length > 0) {
			var uf11 = this.dirty_matrix4arrs.pop();
			snow_modules_opengl_web_GL.gl.uniformMatrix4fv(uf11.location,false,uf11.value);
		}
	}
	,__class__: phoenix_Uniforms
};
var phoenix_Shader = function(_options) {
	this.no_default_uniforms = false;
	this.frag_id = "";
	this.vert_id = "";
	this.log = "";
	if(_options == null) {
		throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options was null"));
	}
	_options.resource_type = 7;
	luxe_resource_Resource.call(this,_options);
	this.frag_id = _options.frag_id;
	this.vert_id = _options.vert_id;
	if(_options.no_default_uniforms == null) {
		_options.no_default_uniforms = false;
	}
	this.no_default_uniforms = _options.no_default_uniforms;
	this.uniforms = new phoenix_Uniforms();
};
$hxClasses["phoenix.Shader"] = phoenix_Shader;
phoenix_Shader.__name__ = true;
phoenix_Shader.__super__ = luxe_resource_Resource;
phoenix_Shader.prototype = $extend(luxe_resource_Resource.prototype,{
	'use': function() {
		if(this.program != null) {
			Luxe.renderer.state.useProgram(this.program);
		}
	}
	,compile: function(_type,_source) {
		var _shader = snow_modules_opengl_web_GL.gl.createShader(_type);
		snow_modules_opengl_web_GL.gl.shaderSource(_shader,_source);
		snow_modules_opengl_web_GL.gl.compileShader(_shader);
		var _compile_log = snow_modules_opengl_web_GL.gl.getShaderInfoLog(_shader);
		var _log = "";
		if(_compile_log.length > 0) {
			var _is_frag = _type == 35632;
			_log = "" + ("\n\t// start -- (" + (_is_frag ? "frag" : "vert") + " / " + (_is_frag ? this.frag_id : this.vert_id) + ") compile log --\n");
			var _items = _compile_log.split("\n");
			_items = _items.filter(function(s) {
				return StringTools.trim(s) != "";
			});
			_items = _items.map(function(s1) {
				return "\t\t" + StringTools.trim(s1);
			});
			_log += _items.join("\n");
			_log += "\n\t// end --\n";
		}
		if(snow_modules_opengl_web_GL.gl.getShaderParameter(_shader,35713) == 0) {
			this.log += "\tFailed to compile shader `" + this.id + "`:\n";
			var _log1;
			if(_log.length == 0) {
				var _items1 = snow_modules_opengl_web_GL.gl.getShaderInfoLog(_shader).split("\n");
				_items1 = _items1.filter(function(s2) {
					return StringTools.trim(s2) != "";
				});
				_items1 = _items1.map(function(s3) {
					return "\t\t" + StringTools.trim(s3);
				});
				_log1 = _items1.join("\n");
			} else {
				_log1 = _log;
			}
			this.log += _log1;
			snow_modules_opengl_web_GL.gl.deleteShader(_shader);
			return null;
		}
		return _shader;
	}
	,link: function() {
		this.program = snow_modules_opengl_web_GL.gl.createProgram();
		snow_modules_opengl_web_GL.gl.attachShader(this.program,this.vert_shader);
		snow_modules_opengl_web_GL.gl.attachShader(this.program,this.frag_shader);
		snow_modules_opengl_web_GL.gl.bindAttribLocation(this.program,0,"vertexPosition");
		snow_modules_opengl_web_GL.gl.bindAttribLocation(this.program,1,"vertexTCoord");
		snow_modules_opengl_web_GL.gl.bindAttribLocation(this.program,2,"vertexColor");
		snow_modules_opengl_web_GL.gl.bindAttribLocation(this.program,3,"vertexNormal");
		snow_modules_opengl_web_GL.gl.linkProgram(this.program);
		if(snow_modules_opengl_web_GL.gl.getProgramParameter(this.program,35714) == 0) {
			this.log += "\tFailed to link shader program:";
			var _items = snow_modules_opengl_web_GL.gl.getProgramInfoLog(this.program).split("\n");
			_items = _items.filter(function(s) {
				return StringTools.trim(s) != "";
			});
			_items = _items.map(function(s1) {
				return "\t\t" + StringTools.trim(s1);
			});
			var _log = _items.join("\n");
			this.log += _log;
			snow_modules_opengl_web_GL.gl.deleteProgram(this.program);
			this.program = null;
			return false;
		}
		this["use"]();
		if(!this.no_default_uniforms) {
			this.proj_attribute = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,"projectionMatrix");
			this.view_attribute = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,"modelViewMatrix");
			var _tex0_attribute = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,"tex0");
			var _tex1_attribute = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,"tex1");
			var _tex2_attribute = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,"tex2");
			var _tex3_attribute = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,"tex3");
			var _tex4_attribute = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,"tex4");
			var _tex5_attribute = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,"tex5");
			var _tex6_attribute = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,"tex6");
			var _tex7_attribute = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,"tex7");
			if(_tex0_attribute != null) {
				snow_modules_opengl_web_GL.gl.uniform1i(_tex0_attribute,0);
			}
			if(_tex1_attribute != null) {
				snow_modules_opengl_web_GL.gl.uniform1i(_tex1_attribute,1);
			}
			if(_tex2_attribute != null) {
				snow_modules_opengl_web_GL.gl.uniform1i(_tex2_attribute,2);
			}
			if(_tex3_attribute != null) {
				snow_modules_opengl_web_GL.gl.uniform1i(_tex3_attribute,3);
			}
			if(_tex4_attribute != null) {
				snow_modules_opengl_web_GL.gl.uniform1i(_tex4_attribute,4);
			}
			if(_tex5_attribute != null) {
				snow_modules_opengl_web_GL.gl.uniform1i(_tex5_attribute,5);
			}
			if(_tex6_attribute != null) {
				snow_modules_opengl_web_GL.gl.uniform1i(_tex6_attribute,6);
			}
			if(_tex7_attribute != null) {
				snow_modules_opengl_web_GL.gl.uniform1i(_tex7_attribute,7);
			}
		}
		return true;
	}
	,clear: function() {
		if(this.vert_shader != null) {
			snow_modules_opengl_web_GL.gl.deleteShader(this.vert_shader);
		}
		if(this.frag_shader != null) {
			snow_modules_opengl_web_GL.gl.deleteShader(this.frag_shader);
		}
		if(this.program != null) {
			snow_modules_opengl_web_GL.gl.deleteProgram(this.program);
		}
		this.vert_source = null;
		this.frag_source = null;
		this.uniforms.clear();
	}
	,reload: function() {
		var _gthis = this;
		if(this.state == 6) {
			throw new js__$Boot_HaxeError(luxe_DebugError.assertion("state != ResourceState.destroyed"));
		}
		this.clear();
		return new snow_api_Promise(function(resolve,reject) {
			_gthis.set_state(2);
			switch(_gthis.frag_id) {
			case "default":
				_gthis.frag_source = Luxe.renderer.shaders.plain.source.frag;
				break;
			case "textured":
				_gthis.frag_source = Luxe.renderer.shaders.textured.source.frag;
				break;
			}
			if(_gthis.vert_id == "default") {
				_gthis.vert_source = Luxe.renderer.shaders.plain.source.vert;
			}
			var _onfail = function(_err) {
				_gthis.set_state(4);
				reject(_err);
			};
			var _wait = [snow_api_Promise.resolve()];
			if(_gthis.frag_source == null) {
				var _frag = snow_systems_assets_AssetText.load(Luxe.core.app.assets,_gthis.frag_id);
				_frag.then(function(_asset) {
					_gthis.frag_source = _asset.text;
				});
				_wait.push(_frag);
			}
			if(_gthis.vert_source == null) {
				var _vert = snow_systems_assets_AssetText.load(Luxe.core.app.assets,_gthis.vert_id);
				_vert.then(function(_asset1) {
					_gthis.vert_source = _asset1.text;
				});
				_wait.push(_vert);
			}
			snow_api_Promise.all(_wait).then(function() {
				if(_gthis.from_string(_gthis.vert_source,_gthis.frag_source)) {
					_gthis.set_state(3);
					resolve(_gthis);
				} else {
					_onfail(snow_types_Error.error("`" + _gthis.id + "` failed to create :\n\n" + _gthis.log));
				}
			}).error(function(err) {
				_onfail(snow_types_Error.error("`" + _gthis.id + "` failed to create :\n\t\t" + err + "\n"));
			});
		});
	}
	,from_string: function(_vert_source,_fragment_source) {
		var _gthis = this;
		this.clear();
		this.frag_source = _fragment_source;
		this.vert_source = _vert_source;
		this.vert_shader = this.compile(35633,this.vert_source);
		this.frag_shader = this.compile(35632,this.frag_source);
		if(this.vert_shader == null || this.frag_shader == null) {
			if(_gthis.log.length > 0) {
				haxe_Log.trace("   i / shader / " + _gthis.log,{ fileName : "Shader.hx", lineNumber : 680, className : "phoenix.Shader", methodName : "from_string"});
			}
			return false;
		}
		if(!this.link()) {
			if(_gthis.log.length > 0) {
				haxe_Log.trace("   i / shader / " + _gthis.log,{ fileName : "Shader.hx", lineNumber : 680, className : "phoenix.Shader", methodName : "from_string"});
			}
			return false;
		}
		return true;
	}
	,__class__: phoenix_Shader
});
var phoenix_Transform = function() {
	this._destroying = false;
	this._cleaning = false;
	this._setup = true;
	this.manual_update = false;
	this.dirty = true;
	luxe_ID.call(this,"transform");
	var l = new phoenix_Spatial();
	if(l != null) {
		this.dirty = true;
		if(this.dirty && !this._setup && this._dirty_handlers != null && this._dirty_handlers.length > 0) {
			var _g = 0;
			var _g1 = this._dirty_handlers;
			while(_g < _g1.length) {
				var _handler = _g1[_g];
				++_g;
				if(_handler != null) {
					_handler(this);
				}
			}
		}
		l.pos_changed = $bind(this,this.on_local_pos_change);
		l.rotation_changed = $bind(this,this.on_local_rotation_change);
		l.scale_changed = $bind(this,this.on_local_scale_change);
	}
	this.local = l;
	var w = new phoenix_Spatial();
	if(w == null) {
		this.world = w;
	} else {
		this.dirty = true;
		if(this.dirty && !this._setup && this._dirty_handlers != null && this._dirty_handlers.length > 0) {
			var _g2 = 0;
			var _g11 = this._dirty_handlers;
			while(_g2 < _g11.length) {
				var _handler1 = _g11[_g2];
				++_g2;
				if(_handler1 != null) {
					_handler1(this);
				}
			}
		}
		this.world = w;
	}
	this._origin_undo_matrix = new phoenix_Matrix();
	this._pos_matrix = new phoenix_Matrix();
	this._rotation_matrix = new phoenix_Matrix();
	var o = new phoenix_Vector();
	this.dirty = true;
	if(this.dirty && !this._setup && this._dirty_handlers != null && this._dirty_handlers.length > 0) {
		var _g3 = 0;
		var _g12 = this._dirty_handlers;
		while(_g3 < _g12.length) {
			var _handler2 = _g12[_g3];
			++_g3;
			if(_handler2 != null) {
				_handler2(this);
			}
		}
	}
	this.origin = o;
	if(this._origin_handlers != null && this._origin_handlers.length > 0) {
		var _origin = this.origin;
		var _g4 = 0;
		var _g13 = this._origin_handlers;
		while(_g4 < _g13.length) {
			var _handler3 = _g13[_g4];
			++_g4;
			if(_handler3 != null) {
				_handler3(_origin);
			}
		}
	}
	this.local.pos_changed = $bind(this,this.on_local_pos_change);
	this.local.rotation_changed = $bind(this,this.on_local_rotation_change);
	this.local.scale_changed = $bind(this,this.on_local_scale_change);
	this._setup = false;
};
$hxClasses["phoenix.Transform"] = phoenix_Transform;
phoenix_Transform.__name__ = true;
phoenix_Transform.__super__ = luxe_ID;
phoenix_Transform.prototype = $extend(luxe_ID.prototype,{
	destroy: function() {
		this._destroying = true;
		if(this.parent != null) {
			var _this = this.parent;
			if(_this._clean_handlers != null) {
				HxOverrides.remove(_this._clean_handlers,$bind(this,this.on_parent_cleaned));
			}
		}
		this._clean_handlers = null;
		this._dirty_handlers = null;
		this._pos_handlers = null;
		this._rotation_handlers = null;
		this._scale_handlers = null;
		this._origin_handlers = null;
		this._parent_handlers = null;
		var _this1 = this.local;
		_this1.matrix = null;
		_this1.floats = null;
		_this1.pos = null;
		_this1.rotation = null;
		_this1.scale = null;
		if(!this._destroying) {
			if(this.parent != null && this.parent.dirty) {
				this.parent.clean_check();
			}
			if(this.dirty && !this._cleaning && !this.manual_update) {
				this.clean();
			}
		}
		var _this2 = this.world;
		_this2.matrix = null;
		_this2.floats = null;
		_this2.pos = null;
		_this2.rotation = null;
		_this2.scale = null;
		this.local = null;
		this.world = null;
		this.dirty = true;
		if(this.dirty && !this._setup && this._dirty_handlers != null && this._dirty_handlers.length > 0) {
			var _g = 0;
			var _g1 = this._dirty_handlers;
			while(_g < _g1.length) {
				var _handler = _g1[_g];
				++_g;
				if(_handler != null) {
					_handler(this);
				}
			}
		}
		this.origin = null;
		if(this._origin_handlers != null && this._origin_handlers.length > 0) {
			var _origin = this.origin;
			var _g2 = 0;
			var _g11 = this._origin_handlers;
			while(_g2 < _g11.length) {
				var _handler1 = _g11[_g2];
				++_g2;
				if(_handler1 != null) {
					_handler1(_origin);
				}
			}
		}
		this._origin_undo_matrix = null;
		this._pos_matrix = null;
		this._rotation_matrix = null;
	}
	,on_local_pos_change: function(v) {
		this.dirty = true;
		if(this.dirty && !this._setup && this._dirty_handlers != null && this._dirty_handlers.length > 0) {
			var _g = 0;
			var _g1 = this._dirty_handlers;
			while(_g < _g1.length) {
				var _handler = _g1[_g];
				++_g;
				if(_handler != null) {
					_handler(this);
				}
			}
		}
		if(this._pos_handlers != null && this._pos_handlers.length > 0) {
			var _g2 = 0;
			var _g11 = this._pos_handlers;
			while(_g2 < _g11.length) {
				var _handler1 = _g11[_g2];
				++_g2;
				if(_handler1 != null) {
					_handler1(v);
				}
			}
		}
	}
	,on_local_rotation_change: function(r) {
		this.dirty = true;
		if(this.dirty && !this._setup && this._dirty_handlers != null && this._dirty_handlers.length > 0) {
			var _g = 0;
			var _g1 = this._dirty_handlers;
			while(_g < _g1.length) {
				var _handler = _g1[_g];
				++_g;
				if(_handler != null) {
					_handler(this);
				}
			}
		}
		if(this._rotation_handlers != null && this._rotation_handlers.length > 0) {
			var _g2 = 0;
			var _g11 = this._rotation_handlers;
			while(_g2 < _g11.length) {
				var _handler1 = _g11[_g2];
				++_g2;
				if(_handler1 != null) {
					_handler1(r);
				}
			}
		}
	}
	,on_local_scale_change: function(s) {
		this.dirty = true;
		if(this.dirty && !this._setup && this._dirty_handlers != null && this._dirty_handlers.length > 0) {
			var _g = 0;
			var _g1 = this._dirty_handlers;
			while(_g < _g1.length) {
				var _handler = _g1[_g];
				++_g;
				if(_handler != null) {
					_handler(this);
				}
			}
		}
		if(this._scale_handlers != null && this._scale_handlers.length > 0) {
			var _g2 = 0;
			var _g11 = this._scale_handlers;
			while(_g2 < _g11.length) {
				var _handler1 = _g11[_g2];
				++_g2;
				if(_handler1 != null) {
					_handler1(s);
				}
			}
		}
	}
	,on_parent_cleaned: function(p) {
		this.dirty = true;
		if(this.dirty && !this._setup && this._dirty_handlers != null && this._dirty_handlers.length > 0) {
			var _g = 0;
			var _g1 = this._dirty_handlers;
			while(_g < _g1.length) {
				var _handler = _g1[_g];
				++_g;
				if(_handler != null) {
					_handler(this);
				}
			}
		}
	}
	,get_world: function() {
		if(!this._destroying) {
			if(this.parent != null && this.parent.dirty) {
				this.parent.clean_check();
			}
			if(this.dirty && !this._cleaning && !this.manual_update) {
				this.clean();
			}
		}
		return this.world;
	}
	,clean_check: function() {
		if(this.parent != null && this.parent.dirty) {
			this.parent.clean_check();
		}
		if(this.dirty && !this._cleaning && !this.manual_update) {
			this.clean();
		}
	}
	,clean: function() {
		if(!this.dirty) {
			return;
		}
		this._cleaning = true;
		var e = this._pos_matrix.elements;
		e[0] = 1;
		e[4] = 0;
		e[8] = 0;
		e[12] = this.local.pos.x;
		e[1] = 0;
		e[5] = 1;
		e[9] = 0;
		e[13] = this.local.pos.y;
		e[2] = 0;
		e[6] = 0;
		e[10] = 1;
		e[14] = this.local.pos.z;
		e[3] = 0;
		e[7] = 0;
		e[11] = 0;
		e[15] = 1;
		var q = this.local.rotation;
		var te = this._rotation_matrix.elements;
		var x2 = q.x + q.x;
		var y2 = q.y + q.y;
		var z2 = q.z + q.z;
		var xx = q.x * x2;
		var xy = q.x * y2;
		var xz = q.x * z2;
		var yy = q.y * y2;
		var yz = q.y * z2;
		var zz = q.z * z2;
		var wx = q.w * x2;
		var wy = q.w * y2;
		var wz = q.w * z2;
		te[0] = 1 - (yy + zz);
		te[4] = xy - wz;
		te[8] = xz + wy;
		te[1] = xy + wz;
		te[5] = 1 - (xx + zz);
		te[9] = yz - wx;
		te[2] = xz - wy;
		te[6] = yz + wx;
		te[10] = 1 - (xx + yy);
		te[3] = 0;
		te[7] = 0;
		te[11] = 0;
		te[12] = 0;
		te[13] = 0;
		te[14] = 0;
		te[15] = 1;
		var e1 = this._origin_undo_matrix.elements;
		e1[0] = 1;
		e1[4] = 0;
		e1[8] = 0;
		e1[12] = -this.origin.x;
		e1[1] = 0;
		e1[5] = 1;
		e1[9] = 0;
		e1[13] = -this.origin.y;
		e1[2] = 0;
		e1[6] = 0;
		e1[10] = 1;
		e1[14] = -this.origin.z;
		e1[3] = 0;
		e1[7] = 0;
		e1[11] = 0;
		e1[15] = 1;
		var e2 = this.local.matrix.elements;
		e2[0] = 1;
		e2[4] = 0;
		e2[8] = 0;
		e2[12] = this.origin.x;
		e2[1] = 0;
		e2[5] = 1;
		e2[9] = 0;
		e2[13] = this.origin.y;
		e2[2] = 0;
		e2[6] = 0;
		e2[10] = 1;
		e2[14] = this.origin.z;
		e2[3] = 0;
		e2[7] = 0;
		e2[11] = 0;
		e2[15] = 1;
		var _this = this.local.matrix;
		var ae = _this.elements;
		var be = this._rotation_matrix.elements;
		var te1 = _this.elements;
		var a11 = ae[0];
		var a12 = ae[4];
		var a13 = ae[8];
		var a14 = ae[12];
		var a21 = ae[1];
		var a22 = ae[5];
		var a23 = ae[9];
		var a24 = ae[13];
		var a31 = ae[2];
		var a32 = ae[6];
		var a33 = ae[10];
		var a34 = ae[14];
		var a41 = ae[3];
		var a42 = ae[7];
		var a43 = ae[11];
		var a44 = ae[15];
		var b11 = be[0];
		var b12 = be[4];
		var b13 = be[8];
		var b14 = be[12];
		var b21 = be[1];
		var b22 = be[5];
		var b23 = be[9];
		var b24 = be[13];
		var b31 = be[2];
		var b32 = be[6];
		var b33 = be[10];
		var b34 = be[14];
		var b41 = be[3];
		var b42 = be[7];
		var b43 = be[11];
		var b44 = be[15];
		te1[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;
		te1[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;
		te1[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;
		te1[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;
		te1[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;
		te1[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;
		te1[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;
		te1[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;
		te1[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;
		te1[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;
		te1[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;
		te1[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;
		te1[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;
		te1[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;
		te1[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;
		te1[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;
		var _v = this.local.scale;
		var te2 = this.local.matrix.elements;
		var _x = _v.x;
		var _y = _v.y;
		var _z = _v.z;
		te2[0] *= _x;
		te2[4] *= _y;
		te2[8] *= _z;
		te2[1] *= _x;
		te2[5] *= _y;
		te2[9] *= _z;
		te2[2] *= _x;
		te2[6] *= _y;
		te2[10] *= _z;
		te2[3] *= _x;
		te2[7] *= _y;
		te2[11] *= _z;
		var _v1 = this.local.pos;
		var te3 = this.local.matrix.elements;
		te3[12] = _v1.x;
		te3[13] = _v1.y;
		te3[14] = _v1.z;
		var _this1 = this.local.matrix;
		var ae1 = _this1.elements;
		var be1 = this._origin_undo_matrix.elements;
		var te4 = _this1.elements;
		var a111 = ae1[0];
		var a121 = ae1[4];
		var a131 = ae1[8];
		var a141 = ae1[12];
		var a211 = ae1[1];
		var a221 = ae1[5];
		var a231 = ae1[9];
		var a241 = ae1[13];
		var a311 = ae1[2];
		var a321 = ae1[6];
		var a331 = ae1[10];
		var a341 = ae1[14];
		var a411 = ae1[3];
		var a421 = ae1[7];
		var a431 = ae1[11];
		var a441 = ae1[15];
		var b111 = be1[0];
		var b121 = be1[4];
		var b131 = be1[8];
		var b141 = be1[12];
		var b211 = be1[1];
		var b221 = be1[5];
		var b231 = be1[9];
		var b241 = be1[13];
		var b311 = be1[2];
		var b321 = be1[6];
		var b331 = be1[10];
		var b341 = be1[14];
		var b411 = be1[3];
		var b421 = be1[7];
		var b431 = be1[11];
		var b441 = be1[15];
		te4[0] = a111 * b111 + a121 * b211 + a131 * b311 + a141 * b411;
		te4[4] = a111 * b121 + a121 * b221 + a131 * b321 + a141 * b421;
		te4[8] = a111 * b131 + a121 * b231 + a131 * b331 + a141 * b431;
		te4[12] = a111 * b141 + a121 * b241 + a131 * b341 + a141 * b441;
		te4[1] = a211 * b111 + a221 * b211 + a231 * b311 + a241 * b411;
		te4[5] = a211 * b121 + a221 * b221 + a231 * b321 + a241 * b421;
		te4[9] = a211 * b131 + a221 * b231 + a231 * b331 + a241 * b431;
		te4[13] = a211 * b141 + a221 * b241 + a231 * b341 + a241 * b441;
		te4[2] = a311 * b111 + a321 * b211 + a331 * b311 + a341 * b411;
		te4[6] = a311 * b121 + a321 * b221 + a331 * b321 + a341 * b421;
		te4[10] = a311 * b131 + a321 * b231 + a331 * b331 + a341 * b431;
		te4[14] = a311 * b141 + a321 * b241 + a331 * b341 + a341 * b441;
		te4[3] = a411 * b111 + a421 * b211 + a431 * b311 + a441 * b411;
		te4[7] = a411 * b121 + a421 * b221 + a431 * b321 + a441 * b421;
		te4[11] = a411 * b131 + a421 * b231 + a431 * b331 + a441 * b431;
		te4[15] = a411 * b141 + a421 * b241 + a431 * b341 + a441 * b441;
		if(this.parent != null) {
			var _this2 = this.get_world();
			var _this3 = this.get_world().matrix;
			var ae2 = this.parent.get_world().matrix.elements;
			var be2 = this.local.matrix.elements;
			var te5 = _this3.elements;
			var a112 = ae2[0];
			var a122 = ae2[4];
			var a132 = ae2[8];
			var a142 = ae2[12];
			var a212 = ae2[1];
			var a222 = ae2[5];
			var a232 = ae2[9];
			var a242 = ae2[13];
			var a312 = ae2[2];
			var a322 = ae2[6];
			var a332 = ae2[10];
			var a342 = ae2[14];
			var a412 = ae2[3];
			var a422 = ae2[7];
			var a432 = ae2[11];
			var a442 = ae2[15];
			var b112 = be2[0];
			var b122 = be2[4];
			var b132 = be2[8];
			var b142 = be2[12];
			var b212 = be2[1];
			var b222 = be2[5];
			var b232 = be2[9];
			var b242 = be2[13];
			var b312 = be2[2];
			var b322 = be2[6];
			var b332 = be2[10];
			var b342 = be2[14];
			var b412 = be2[3];
			var b422 = be2[7];
			var b432 = be2[11];
			var b442 = be2[15];
			te5[0] = a112 * b112 + a122 * b212 + a132 * b312 + a142 * b412;
			te5[4] = a112 * b122 + a122 * b222 + a132 * b322 + a142 * b422;
			te5[8] = a112 * b132 + a122 * b232 + a132 * b332 + a142 * b432;
			te5[12] = a112 * b142 + a122 * b242 + a132 * b342 + a142 * b442;
			te5[1] = a212 * b112 + a222 * b212 + a232 * b312 + a242 * b412;
			te5[5] = a212 * b122 + a222 * b222 + a232 * b322 + a242 * b422;
			te5[9] = a212 * b132 + a222 * b232 + a232 * b332 + a242 * b432;
			te5[13] = a212 * b142 + a222 * b242 + a232 * b342 + a242 * b442;
			te5[2] = a312 * b112 + a322 * b212 + a332 * b312 + a342 * b412;
			te5[6] = a312 * b122 + a322 * b222 + a332 * b322 + a342 * b422;
			te5[10] = a312 * b132 + a322 * b232 + a332 * b332 + a342 * b432;
			te5[14] = a312 * b142 + a322 * b242 + a332 * b342 + a342 * b442;
			te5[3] = a412 * b112 + a422 * b212 + a432 * b312 + a442 * b412;
			te5[7] = a412 * b122 + a422 * b222 + a432 * b322 + a442 * b422;
			te5[11] = a412 * b132 + a422 * b232 + a432 * b332 + a442 * b432;
			te5[15] = a412 * b142 + a422 * b242 + a432 * b342 + a442 * b442;
			_this2.matrix = _this3;
			if(_this3 != null) {
				var _this4 = _this2.matrix;
				var i = 0;
				while(i < 16) {
					_this4._float32array[i] = _this4.elements[i];
					++i;
				}
				_this2.floats = _this4._float32array;
			}
		} else {
			var _this5 = this.get_world().matrix;
			var me = this.local.matrix.elements;
			var e3 = _this5.elements;
			e3[0] = me[0];
			e3[4] = me[4];
			e3[8] = me[8];
			e3[12] = me[12];
			e3[1] = me[1];
			e3[5] = me[5];
			e3[9] = me[9];
			e3[13] = me[13];
			e3[2] = me[2];
			e3[6] = me[6];
			e3[10] = me[10];
			e3[14] = me[14];
			e3[3] = me[3];
			e3[7] = me[7];
			e3[11] = me[11];
			e3[15] = me[15];
		}
		var _this6 = this.get_world();
		if(_this6.auto_decompose) {
			var _this7 = _this6.matrix;
			var _position = null;
			var _quaternion = null;
			var _scale = null;
			var te6 = _this7.elements;
			var matrix = new phoenix_Matrix();
			var _ax_x = te6[0];
			var _ax_y = te6[1];
			var _ax_z = te6[2];
			var _ay_x = te6[4];
			var _ay_y = te6[5];
			var _ay_z = te6[6];
			var _az_x = te6[8];
			var _az_y = te6[9];
			var _az_z = te6[10];
			var _ax_length = Math.sqrt(_ax_x * _ax_x + _ax_y * _ax_y + _ax_z * _ax_z);
			var _ay_length = Math.sqrt(_ay_x * _ay_x + _ay_y * _ay_y + _ay_z * _ay_z);
			var _az_length = Math.sqrt(_az_x * _az_x + _az_y * _az_y + _az_z * _az_z);
			if(_quaternion == null) {
				_quaternion = new phoenix_Quaternion();
			}
			if(_position == null) {
				_position = new phoenix_Vector(te6[12],te6[13],te6[14]);
			} else {
				var _x1 = te6[12];
				_position.x = _x1;
				if(!_position._construct) {
					if(_position.listen_x != null && !_position.ignore_listeners) {
						_position.listen_x(_x1);
					}
				}
				var _y1 = te6[13];
				_position.y = _y1;
				if(!_position._construct) {
					if(_position.listen_y != null && !_position.ignore_listeners) {
						_position.listen_y(_y1);
					}
				}
				var _z1 = te6[14];
				_position.z = _z1;
				if(!_position._construct) {
					if(_position.listen_z != null && !_position.ignore_listeners) {
						_position.listen_z(_z1);
					}
				}
			}
			if(_scale == null) {
				_scale = new phoenix_Vector(_ax_length,_ay_length,_az_length);
			} else {
				_scale.x = _ax_length;
				if(!_scale._construct) {
					if(_scale.listen_x != null && !_scale.ignore_listeners) {
						_scale.listen_x(_ax_length);
					}
				}
				_scale.y = _ay_length;
				if(!_scale._construct) {
					if(_scale.listen_y != null && !_scale.ignore_listeners) {
						_scale.listen_y(_ay_length);
					}
				}
				_scale.z = _az_length;
				if(!_scale._construct) {
					if(_scale.listen_z != null && !_scale.ignore_listeners) {
						_scale.listen_z(_az_length);
					}
				}
			}
			matrix.elements = _this7.elements.concat([]);
			var me1 = matrix.elements;
			me1[0] /= _ax_length;
			me1[1] /= _ax_length;
			me1[2] /= _ax_length;
			me1[4] /= _ay_length;
			me1[5] /= _ay_length;
			me1[6] /= _ay_length;
			me1[8] /= _az_length;
			me1[9] /= _az_length;
			me1[10] /= _az_length;
			_quaternion.setFromRotationMatrix(matrix);
			if(_this7._transform == null) {
				_this7._transform = new phoenix_MatrixTransform(_position,_quaternion,_scale);
			} else {
				_this7._transform.pos = _position;
				_this7._transform.rotation = _quaternion;
				_this7._transform.scale = _scale;
			}
			var _transform = _this7._transform;
			var _p = _transform.pos;
			_this6.pos = _p;
			if(_p != null) {
				var _v2 = _this6.pos;
				var listener = $bind(_this6,_this6._pos_change);
				_v2.listen_x = listener;
				_v2.listen_y = listener;
				_v2.listen_z = listener;
				if(_this6.pos_changed != null && !_this6.ignore_listeners) {
					_this6.pos_changed(_this6.pos);
				}
			}
			var _r = _transform.rotation;
			_this6.rotation = _r;
			if(_r != null) {
				var _q = _this6.rotation;
				var listener1 = $bind(_this6,_this6._rotation_change);
				_q.listen_x = listener1;
				_q.listen_y = listener1;
				_q.listen_z = listener1;
				_q.listen_w = listener1;
				if(_this6.rotation_changed != null && !_this6.ignore_listeners) {
					_this6.rotation_changed(_this6.rotation);
				}
			}
			var _s = _transform.scale;
			_this6.scale = _s;
			if(_s != null) {
				var _v3 = _this6.scale;
				var listener2 = $bind(_this6,_this6._scale_change);
				_v3.listen_x = listener2;
				_v3.listen_y = listener2;
				_v3.listen_z = listener2;
				if(_this6.scale_changed != null && !_this6.ignore_listeners) {
					_this6.scale_changed(_this6.scale);
				}
			}
		}
		this.dirty = false;
		if(this.dirty && !this._setup && this._dirty_handlers != null && this._dirty_handlers.length > 0) {
			var _g = 0;
			var _g1 = this._dirty_handlers;
			while(_g < _g1.length) {
				var _handler = _g1[_g];
				++_g;
				if(_handler != null) {
					_handler(this);
				}
			}
		}
		this._cleaning = false;
		if(this._clean_handlers != null && this._clean_handlers.length > 0) {
			var _g2 = 0;
			var _g11 = this._clean_handlers;
			while(_g2 < _g11.length) {
				var _handler1 = _g11[_g2];
				++_g2;
				if(_handler1 != null) {
					_handler1(this);
				}
			}
		}
	}
	,__class__: phoenix_Transform
	,__properties__: {get_world:"get_world"}
});
var phoenix_Spatial = function() {
	this._setup = true;
	this.auto_decompose = false;
	this.ignore_listeners = false;
	var _m = new phoenix_Matrix();
	this.matrix = _m;
	if(_m != null) {
		var _this = this.matrix;
		var i = 0;
		while(i < 16) {
			_this._float32array[i] = _this.elements[i];
			++i;
		}
		this.floats = _this._float32array;
	}
	var _this1 = this.matrix;
	var i1 = 0;
	while(i1 < 16) {
		_this1._float32array[i1] = _this1.elements[i1];
		++i1;
	}
	this.floats = _this1._float32array;
	var _p = new phoenix_Vector();
	this.pos = _p;
	if(_p != null) {
		var _v = this.pos;
		var listener = $bind(this,this._pos_change);
		_v.listen_x = listener;
		_v.listen_y = listener;
		_v.listen_z = listener;
		if(this.pos_changed != null && !this.ignore_listeners) {
			this.pos_changed(this.pos);
		}
	}
	var _r = new phoenix_Quaternion();
	this.rotation = _r;
	if(_r != null) {
		var _q = this.rotation;
		var listener1 = $bind(this,this._rotation_change);
		_q.listen_x = listener1;
		_q.listen_y = listener1;
		_q.listen_z = listener1;
		_q.listen_w = listener1;
		if(this.rotation_changed != null && !this.ignore_listeners) {
			this.rotation_changed(this.rotation);
		}
	}
	var _s = new phoenix_Vector(1,1,1);
	this.scale = _s;
	if(_s != null) {
		var _v1 = this.scale;
		var listener2 = $bind(this,this._scale_change);
		_v1.listen_x = listener2;
		_v1.listen_y = listener2;
		_v1.listen_z = listener2;
		if(this.scale_changed != null && !this.ignore_listeners) {
			this.scale_changed(this.scale);
		}
	}
	this._setup = false;
};
$hxClasses["phoenix.Spatial"] = phoenix_Spatial;
phoenix_Spatial.__name__ = true;
phoenix_Spatial.prototype = {
	set_pos: function(_p) {
		this.pos = _p;
		if(_p != null) {
			var _v = this.pos;
			var listener = $bind(this,this._pos_change);
			_v.listen_x = listener;
			_v.listen_y = listener;
			_v.listen_z = listener;
			if(this.pos_changed != null && !this.ignore_listeners) {
				this.pos_changed(this.pos);
			}
		}
		return this.pos;
	}
	,set_rotation: function(_r) {
		this.rotation = _r;
		if(_r != null) {
			var _q = this.rotation;
			var listener = $bind(this,this._rotation_change);
			_q.listen_x = listener;
			_q.listen_y = listener;
			_q.listen_z = listener;
			_q.listen_w = listener;
			if(this.rotation_changed != null && !this.ignore_listeners) {
				this.rotation_changed(this.rotation);
			}
		}
		return this.rotation;
	}
	,set_scale: function(_s) {
		this.scale = _s;
		if(_s != null) {
			var _v = this.scale;
			var listener = $bind(this,this._scale_change);
			_v.listen_x = listener;
			_v.listen_y = listener;
			_v.listen_z = listener;
			if(this.scale_changed != null && !this.ignore_listeners) {
				this.scale_changed(this.scale);
			}
		}
		return this.scale;
	}
	,_pos_change: function(_v) {
		this.set_pos(this.pos);
	}
	,_scale_change: function(_v) {
		this.set_scale(this.scale);
	}
	,_rotation_change: function(_v) {
		this.set_rotation(this.rotation);
	}
	,__class__: phoenix_Spatial
	,__properties__: {set_scale:"set_scale",set_rotation:"set_rotation",set_pos:"set_pos"}
};
var phoenix_Vector = function(_x,_y,_z,_w) {
	if(_w == null) {
		_w = 0;
	}
	if(_z == null) {
		_z = 0;
	}
	if(_y == null) {
		_y = 0;
	}
	if(_x == null) {
		_x = 0;
	}
	this._construct = false;
	this.ignore_listeners = false;
	this.w = 0;
	this.z = 0;
	this.y = 0;
	this.x = 0;
	this._construct = true;
	this.x = _x;
	if(!this._construct) {
		if(this.listen_x != null && !this.ignore_listeners) {
			this.listen_x(_x);
		}
	}
	this.y = _y;
	if(!this._construct) {
		if(this.listen_y != null && !this.ignore_listeners) {
			this.listen_y(_y);
		}
	}
	this.z = _z;
	if(!this._construct) {
		if(this.listen_z != null && !this.ignore_listeners) {
			this.listen_z(_z);
		}
	}
	this.w = _w;
	this._construct = false;
};
$hxClasses["phoenix.Vector"] = phoenix_Vector;
phoenix_Vector.__name__ = true;
phoenix_Vector.prototype = {
	__class__: phoenix_Vector
};
var phoenix__$Shader_Uniform_$Float = function(_name,_value,_location) {
	this.name = _name;
	this.value = _value;
	this.location = _location;
};
$hxClasses["phoenix._Shader.Uniform_Float"] = phoenix__$Shader_Uniform_$Float;
phoenix__$Shader_Uniform_$Float.__name__ = true;
phoenix__$Shader_Uniform_$Float.prototype = {
	__class__: phoenix__$Shader_Uniform_$Float
};
var phoenix__$Shader_Uniform_$Int = function() { };
$hxClasses["phoenix._Shader.Uniform_Int"] = phoenix__$Shader_Uniform_$Int;
phoenix__$Shader_Uniform_$Int.__name__ = true;
phoenix__$Shader_Uniform_$Int.prototype = {
	__class__: phoenix__$Shader_Uniform_$Int
};
var phoenix__$Shader_Uniform_$phoenix_$Color = function(_name,_value,_location) {
	this.name = _name;
	this.value = _value;
	this.location = _location;
};
$hxClasses["phoenix._Shader.Uniform_phoenix_Color"] = phoenix__$Shader_Uniform_$phoenix_$Color;
phoenix__$Shader_Uniform_$phoenix_$Color.__name__ = true;
phoenix__$Shader_Uniform_$phoenix_$Color.prototype = {
	__class__: phoenix__$Shader_Uniform_$phoenix_$Color
};
var phoenix__$Shader_Uniform_$phoenix_$Matrix = function() { };
$hxClasses["phoenix._Shader.Uniform_phoenix_Matrix"] = phoenix__$Shader_Uniform_$phoenix_$Matrix;
phoenix__$Shader_Uniform_$phoenix_$Matrix.__name__ = true;
phoenix__$Shader_Uniform_$phoenix_$Matrix.prototype = {
	__class__: phoenix__$Shader_Uniform_$phoenix_$Matrix
};
var phoenix__$Shader_Uniform_$phoenix_$Texture = function() { };
$hxClasses["phoenix._Shader.Uniform_phoenix_Texture"] = phoenix__$Shader_Uniform_$phoenix_$Texture;
phoenix__$Shader_Uniform_$phoenix_$Texture.__name__ = true;
phoenix__$Shader_Uniform_$phoenix_$Texture.prototype = {
	__class__: phoenix__$Shader_Uniform_$phoenix_$Texture
};
var phoenix__$Shader_Uniform_$phoenix_$Vector = function() { };
$hxClasses["phoenix._Shader.Uniform_phoenix_Vector"] = phoenix__$Shader_Uniform_$phoenix_$Vector;
phoenix__$Shader_Uniform_$phoenix_$Vector.__name__ = true;
phoenix__$Shader_Uniform_$phoenix_$Vector.prototype = {
	__class__: phoenix__$Shader_Uniform_$phoenix_$Vector
};
var phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array = function(_name,_value,_location) {
	this.name = _name;
	this.value = _value;
	this.location = _location;
};
$hxClasses["phoenix._Shader.Uniform_snow_api_buffers_Float32Array"] = phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array;
phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array.__name__ = true;
phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array.prototype = {
	__class__: phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array
};
var phoenix_geometry_Geometry = function(_options) {
	this._prev_count = 0;
	this.dirty_based = true;
	this.dirty = false;
	this.locked = false;
	this.immediate = false;
	this.visible = true;
	this.dirty_blend = false;
	this.dirty_clip = false;
	this.dirty_depth = false;
	this.dirty_shader = false;
	this.dirty_texture = false;
	this.dirty_primitive_type = false;
	this.shadow_blend_dest_rgb = 771;
	this.shadow_blend_dest_alpha = 771;
	this.shadow_blend_src_rgb = 770;
	this.shadow_blend_src_alpha = 770;
	this.shadow_clip = false;
	this.shadow_depth = 0.0;
	this.id = "";
	this.uuid = "";
	this.dropped = false;
	this.added = false;
	this.buffer_type = 35048;
	this.buffer_based = false;
	this.object_space = false;
	this.uuid = Luxe.utils.uniqueid();
	this.id = this.uuid;
	this.state = new phoenix_geometry_GeometryState();
	this.vertices = [];
	this.batchers = [];
	this.transform = new phoenix_Transform();
	this._final_vert_position = new phoenix_Vector();
	this.set_clip_rect(null);
	this.set_clip(false);
	var _do_add = true;
	if(_options.id == null) {
		_options.id = this.uuid;
	}
	this.id = _options.id;
	if(_options.color == null) {
		_options.color = new phoenix_Color();
	}
	this.set_color(_options.color);
	if(_options.visible == null) {
		_options.visible = true;
	}
	this.set_visible(_options.visible);
	if(_options.immediate == null) {
		_options.immediate = false;
	}
	this.immediate = _options.immediate;
	if(_options.buffer_based == null) {
		_options.buffer_based = false;
	}
	this.buffer_based = _options.buffer_based;
	if(_options.object_space == null) {
		_options.object_space = false;
	}
	this.object_space = _options.object_space;
	if(_options.depth == null) {
		_options.depth = this.state.depth;
	}
	this.state.depth = _options.depth;
	var _this = this.state;
	if(_options.texture == null) {
		_options.texture = this.state.texture;
	}
	_this.dirty = true;
	_this.texture = _options.texture;
	var _this1 = this.state;
	if(_options.primitive_type == null) {
		_options.primitive_type = this.state.primitive_type;
	}
	_this1.dirty = true;
	_this1.primitive_type = _options.primitive_type;
	var _this2 = this.state;
	if(_options.shader == null) {
		_options.shader = this.state.shader;
	}
	_this2.dirty = true;
	_this2.shader = _options.shader;
	if(_options.clip_rect != null) {
		var _r = _options.clip_rect;
		var _this3 = this.state;
		_this3.dirty = true;
		_this3.clip_x = _r.x;
		var _this4 = this.state;
		_this4.dirty = true;
		_this4.clip_y = _r.y;
		var _this5 = this.state;
		_this5.dirty = true;
		_this5.clip_w = _r.w;
		var _this6 = this.state;
		_this6.dirty = true;
		_this6.clip_h = _r.h;
	}
	if(_options.pos == null) {
		_options.pos = this.transform.local.pos;
	}
	var value = _options.pos;
	var _this7 = this.transform.local;
	_this7.pos = value;
	if(value != null) {
		var _v = _this7.pos;
		var listener = $bind(_this7,_this7._pos_change);
		_v.listen_x = listener;
		_v.listen_y = listener;
		_v.listen_z = listener;
		if(_this7.pos_changed != null && !_this7.ignore_listeners) {
			_this7.pos_changed(_this7.pos);
		}
	}
	if(_options.rotation == null) {
		_options.rotation = this.transform.local.rotation;
	}
	var value1 = _options.rotation;
	var _this8 = this.transform.local;
	_this8.rotation = value1;
	if(value1 != null) {
		var _q = _this8.rotation;
		var listener1 = $bind(_this8,_this8._rotation_change);
		_q.listen_x = listener1;
		_q.listen_y = listener1;
		_q.listen_z = listener1;
		_q.listen_w = listener1;
		if(_this8.rotation_changed != null && !_this8.ignore_listeners) {
			_this8.rotation_changed(_this8.rotation);
		}
	}
	if(_options.scale == null) {
		_options.scale = this.transform.local.scale;
	}
	var value2 = _options.scale;
	var _this9 = this.transform.local;
	_this9.scale = value2;
	if(value2 != null) {
		var _v1 = _this9.scale;
		var listener2 = $bind(_this9,_this9._scale_change);
		_v1.listen_x = listener2;
		_v1.listen_y = listener2;
		_v1.listen_z = listener2;
		if(_this9.scale_changed != null && !_this9.ignore_listeners) {
			_this9.scale_changed(_this9.scale);
		}
	}
	var _this10 = this.transform;
	if(_options.origin == null) {
		_options.origin = this.transform.origin;
	}
	var o = _options.origin;
	_this10.dirty = true;
	if(_this10.dirty && !_this10._setup && _this10._dirty_handlers != null && _this10._dirty_handlers.length > 0) {
		var _g = 0;
		var _g1 = _this10._dirty_handlers;
		while(_g < _g1.length) {
			var _handler = _g1[_g];
			++_g;
			if(_handler != null) {
				_handler(_this10);
			}
		}
	}
	_this10.origin = o;
	if(_this10._origin_handlers != null && _this10._origin_handlers.length > 0) {
		var _origin = _this10.origin;
		var _g2 = 0;
		var _g11 = _this10._origin_handlers;
		while(_g2 < _g11.length) {
			var _handler1 = _g11[_g2];
			++_g2;
			if(_handler1 != null) {
				_handler1(_origin);
			}
		}
	}
	if(_options.no_batcher_add != null && _options.no_batcher_add == true) {
		_do_add = false;
	}
	phoenix_geometry_Geometry._sequence_key++;
	this.key = new phoenix_geometry_GeometryKey();
	this.key.uuid = this.uuid;
	var tmp = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
	this.key.timestamp = tmp;
	this.key.sequence = phoenix_geometry_Geometry._sequence_key;
	this.key.primitive_type = this.state.primitive_type;
	this.key.texture = this.state.texture;
	this.key.shader = this.state.shader;
	this.key.depth = this.state.depth;
	this.key.clip = this.state.clip;
	this.key.blend_src_alpha = this.state.blend_src_alpha;
	this.key.blend_src_rgb = this.state.blend_src_rgb;
	this.key.blend_dest_alpha = this.state.blend_dest_alpha;
	this.key.blend_dest_rgb = this.state.blend_dest_rgb;
	this.transform.id = this.uuid;
	this.transform.name = this.id;
	if(_options.batcher != null && _do_add) {
		_options.batcher.add(this);
	}
	if(this.buffer_based) {
		if(this.vb_pos == null) {
			this.vb_pos = snow_modules_opengl_web_GL.gl.createBuffer();
			this.vb_tcoords = snow_modules_opengl_web_GL.gl.createBuffer();
			this.vb_colors = snow_modules_opengl_web_GL.gl.createBuffer();
			this.set_dirty(true);
		}
	}
	this.uniforms = new phoenix_Uniforms();
};
$hxClasses["phoenix.geometry.Geometry"] = phoenix_geometry_Geometry;
phoenix_geometry_Geometry.__name__ = true;
phoenix_geometry_Geometry.prototype = {
	refresh_key: function() {
		this.key.uuid = this.uuid;
		var tmp = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
		this.key.timestamp = tmp;
		this.key.primitive_type = this.state.primitive_type;
		this.key.texture = this.state.texture;
		this.key.shader = this.state.shader;
		this.key.depth = this.state.depth;
		this.key.clip = this.state.clip;
		this.key.blend_src_alpha = this.state.blend_src_alpha;
		this.key.blend_src_rgb = this.state.blend_src_rgb;
		this.key.blend_dest_alpha = this.state.blend_dest_alpha;
		this.key.blend_dest_rgb = this.state.blend_dest_rgb;
	}
	,drop: function(remove) {
		if(remove == null) {
			remove = true;
		}
		if(remove && this.added) {
			var _g = 0;
			var _g1 = this.batchers;
			while(_g < _g1.length) {
				var b = _g1[_g];
				++_g;
				b.remove(this,true);
			}
		}
		this.key = null;
		this.set_color(null);
		this.state = null;
		this._final_vert_position = null;
		this.batchers = null;
		this.uuid = null;
		this.id = null;
		this.shadow_texture = null;
		this.shadow_shader = null;
		this.vertices = null;
		if(this.transform != null) {
			this.transform.destroy();
			this.transform = null;
		}
		if(this.uniforms != null) {
			this.uniforms.destroy();
			this.uniforms = null;
		}
		this.destroy_vbos();
		if(this.buffer_pos != null) {
			this.buffer_pos = null;
			this.buffer_tcoords = null;
			this.buffer_colors = null;
			this.buffer_normals = null;
		}
		this.dropped = true;
	}
	,add: function(v) {
		this.vertices.push(v);
	}
	,destroy_vbos: function() {
		if(this.vb_pos == null) {
			return;
		}
		snow_modules_opengl_web_GL.gl.deleteBuffer(this.vb_pos);
		snow_modules_opengl_web_GL.gl.deleteBuffer(this.vb_tcoords);
		snow_modules_opengl_web_GL.gl.deleteBuffer(this.vb_colors);
	}
	,update_buffers: function() {
		if(!this.dirty && this.dirty_based) {
			return false;
		}
		if(this.vertices.length != this._prev_count || this.buffer_pos == null) {
			var _length = this.vertices.length * 4;
			this.buffer_pos = null;
			this.buffer_normals = null;
			this.buffer_colors = null;
			this.buffer_tcoords = null;
			this.buffer_pos = new Float32Array(_length);
			this.buffer_tcoords = new Float32Array(_length);
			this.buffer_colors = new Float32Array(_length);
		}
		if(this.object_space) {
			var vert_index = 0;
			var tcoord_index = 0;
			var color_index = 0;
			var vertlist = this.buffer_pos;
			var tcoordlist = this.buffer_tcoords;
			var colorlist = this.buffer_colors;
			var _g = 0;
			var _g1 = this.vertices;
			while(_g < _g1.length) {
				var v = _g1[_g];
				++_g;
				var _vpos = v.pos;
				var _vuv = v.uv.uv0;
				var _vcol = v.color;
				vertlist[vert_index] = _vpos.x;
				vertlist[vert_index + 1] = _vpos.y;
				vertlist[vert_index + 2] = _vpos.z;
				vertlist[vert_index + 3] = _vpos.w;
				vert_index += 4;
				tcoordlist[tcoord_index] = _vuv.u;
				tcoordlist[tcoord_index + 1] = _vuv.v;
				tcoordlist[tcoord_index + 2] = _vuv.w;
				tcoordlist[tcoord_index + 3] = _vuv.t;
				tcoord_index += 4;
				colorlist[color_index] = _vcol.r;
				colorlist[color_index + 1] = _vcol.g;
				colorlist[color_index + 2] = _vcol.b;
				colorlist[color_index + 3] = _vcol.a;
				color_index += 4;
			}
		} else {
			var vert_index1 = 0;
			var tcoord_index1 = 0;
			var color_index1 = 0;
			var vertlist1 = this.buffer_pos;
			var tcoordlist1 = this.buffer_tcoords;
			var colorlist1 = this.buffer_colors;
			var _this = this.transform;
			if(!_this._destroying) {
				if(_this.parent != null && _this.parent.dirty) {
					_this.parent.clean_check();
				}
				if(_this.dirty && !_this._cleaning && !_this.manual_update) {
					_this.clean();
				}
			}
			var _el = _this.world.matrix.elements;
			var _count = this.vertices.length;
			var _idx = 0;
			while(_idx < _count) {
				var v1 = this.vertices[_idx];
				var _vx = v1.pos.x;
				var _vy = v1.pos.y;
				var _vz = v1.pos.z;
				var _tvy = _el[1] * _vx + _el[5] * _vy + _el[9] * _vz + _el[13];
				var _tvz = _el[2] * _vx + _el[6] * _vy + _el[10] * _vz + _el[14];
				vertlist1[vert_index1] = _el[0] * _vx + _el[4] * _vy + _el[8] * _vz + _el[12];
				vertlist1[vert_index1 + 1] = _tvy;
				vertlist1[vert_index1 + 2] = _tvz;
				vertlist1[vert_index1 + 3] = v1.pos.w;
				vert_index1 += 4;
				var _vuv1 = v1.uv.uv0;
				tcoordlist1[tcoord_index1] = _vuv1.u;
				tcoordlist1[tcoord_index1 + 1] = _vuv1.v;
				tcoordlist1[tcoord_index1 + 2] = _vuv1.w;
				tcoordlist1[tcoord_index1 + 3] = _vuv1.t;
				tcoord_index1 += 4;
				colorlist1[color_index1] = v1.color.r;
				colorlist1[color_index1 + 1] = v1.color.g;
				colorlist1[color_index1 + 2] = v1.color.b;
				colorlist1[color_index1 + 3] = v1.color.a;
				color_index1 += 4;
				++_idx;
			}
		}
		this.set_dirty(false);
		return true;
	}
	,set_locked: function(_locked) {
		this.buffer_type = _locked ? 35044 : 35048;
		if(_locked && this.vb_pos == null) {
			if(this.vb_pos == null) {
				this.vb_pos = snow_modules_opengl_web_GL.gl.createBuffer();
				this.vb_tcoords = snow_modules_opengl_web_GL.gl.createBuffer();
				this.vb_colors = snow_modules_opengl_web_GL.gl.createBuffer();
				this.set_dirty(true);
			}
		}
		if(!_locked && this.vb_pos != null) {
			this.destroy_vbos();
		}
		return this.locked = _locked;
	}
	,set_dirty: function(_dirty) {
		return this.dirty = _dirty;
	}
	,refresh: function() {
		var _g = 0;
		var _g1 = this.batchers;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			b.remove(this,false);
		}
		if(this.dirty_primitive_type) {
			this.dirty_primitive_type = false;
			var _this = this.state;
			_this.dirty = true;
			_this.primitive_type = this.shadow_primitive_type;
		}
		if(this.dirty_texture) {
			this.dirty_texture = false;
			var _this1 = this.state;
			_this1.dirty = true;
			_this1.texture = this.shadow_texture;
		}
		if(this.dirty_shader) {
			this.dirty_shader = false;
			var _this2 = this.state;
			_this2.dirty = true;
			_this2.shader = this.shadow_shader;
		}
		if(this.dirty_depth) {
			this.dirty_depth = false;
			this.state.depth = this.shadow_depth;
		}
		if(this.dirty_clip) {
			this.dirty_clip = false;
			var _this3 = this.state;
			_this3.dirty = true;
			_this3.clip = this.shadow_clip;
		}
		if(this.dirty_blend) {
			this.dirty_blend = false;
			var _this4 = this.state;
			_this4.dirty = true;
			_this4.blend_src_alpha = this.shadow_blend_src_alpha;
			var _this5 = this.state;
			_this5.dirty = true;
			_this5.blend_src_rgb = this.shadow_blend_src_rgb;
			var _this6 = this.state;
			_this6.dirty = true;
			_this6.blend_dest_alpha = this.shadow_blend_dest_alpha;
			var _this7 = this.state;
			_this7.dirty = true;
			_this7.blend_dest_rgb = this.shadow_blend_dest_rgb;
		}
		this.refresh_key();
		var _g2 = 0;
		var _g11 = this.batchers;
		while(_g2 < _g11.length) {
			var b1 = _g11[_g2];
			++_g2;
			b1.add(this,false);
		}
	}
	,set_primitive_type: function(val) {
		if(this.state.primitive_type != val) {
			this.shadow_primitive_type = val;
			this.dirty_primitive_type = true;
			this.refresh();
		}
		return this.primitive_type = val;
	}
	,set_texture: function(val) {
		if(this.state.texture != val) {
			this.shadow_texture = val;
			this.dirty_texture = true;
			this.refresh();
		}
		return this.texture = val;
	}
	,set_visible: function(val) {
		return this.visible = val;
	}
	,set_color: function(val) {
		if(this.vertices != null && this.vertices.length > 0) {
			var _g = 0;
			var _g1 = this.vertices;
			while(_g < _g1.length) {
				var v = _g1[_g];
				++_g;
				v.color = val;
			}
		}
		return this.color = val;
	}
	,set_shader: function(val) {
		if(this.state.shader != val) {
			this.shadow_shader = val;
			this.dirty_shader = true;
			this.refresh();
		}
		return this.shader = val;
	}
	,set_depth: function(val) {
		if(this.state.depth != val) {
			this.shadow_depth = val;
			this.dirty_depth = true;
			this.refresh();
		}
		return this.depth = val;
	}
	,set_clip: function(val) {
		if(this.state.clip != val) {
			this.shadow_clip = val;
			this.dirty_clip = true;
			this.refresh();
		}
		return this.clip = val;
	}
	,set_clip_rect: function(val) {
		if(val == null) {
			this.set_clip(false);
		} else {
			this.set_clip(true);
			var _this = this.state;
			_this.dirty = true;
			_this.clip_x = val.x;
			var _this1 = this.state;
			_this1.dirty = true;
			_this1.clip_y = val.y;
			var _this2 = this.state;
			_this2.dirty = true;
			_this2.clip_w = val.w;
			var _this3 = this.state;
			_this3.dirty = true;
			_this3.clip_h = val.h;
		}
		return this.clip_rect = val;
	}
	,__class__: phoenix_geometry_Geometry
	,__properties__: {set_clip:"set_clip",set_color:"set_color",set_dirty:"set_dirty",set_locked:"set_locked",set_visible:"set_visible",set_clip_rect:"set_clip_rect",set_depth:"set_depth",set_shader:"set_shader",set_texture:"set_texture",set_primitive_type:"set_primitive_type"}
};
var phoenix_geometry_GeometryKey = function() {
	this.blend_dest_rgb = 0;
	this.blend_dest_alpha = 0;
	this.blend_src_rgb = 0;
	this.blend_src_alpha = 0;
	this.clip = false;
	this.depth = 0;
	this.uuid = "";
	this.sequence = 0;
	this.timestamp = 0;
};
$hxClasses["phoenix.geometry.GeometryKey"] = phoenix_geometry_GeometryKey;
phoenix_geometry_GeometryKey.__name__ = true;
phoenix_geometry_GeometryKey.prototype = {
	__class__: phoenix_geometry_GeometryKey
};
var phoenix_geometry_GeometryState = function() {
	this.blend_dest_rgb = 771;
	this.blend_dest_alpha = 771;
	this.blend_src_rgb = 770;
	this.blend_src_alpha = 770;
	this.clip_h = 0;
	this.clip_w = 0;
	this.clip_y = 0;
	this.clip_x = 0;
	this.clip = false;
	this.depth = 0.0;
	this.ignore_blend = true;
	this.dirty = false;
	this.dirty = true;
	this.texture = null;
	this.dirty = true;
	this.shader = null;
	this.dirty = true;
	this.primitive_type = 0;
};
$hxClasses["phoenix.geometry.GeometryState"] = phoenix_geometry_GeometryState;
phoenix_geometry_GeometryState.__name__ = true;
phoenix_geometry_GeometryState.prototype = {
	__class__: phoenix_geometry_GeometryState
};
var phoenix_geometry_QuadGeometry = function(_options) {
	this._uv_h = 1;
	this._uv_w = 1;
	this._uv_y = 0;
	this._uv_x = 0;
	this.uv_angle = 0;
	this.flipy = false;
	this.flipx = false;
	_options.primitive_type = 4;
	phoenix_geometry_Geometry.call(this,_options);
	if(_options.flipx != null) {
		this.set_flipx(_options.flipx);
	}
	if(_options.flipy != null) {
		this.set_flipy(_options.flipy);
	}
	var _x = _options.x;
	var _y = _options.y;
	var _w = _options.w;
	var _h = _options.h;
	if(_options.rect != null) {
		_x = _options.rect.x;
		_y = _options.rect.y;
		_w = _options.rect.w;
		_h = _options.rect.h;
	}
	this.add(new phoenix_geometry_Vertex(new phoenix_Vector(0,0),this.color));
	this.add(new phoenix_geometry_Vertex(new phoenix_Vector(_w,0),this.color));
	this.add(new phoenix_geometry_Vertex(new phoenix_Vector(_w,_h),this.color));
	this.add(new phoenix_geometry_Vertex(new phoenix_Vector(0,_h),this.color));
	this.add(new phoenix_geometry_Vertex(new phoenix_Vector(0,0),this.color));
	this.add(new phoenix_geometry_Vertex(new phoenix_Vector(_w,_h),this.color));
	var _this = this.transform;
	var _this1 = this.transform.local.pos;
	var prev = _this1.ignore_listeners;
	_this1.ignore_listeners = true;
	_this1.x = _x;
	if(!_this1._construct) {
		if(_this1.listen_x != null && !_this1.ignore_listeners) {
			_this1.listen_x(_x);
		}
	}
	_this1.y = _y;
	if(!_this1._construct) {
		if(_this1.listen_y != null && !_this1.ignore_listeners) {
			_this1.listen_y(_y);
		}
	}
	_this1.ignore_listeners = prev;
	if(_this1.listen_x != null && !_this1.ignore_listeners) {
		_this1.listen_x(_this1.x);
	}
	if(_this1.listen_y != null && !_this1.ignore_listeners) {
		_this1.listen_y(_this1.y);
	}
	var _this2 = _this.local;
	_this2.pos = _this1;
	if(_this1 != null) {
		var _v = _this2.pos;
		var listener = $bind(_this2,_this2._pos_change);
		_v.listen_x = listener;
		_v.listen_y = listener;
		_v.listen_z = listener;
		if(_this2.pos_changed != null && !_this2.ignore_listeners) {
			_this2.pos_changed(_this2.pos);
		}
	}
	if(_options.uv != null) {
		var _rect = _options.uv;
		if(this.state.texture == null) {
			throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("texture was null" + (" ( " + "QuadGeometry; Calling UV on a geometry with null texture." + " )")));
		}
		var tlx = _rect.x / this.state.texture.width_actual;
		var tly = _rect.y / this.state.texture.height_actual;
		var szx = _rect.w / this.state.texture.width_actual;
		var szy = _rect.h / this.state.texture.height_actual;
		if(this.vertices.length != 0) {
			var tl_x = tlx;
			var tl_y = tly;
			this._uv_x = tlx;
			this._uv_y = tly;
			this._uv_w = szx;
			this._uv_h = szy;
			var tr_x = tlx + szx;
			var tr_y = tly;
			var br_x = tlx + szx;
			var br_y = tly + szy;
			var bl_x = tlx;
			var bl_y = tly + szy;
			var tmp_x = 0.0;
			var tmp_y = 0.0;
			var rotations = this.uv_angle / 90 | 0;
			rotations -= 4 * Math.floor(rotations / 4);
			var _g1 = 0;
			var _g = rotations;
			while(_g1 < _g) {
				++_g1;
				tmp_x = tl_x;
				tl_x = bl_x;
				bl_x = br_x;
				br_x = tr_x;
				tr_x = tmp_x;
				tmp_y = tl_y;
				tl_y = bl_y;
				bl_y = br_y;
				br_y = tr_y;
				tr_y = tmp_y;
			}
			if(this.flipy) {
				tmp_y = bl_y;
				bl_y = tl_y;
				tl_y = tmp_y;
				tmp_x = bl_x;
				bl_x = tl_x;
				tl_x = tmp_x;
				tmp_y = br_y;
				br_y = tr_y;
				tr_y = tmp_y;
				tmp_x = br_x;
				br_x = tr_x;
				tr_x = tmp_x;
			}
			if(this.flipx) {
				tmp_x = tr_x;
				tr_x = tl_x;
				tl_x = tmp_x;
				tmp_y = tr_y;
				tr_y = tl_y;
				tl_y = tmp_y;
				tmp_x = br_x;
				br_x = bl_x;
				bl_x = tmp_x;
				tmp_y = br_y;
				br_y = bl_y;
				bl_y = tmp_y;
			}
			var _this3 = this.vertices[0].uv.uv0;
			_this3.u = tl_x;
			_this3.v = tl_y;
			var _this4 = this.vertices[1].uv.uv0;
			_this4.u = tr_x;
			_this4.v = tr_y;
			var _this5 = this.vertices[2].uv.uv0;
			_this5.u = br_x;
			_this5.v = br_y;
			var _this6 = this.vertices[3].uv.uv0;
			_this6.u = bl_x;
			_this6.v = bl_y;
			var _this7 = this.vertices[4].uv.uv0;
			_this7.u = tl_x;
			_this7.v = tl_y;
			var _this8 = this.vertices[5].uv.uv0;
			_this8.u = br_x;
			_this8.v = br_y;
			this.set_dirty(true);
		}
	} else if(this.vertices.length != 0) {
		var sz_x = 1;
		var sz_y = 1;
		var tl_x1 = 0;
		var tl_y1 = 0;
		this._uv_x = tl_x1;
		this._uv_y = tl_y1;
		this._uv_w = sz_x;
		this._uv_h = sz_y;
		var tr_x1 = tl_x1 + sz_x;
		var tr_y1 = tl_y1;
		var br_x1 = tl_x1 + sz_x;
		var br_y1 = tl_y1 + sz_y;
		var bl_x1 = tl_x1;
		var bl_y1 = tl_y1 + sz_y;
		var tmp_x1 = 0.0;
		var tmp_y1 = 0.0;
		var rotations1 = this.uv_angle / 90 | 0;
		rotations1 -= 4 * Math.floor(rotations1 / 4);
		var _g11 = 0;
		var _g2 = rotations1;
		while(_g11 < _g2) {
			++_g11;
			tmp_x1 = tl_x1;
			tl_x1 = bl_x1;
			bl_x1 = br_x1;
			br_x1 = tr_x1;
			tr_x1 = tmp_x1;
			tmp_y1 = tl_y1;
			tl_y1 = bl_y1;
			bl_y1 = br_y1;
			br_y1 = tr_y1;
			tr_y1 = tmp_y1;
		}
		if(this.flipy) {
			tmp_y1 = bl_y1;
			bl_y1 = tl_y1;
			tl_y1 = tmp_y1;
			tmp_x1 = bl_x1;
			bl_x1 = tl_x1;
			tl_x1 = tmp_x1;
			tmp_y1 = br_y1;
			br_y1 = tr_y1;
			tr_y1 = tmp_y1;
			tmp_x1 = br_x1;
			br_x1 = tr_x1;
			tr_x1 = tmp_x1;
		}
		if(this.flipx) {
			tmp_x1 = tr_x1;
			tr_x1 = tl_x1;
			tl_x1 = tmp_x1;
			tmp_y1 = tr_y1;
			tr_y1 = tl_y1;
			tl_y1 = tmp_y1;
			tmp_x1 = br_x1;
			br_x1 = bl_x1;
			bl_x1 = tmp_x1;
			tmp_y1 = br_y1;
			br_y1 = bl_y1;
			bl_y1 = tmp_y1;
		}
		var _this9 = this.vertices[0].uv.uv0;
		_this9.u = tl_x1;
		_this9.v = tl_y1;
		var _this10 = this.vertices[1].uv.uv0;
		_this10.u = tr_x1;
		_this10.v = tr_y1;
		var _this11 = this.vertices[2].uv.uv0;
		_this11.u = br_x1;
		_this11.v = br_y1;
		var _this12 = this.vertices[3].uv.uv0;
		_this12.u = bl_x1;
		_this12.v = bl_y1;
		var _this13 = this.vertices[4].uv.uv0;
		_this13.u = tl_x1;
		_this13.v = tl_y1;
		var _this14 = this.vertices[5].uv.uv0;
		_this14.u = br_x1;
		_this14.v = br_y1;
		this.set_dirty(true);
	}
};
$hxClasses["phoenix.geometry.QuadGeometry"] = phoenix_geometry_QuadGeometry;
phoenix_geometry_QuadGeometry.__name__ = true;
phoenix_geometry_QuadGeometry.__super__ = phoenix_geometry_Geometry;
phoenix_geometry_QuadGeometry.prototype = $extend(phoenix_geometry_Geometry.prototype,{
	resize_xy: function(_x,_y) {
		if(this.vertices.length == 0) {
			return;
		}
		var _this = this.vertices[0].pos;
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = 0;
		if(!_this._construct) {
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(0);
			}
		}
		_this.y = 0;
		if(!_this._construct) {
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(0);
			}
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) {
			_this.listen_x(_this.x);
		}
		if(_this.listen_y != null && !_this.ignore_listeners) {
			_this.listen_y(_this.y);
		}
		var _this1 = this.vertices[1].pos;
		var prev1 = _this1.ignore_listeners;
		_this1.ignore_listeners = true;
		_this1.x = _x;
		if(!_this1._construct) {
			if(_this1.listen_x != null && !_this1.ignore_listeners) {
				_this1.listen_x(_x);
			}
		}
		_this1.y = 0;
		if(!_this1._construct) {
			if(_this1.listen_y != null && !_this1.ignore_listeners) {
				_this1.listen_y(0);
			}
		}
		_this1.ignore_listeners = prev1;
		if(_this1.listen_x != null && !_this1.ignore_listeners) {
			_this1.listen_x(_this1.x);
		}
		if(_this1.listen_y != null && !_this1.ignore_listeners) {
			_this1.listen_y(_this1.y);
		}
		var _this2 = this.vertices[2].pos;
		var prev2 = _this2.ignore_listeners;
		_this2.ignore_listeners = true;
		_this2.x = _x;
		if(!_this2._construct) {
			if(_this2.listen_x != null && !_this2.ignore_listeners) {
				_this2.listen_x(_x);
			}
		}
		_this2.y = _y;
		if(!_this2._construct) {
			if(_this2.listen_y != null && !_this2.ignore_listeners) {
				_this2.listen_y(_y);
			}
		}
		_this2.ignore_listeners = prev2;
		if(_this2.listen_x != null && !_this2.ignore_listeners) {
			_this2.listen_x(_this2.x);
		}
		if(_this2.listen_y != null && !_this2.ignore_listeners) {
			_this2.listen_y(_this2.y);
		}
		var _this3 = this.vertices[3].pos;
		var prev3 = _this3.ignore_listeners;
		_this3.ignore_listeners = true;
		_this3.x = 0;
		if(!_this3._construct) {
			if(_this3.listen_x != null && !_this3.ignore_listeners) {
				_this3.listen_x(0);
			}
		}
		_this3.y = _y;
		if(!_this3._construct) {
			if(_this3.listen_y != null && !_this3.ignore_listeners) {
				_this3.listen_y(_y);
			}
		}
		_this3.ignore_listeners = prev3;
		if(_this3.listen_x != null && !_this3.ignore_listeners) {
			_this3.listen_x(_this3.x);
		}
		if(_this3.listen_y != null && !_this3.ignore_listeners) {
			_this3.listen_y(_this3.y);
		}
		var _this4 = this.vertices[4].pos;
		var prev4 = _this4.ignore_listeners;
		_this4.ignore_listeners = true;
		_this4.x = 0;
		if(!_this4._construct) {
			if(_this4.listen_x != null && !_this4.ignore_listeners) {
				_this4.listen_x(0);
			}
		}
		_this4.y = 0;
		if(!_this4._construct) {
			if(_this4.listen_y != null && !_this4.ignore_listeners) {
				_this4.listen_y(0);
			}
		}
		_this4.ignore_listeners = prev4;
		if(_this4.listen_x != null && !_this4.ignore_listeners) {
			_this4.listen_x(_this4.x);
		}
		if(_this4.listen_y != null && !_this4.ignore_listeners) {
			_this4.listen_y(_this4.y);
		}
		var _this5 = this.vertices[5].pos;
		var prev5 = _this5.ignore_listeners;
		_this5.ignore_listeners = true;
		_this5.x = _x;
		if(!_this5._construct) {
			if(_this5.listen_x != null && !_this5.ignore_listeners) {
				_this5.listen_x(_x);
			}
		}
		_this5.y = _y;
		if(!_this5._construct) {
			if(_this5.listen_y != null && !_this5.ignore_listeners) {
				_this5.listen_y(_y);
			}
		}
		_this5.ignore_listeners = prev5;
		if(_this5.listen_x != null && !_this5.ignore_listeners) {
			_this5.listen_x(_this5.x);
		}
		if(_this5.listen_y != null && !_this5.ignore_listeners) {
			_this5.listen_y(_this5.y);
		}
	}
	,set_flipx: function(_val) {
		this.flipx = _val;
		var _rect_x = this._uv_x;
		var _rect_y = this._uv_y;
		var _rect_w = this._uv_w;
		var _rect_h = this._uv_h;
		if(this.vertices.length != 0) {
			var tl_x = _rect_x;
			var tl_y = _rect_y;
			this._uv_x = _rect_x;
			this._uv_y = _rect_y;
			this._uv_w = _rect_w;
			this._uv_h = _rect_h;
			var tr_x = _rect_x + _rect_w;
			var tr_y = _rect_y;
			var br_x = _rect_x + _rect_w;
			var br_y = _rect_y + _rect_h;
			var bl_x = _rect_x;
			var bl_y = _rect_y + _rect_h;
			var tmp_x = 0.0;
			var tmp_y = 0.0;
			var rotations = this.uv_angle / 90 | 0;
			rotations -= 4 * Math.floor(rotations / 4);
			var _g1 = 0;
			var _g = rotations;
			while(_g1 < _g) {
				++_g1;
				tmp_x = tl_x;
				tl_x = bl_x;
				bl_x = br_x;
				br_x = tr_x;
				tr_x = tmp_x;
				tmp_y = tl_y;
				tl_y = bl_y;
				bl_y = br_y;
				br_y = tr_y;
				tr_y = tmp_y;
			}
			if(this.flipy) {
				tmp_y = bl_y;
				bl_y = tl_y;
				tl_y = tmp_y;
				tmp_x = bl_x;
				bl_x = tl_x;
				tl_x = tmp_x;
				tmp_y = br_y;
				br_y = tr_y;
				tr_y = tmp_y;
				tmp_x = br_x;
				br_x = tr_x;
				tr_x = tmp_x;
			}
			if(this.flipx) {
				tmp_x = tr_x;
				tr_x = tl_x;
				tl_x = tmp_x;
				tmp_y = tr_y;
				tr_y = tl_y;
				tl_y = tmp_y;
				tmp_x = br_x;
				br_x = bl_x;
				bl_x = tmp_x;
				tmp_y = br_y;
				br_y = bl_y;
				bl_y = tmp_y;
			}
			var _this = this.vertices[0].uv.uv0;
			_this.u = tl_x;
			_this.v = tl_y;
			var _this1 = this.vertices[1].uv.uv0;
			_this1.u = tr_x;
			_this1.v = tr_y;
			var _this2 = this.vertices[2].uv.uv0;
			_this2.u = br_x;
			_this2.v = br_y;
			var _this3 = this.vertices[3].uv.uv0;
			_this3.u = bl_x;
			_this3.v = bl_y;
			var _this4 = this.vertices[4].uv.uv0;
			_this4.u = tl_x;
			_this4.v = tl_y;
			var _this5 = this.vertices[5].uv.uv0;
			_this5.u = br_x;
			_this5.v = br_y;
			this.set_dirty(true);
		}
		return this.flipx;
	}
	,set_flipy: function(_val) {
		this.flipy = _val;
		var _rect_x = this._uv_x;
		var _rect_y = this._uv_y;
		var _rect_w = this._uv_w;
		var _rect_h = this._uv_h;
		if(this.vertices.length != 0) {
			var tl_x = _rect_x;
			var tl_y = _rect_y;
			this._uv_x = _rect_x;
			this._uv_y = _rect_y;
			this._uv_w = _rect_w;
			this._uv_h = _rect_h;
			var tr_x = _rect_x + _rect_w;
			var tr_y = _rect_y;
			var br_x = _rect_x + _rect_w;
			var br_y = _rect_y + _rect_h;
			var bl_x = _rect_x;
			var bl_y = _rect_y + _rect_h;
			var tmp_x = 0.0;
			var tmp_y = 0.0;
			var rotations = this.uv_angle / 90 | 0;
			rotations -= 4 * Math.floor(rotations / 4);
			var _g1 = 0;
			var _g = rotations;
			while(_g1 < _g) {
				++_g1;
				tmp_x = tl_x;
				tl_x = bl_x;
				bl_x = br_x;
				br_x = tr_x;
				tr_x = tmp_x;
				tmp_y = tl_y;
				tl_y = bl_y;
				bl_y = br_y;
				br_y = tr_y;
				tr_y = tmp_y;
			}
			if(this.flipy) {
				tmp_y = bl_y;
				bl_y = tl_y;
				tl_y = tmp_y;
				tmp_x = bl_x;
				bl_x = tl_x;
				tl_x = tmp_x;
				tmp_y = br_y;
				br_y = tr_y;
				tr_y = tmp_y;
				tmp_x = br_x;
				br_x = tr_x;
				tr_x = tmp_x;
			}
			if(this.flipx) {
				tmp_x = tr_x;
				tr_x = tl_x;
				tl_x = tmp_x;
				tmp_y = tr_y;
				tr_y = tl_y;
				tl_y = tmp_y;
				tmp_x = br_x;
				br_x = bl_x;
				bl_x = tmp_x;
				tmp_y = br_y;
				br_y = bl_y;
				bl_y = tmp_y;
			}
			var _this = this.vertices[0].uv.uv0;
			_this.u = tl_x;
			_this.v = tl_y;
			var _this1 = this.vertices[1].uv.uv0;
			_this1.u = tr_x;
			_this1.v = tr_y;
			var _this2 = this.vertices[2].uv.uv0;
			_this2.u = br_x;
			_this2.v = br_y;
			var _this3 = this.vertices[3].uv.uv0;
			_this3.u = bl_x;
			_this3.v = bl_y;
			var _this4 = this.vertices[4].uv.uv0;
			_this4.u = tl_x;
			_this4.v = tl_y;
			var _this5 = this.vertices[5].uv.uv0;
			_this5.u = br_x;
			_this5.v = br_y;
			this.set_dirty(true);
		}
		return this.flipy;
	}
	,__class__: phoenix_geometry_QuadGeometry
	,__properties__: $extend(phoenix_geometry_Geometry.prototype.__properties__,{set_flipy:"set_flipy",set_flipx:"set_flipx"})
});
var phoenix_geometry_TextGeometry = function(_options) {
	this.setup_ = true;
	this.dirty_align = true;
	this.dirty_sizing = true;
	this.point_ratio = 1;
	this.text_h_h = 0;
	this.text_h_w = 0;
	this.text_height = 0;
	this.text_width = 0;
	this.glow_amount = 0;
	this.glow_threshold = 0;
	this.outline = 0;
	this.thickness = 0.5;
	this.smoothness = 0.75;
	this.unique = false;
	this.sdf = false;
	this.bounds_wrap = false;
	this.letter_snapping = false;
	this.letter_spacing = 0.0;
	this.line_spacing = 0.0;
	this.point_size = 32.0;
	this.text = "";
	this.options = _options;
	this.emitter = new luxe_Emitter();
	if(this.options == null) {
		throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("options was null" + (" ( " + "TextGeometry requires non-null options" + " )")));
	}
	if(this.options.sdf != null) {
		this.sdf = this.options.sdf;
	}
	if(this.options.font == null) {
		this.options.font = Luxe.renderer.font;
	}
	this.set_font(this.options.font);
	if(this.font == Luxe.renderer.font) {
		this.sdf = true;
	}
	if(this.options.shader == null) {
		if(this.sdf) {
			this.options.shader = Luxe.renderer.shaders.bitmapfont.shader;
		} else {
			this.options.shader = Luxe.renderer.shaders.textured.shader;
		}
	} else if(this.options.shader != Luxe.renderer.shaders.bitmapfont.shader) {
		this.unique = true;
	}
	this.options.primitive_type = 4;
	phoenix_geometry_Geometry.call(this,this.options);
	this.cache = [];
	this.line_widths = [];
	this.line_offsets = [[],[]];
	this.lines = [];
	this.set_outline_color(new phoenix_Color());
	this.set_glow_color(new phoenix_Color());
	this.default_options();
	this.setup_ = false;
};
$hxClasses["phoenix.geometry.TextGeometry"] = phoenix_geometry_TextGeometry;
phoenix_geometry_TextGeometry.__name__ = true;
phoenix_geometry_TextGeometry.__super__ = phoenix_geometry_Geometry;
phoenix_geometry_TextGeometry.prototype = $extend(phoenix_geometry_Geometry.prototype,{
	drop: function(remove) {
		if(remove == null) {
			remove = true;
		}
		this.set_text(null);
		this.set_font(null);
		this.set_bounds(null);
		this.set_outline_color(null);
		this.set_glow_color(null);
		if(this.line_widths != null) {
			this.line_widths.splice(0,this.line_widths.length);
			this.line_widths = null;
		}
		if(this.line_offsets != null) {
			this.line_offsets.splice(0,this.line_offsets.length);
			this.line_offsets = null;
		}
		if(this.lines != null) {
			this.lines.splice(0,this.lines.length);
			this.lines = null;
		}
		this.emitter = null;
		this.options = null;
		if(this.cache != null) {
			while(this.cache.length > 0) {
				var c = this.cache.pop();
				while(c.length > 0) {
					var v = c.pop();
					v.pos = null;
					v.color = null;
					v.normal = null;
					var _this = v.uv;
					_this.uv0 = null;
					_this.uv1 = null;
					_this.uv2 = null;
					_this.uv3 = null;
					_this.uv4 = null;
					_this.uv5 = null;
					_this.uv6 = null;
					_this.uv7 = null;
					v.uv = null;
					v = null;
				}
				c = null;
			}
			this.cache = null;
		}
		phoenix_geometry_Geometry.prototype.drop.call(this,remove);
	}
	,default_options: function() {
		this.set_texture(this.font.pages.h[0]);
		if(this.options.letter_snapping != null) {
			this.set_letter_snapping(this.options.letter_snapping);
		}
		if(this.options.letter_spacing != null) {
			this.set_letter_spacing(this.options.letter_spacing);
		}
		if(this.options.line_spacing != null) {
			this.set_line_spacing(this.options.line_spacing);
		}
		if(this.options.point_size != null) {
			this.set_point_size(this.options.point_size);
		}
		if(this.options.bounds != null) {
			this.set_bounds(this.options.bounds);
		}
		if(this.options.bounds_wrap != null) {
			this.set_bounds_wrap(this.options.bounds_wrap);
		}
		if(this.options.align == null) {
			this.options.align = 0;
		}
		if(this.options.align_vertical == null) {
			this.options.align_vertical = 3;
		}
		this.set_align(this.options.align);
		this.set_align_vertical(this.options.align_vertical);
		if(this.options.thickness != null) {
			this.set_thickness(this.options.thickness);
		}
		if(this.options.smoothness != null) {
			this.set_smoothness(this.options.smoothness);
		}
		if(this.options.outline != null) {
			this.set_outline(this.options.outline);
		}
		if(this.options.outline_color != null) {
			this.set_outline_color(this.options.outline_color);
		}
		if(this.options.glow_threshold != null) {
			this.set_glow_threshold(this.options.glow_threshold);
		}
		if(this.options.glow_amount != null) {
			this.set_glow_amount(this.options.glow_amount);
		}
		if(this.options.glow_color != null) {
			this.set_glow_color(this.options.glow_color);
		}
		if(this.sdf) {
			this.flush_uniforms();
		}
		if(this.options.text != null) {
			this.set_text(this.options.text);
		}
	}
	,set_text: function(_text) {
		if(_text == null) {
			_text = "";
		}
		if(this.text != _text) {
			this.text = _text;
			if(this.text != "") {
				this.set_dirty_sizing(true);
				this.update_text();
			} else {
				this.vertices.splice(0,this.vertices.length);
			}
		}
		return this.text;
	}
	,update_sizes: function() {
		if(!this.dirty_sizing) {
			return false;
		}
		var drawn_text = this.text.replace(phoenix_geometry_TextGeometry.tab_regex.r,"    ");
		if(this.bounds_wrap && this.bounds != null) {
			drawn_text = this.font.wrap_string_to_bounds(drawn_text,this.bounds,this.point_size,this.letter_spacing);
		}
		this.lines.splice(0,this.lines.length);
		this.lines = drawn_text.split("\n");
		this.line_widths.splice(0,this.line_widths.length);
		var _this = this.font;
		var _point_size = this.point_size;
		var _letter_spc = this.letter_spacing;
		var _line_widths = this.line_widths;
		var _max_w = 0.0;
		var _push_widths = _line_widths != null;
		var _lines = luxe_utils_unifill_Unifill.uSplit(drawn_text,"\n");
		var _g = 0;
		while(_g < _lines.length) {
			var _line = _lines[_g];
			++_g;
			var _cur_w = _this.width_of_line(_line,_point_size,_letter_spc);
			_max_w = Math.max(_max_w,_cur_w);
			if(_push_widths) {
				_line_widths.push(_cur_w);
			}
		}
		this.text_width = _max_w;
		var _this1 = this.font;
		this.text_height = this.lines.length * ((_this1.info.line_height + this.line_spacing) * (this.point_size / _this1.info.point_size));
		this.text_h_w = this.text_width / 2;
		this.text_h_h = this.text_height / 2;
		this.point_ratio = this.point_size / this.font.info.point_size;
		this.set_dirty_sizing(false);
		return true;
	}
	,update_text: function() {
		var _g2_endIndex;
		var _g2_index;
		var _gthis = this;
		var _pos_x = 0.0;
		var _pos_y = 0.0;
		var _bounds_based = this.bounds != null;
		if(_bounds_based) {
			var _this = this.transform.local.pos;
			_pos_x = this.bounds.x;
			var _x = _pos_x;
			_this.x = _x;
			if(!_this._construct) {
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_x);
				}
			}
			var _this1 = this.transform.local.pos;
			_pos_y = this.bounds.y;
			var _y = _pos_y;
			_this1.y = _y;
			if(!_this1._construct) {
				if(_this1.listen_y != null && !_this1.ignore_listeners) {
					_this1.listen_y(_y);
				}
			}
		}
		var _cur_x = 0.0;
		var _cur_y = 0.0;
		var _line_idx = 0;
		var _total_idx = 0;
		var _is_char = true;
		this.update_sizes();
		var _g = 0;
		var _g1 = this.lines;
		while(_g < _g1.length) {
			var _line = _g1[_g];
			++_g;
			var _line_x_offset = 0.0;
			var _line_y_offset = 0.0;
			if(this.dirty_align) {
				if(!_bounds_based) {
					switch(this.align) {
					case 1:
						_line_x_offset = -this.line_widths[_line_idx];
						break;
					case 2:
						_line_x_offset = -(this.line_widths[_line_idx] / 2.0);
						break;
					default:
						_line_x_offset = 0.0;
					}
					switch(this.align_vertical) {
					case 2:
						_line_y_offset = -this.text_h_h;
						break;
					case 4:
						_line_y_offset = -this.text_height;
						break;
					default:
						_line_y_offset = 0.0;
					}
				} else {
					switch(this.align) {
					case 1:
						_line_x_offset = -this.line_widths[_line_idx] + this.bounds.w;
						break;
					case 2:
						_line_x_offset = -(this.line_widths[_line_idx] / 2.0) + this.bounds.w / 2;
						break;
					default:
						_line_x_offset = 0.0;
					}
					switch(this.align_vertical) {
					case 2:
						_line_y_offset = this.bounds.h / 2 - this.text_h_h;
						break;
					case 4:
						_line_y_offset = this.bounds.h - this.text_height;
						break;
					default:
						_line_y_offset = 0.0;
					}
				}
				this.line_offsets[0][_line_idx] = _line_x_offset;
				this.line_offsets[1][_line_idx] = _line_y_offset;
			} else {
				_line_x_offset = this.line_offsets[0][_line_idx];
				_line_y_offset = this.line_offsets[1][_line_idx];
			}
			if(_line_idx != 0) {
				_cur_y += (_gthis.font.info.line_height + _gthis.line_spacing) * _gthis.point_ratio;
				_cur_x = 0;
			}
			var _idx = 0;
			var _g2_i = 0;
			_g2_index = 0;
			_g2_endIndex = _line.length;
			while(_g2_index < _g2_endIndex) {
				_g2_i = _g2_index;
				var c = _line.charCodeAt(_g2_index);
				_g2_index += !(55296 <= c && c <= 56319) ? 1 : 2;
				var _index = luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointAt(_line,_g2_i);
				var _char = this.font.info.chars.h[_index];
				if(_char != null) {
					_is_char = _index > 32;
				} else {
					_is_char = false;
				}
				if(!_is_char) {
					_char = this.font.space_char;
				}
				if(_is_char) {
					var _quad_x = _line_x_offset + _cur_x + _char.xoffset * this.point_ratio;
					var _quad_y = _line_y_offset + _cur_y + _char.yoffset * this.point_ratio;
					if(this.letter_snapping) {
						_quad_x = Math.floor(_quad_x);
						_quad_y = Math.floor(_quad_y);
					}
					var _page = this.font.pages.h[_char.page];
					this.update_char(_total_idx,_quad_x,_quad_y,_char.width * this.point_ratio,_char.height * this.point_ratio,_char.x / _page.width_actual,_char.y / _page.height_actual,(_char.x + _char.width) / _page.width_actual,(_char.y + _char.height) / _page.height_actual,this.color);
					++_total_idx;
				}
				var _x_inc = _char.xadvance;
				if(_idx < _line.length - 1) {
					var _this2 = this.font;
					var index = _idx + 1;
					var s = _line;
					var i;
					if(index >= 0) {
						var index1 = 0;
						var len = s.length;
						var i1 = 0;
						while(i1 < index && index1 < len) {
							var c1 = s.charCodeAt(index1);
							index1 += !(55296 <= c1 && c1 <= 56319) ? 1 : 2;
							++i1;
						}
						i = index1;
					} else {
						while(false) {
						}
						i = 0;
					}
					var _second = luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointAt(_line,i);
					var _map = _this2.info.kernings.get(_index);
					_x_inc += _map != null && _map.h.hasOwnProperty(_second) ? _map.h[_second] : 0;
					if(_index >= 32) {
						_x_inc += this.letter_spacing;
					}
				}
				_x_inc *= this.point_ratio;
				_cur_x += _x_inc;
				++_idx;
			}
			++_line_idx;
		}
		var _diff = (this.vertices.length / 6 | 0) - _total_idx;
		if(_diff > 0) {
			this.vertices.splice(_total_idx * 6,_diff * 6);
		}
		this.dirty_align = false;
		this.emitter.emit(1);
	}
	,update_char: function(_letteridx,_x,_y,_w,_h,_u,_v,_u2,_v2,_color) {
		var vert0;
		var vert1;
		var vert2;
		var vert3;
		var vert4;
		var vert5;
		var quad = this.cache[_letteridx];
		if(quad == null) {
			vert0 = new phoenix_geometry_Vertex(new phoenix_Vector(_x,_y),_color);
			vert1 = new phoenix_geometry_Vertex(new phoenix_Vector(_x + _w,_y),_color);
			vert2 = new phoenix_geometry_Vertex(new phoenix_Vector(_x + _w,_y + _h),_color);
			vert3 = new phoenix_geometry_Vertex(new phoenix_Vector(_x,_y + _h),_color);
			vert4 = new phoenix_geometry_Vertex(new phoenix_Vector(_x,_y),_color);
			vert5 = new phoenix_geometry_Vertex(new phoenix_Vector(_x + _w,_y + _h),_color);
			quad = [vert0,vert1,vert2,vert3,vert4,vert5];
			this.cache[_letteridx] = quad;
		} else {
			vert0 = quad[0];
			vert1 = quad[1];
			vert2 = quad[2];
			vert3 = quad[3];
			vert4 = quad[4];
			vert5 = quad[5];
			var _this = vert0.pos;
			var prev = _this.ignore_listeners;
			_this.ignore_listeners = true;
			_this.x = _x;
			if(!_this._construct) {
				if(_this.listen_x != null && !_this.ignore_listeners) {
					_this.listen_x(_x);
				}
			}
			_this.y = _y;
			if(!_this._construct) {
				if(_this.listen_y != null && !_this.ignore_listeners) {
					_this.listen_y(_y);
				}
			}
			_this.ignore_listeners = prev;
			if(_this.listen_x != null && !_this.ignore_listeners) {
				_this.listen_x(_this.x);
			}
			if(_this.listen_y != null && !_this.ignore_listeners) {
				_this.listen_y(_this.y);
			}
			var _this1 = vert1.pos;
			var _x1 = _x + _w;
			var prev1 = _this1.ignore_listeners;
			_this1.ignore_listeners = true;
			_this1.x = _x1;
			if(!_this1._construct) {
				if(_this1.listen_x != null && !_this1.ignore_listeners) {
					_this1.listen_x(_x1);
				}
			}
			_this1.y = _y;
			if(!_this1._construct) {
				if(_this1.listen_y != null && !_this1.ignore_listeners) {
					_this1.listen_y(_y);
				}
			}
			_this1.ignore_listeners = prev1;
			if(_this1.listen_x != null && !_this1.ignore_listeners) {
				_this1.listen_x(_this1.x);
			}
			if(_this1.listen_y != null && !_this1.ignore_listeners) {
				_this1.listen_y(_this1.y);
			}
			var _this2 = vert2.pos;
			var _x2 = _x + _w;
			var _y1 = _y + _h;
			var prev2 = _this2.ignore_listeners;
			_this2.ignore_listeners = true;
			_this2.x = _x2;
			if(!_this2._construct) {
				if(_this2.listen_x != null && !_this2.ignore_listeners) {
					_this2.listen_x(_x2);
				}
			}
			_this2.y = _y1;
			if(!_this2._construct) {
				if(_this2.listen_y != null && !_this2.ignore_listeners) {
					_this2.listen_y(_y1);
				}
			}
			_this2.ignore_listeners = prev2;
			if(_this2.listen_x != null && !_this2.ignore_listeners) {
				_this2.listen_x(_this2.x);
			}
			if(_this2.listen_y != null && !_this2.ignore_listeners) {
				_this2.listen_y(_this2.y);
			}
			var _this3 = vert3.pos;
			var _y2 = _y + _h;
			var prev3 = _this3.ignore_listeners;
			_this3.ignore_listeners = true;
			_this3.x = _x;
			if(!_this3._construct) {
				if(_this3.listen_x != null && !_this3.ignore_listeners) {
					_this3.listen_x(_x);
				}
			}
			_this3.y = _y2;
			if(!_this3._construct) {
				if(_this3.listen_y != null && !_this3.ignore_listeners) {
					_this3.listen_y(_y2);
				}
			}
			_this3.ignore_listeners = prev3;
			if(_this3.listen_x != null && !_this3.ignore_listeners) {
				_this3.listen_x(_this3.x);
			}
			if(_this3.listen_y != null && !_this3.ignore_listeners) {
				_this3.listen_y(_this3.y);
			}
			var _this4 = vert4.pos;
			var prev4 = _this4.ignore_listeners;
			_this4.ignore_listeners = true;
			_this4.x = _x;
			if(!_this4._construct) {
				if(_this4.listen_x != null && !_this4.ignore_listeners) {
					_this4.listen_x(_x);
				}
			}
			_this4.y = _y;
			if(!_this4._construct) {
				if(_this4.listen_y != null && !_this4.ignore_listeners) {
					_this4.listen_y(_y);
				}
			}
			_this4.ignore_listeners = prev4;
			if(_this4.listen_x != null && !_this4.ignore_listeners) {
				_this4.listen_x(_this4.x);
			}
			if(_this4.listen_y != null && !_this4.ignore_listeners) {
				_this4.listen_y(_this4.y);
			}
			var _this5 = vert5.pos;
			var _x3 = _x + _w;
			var _y3 = _y + _h;
			var prev5 = _this5.ignore_listeners;
			_this5.ignore_listeners = true;
			_this5.x = _x3;
			if(!_this5._construct) {
				if(_this5.listen_x != null && !_this5.ignore_listeners) {
					_this5.listen_x(_x3);
				}
			}
			_this5.y = _y3;
			if(!_this5._construct) {
				if(_this5.listen_y != null && !_this5.ignore_listeners) {
					_this5.listen_y(_y3);
				}
			}
			_this5.ignore_listeners = prev5;
			if(_this5.listen_x != null && !_this5.ignore_listeners) {
				_this5.listen_x(_this5.x);
			}
			if(_this5.listen_y != null && !_this5.ignore_listeners) {
				_this5.listen_y(_this5.y);
			}
		}
		var _this6 = vert0.uv.uv0;
		_this6.u = _u;
		_this6.v = _v;
		var _this7 = vert1.uv.uv0;
		_this7.u = _u2;
		_this7.v = _v;
		var _this8 = vert2.uv.uv0;
		_this8.u = _u2;
		_this8.v = _v2;
		var _this9 = vert3.uv.uv0;
		_this9.u = _u;
		_this9.v = _v2;
		var _this10 = vert4.uv.uv0;
		_this10.u = _u;
		_this10.v = _v;
		var _this11 = vert5.uv.uv0;
		_this11.u = _u2;
		_this11.v = _v2;
		if(Math.floor(this.vertices.length / 6) <= _letteridx) {
			this.add(vert0);
			this.add(vert1);
			this.add(vert2);
			this.add(vert3);
			this.add(vert4);
			this.add(vert5);
		}
	}
	,set_dirty_sizing: function(_b) {
		this.dirty_align = true;
		return this.dirty_sizing = _b;
	}
	,set_bounds: function(_bounds) {
		this.bounds = _bounds;
		if(this.bounds == null) {
			return this.bounds;
		}
		this.set_dirty_sizing(true);
		this.update_text();
		return this.bounds;
	}
	,set_bounds_wrap: function(_wrap) {
		this.bounds_wrap = _wrap;
		this.set_dirty_sizing(true);
		this.update_text();
		return this.bounds_wrap;
	}
	,set_letter_snapping: function(_snap) {
		this.letter_snapping = _snap;
		this.set_dirty_sizing(true);
		this.update_text();
		return this.letter_snapping;
	}
	,set_line_spacing: function(_line_spacing) {
		this.line_spacing = _line_spacing;
		this.set_dirty_sizing(true);
		this.update_text();
		return this.line_spacing;
	}
	,set_letter_spacing: function(_letter_spacing) {
		this.letter_spacing = _letter_spacing;
		this.set_dirty_sizing(true);
		this.update_text();
		return this.letter_spacing;
	}
	,set_align: function(_align) {
		this.align = _align;
		this.dirty_align = true;
		this.update_text();
		return this.align;
	}
	,set_align_vertical: function(_align_vertical) {
		this.align_vertical = _align_vertical;
		this.dirty_align = true;
		this.update_text();
		return this.align_vertical;
	}
	,set_point_size: function(s) {
		if(s < 0) {
			s = 0;
		}
		this.point_size = s;
		this.set_dirty_sizing(true);
		this.update_text();
		return this.point_size;
	}
	,set_font: function(_font) {
		this.font = _font;
		if(!this.setup_ && _font != null) {
			this.set_texture(this.font.pages.h[0]);
			this.set_dirty_sizing(true);
			this.dirty_align = true;
			this.update_text();
		}
		return this.font;
	}
	,set_smoothness: function(s) {
		if(s < 0) {
			s = 0;
		}
		if(this.state.shader != null && this.sdf && this.unique) {
			var _this = this.state.shader;
			var _this1 = _this.uniforms;
			var _location = snow_modules_opengl_web_GL.gl.getUniformLocation(_this.program,"smoothness");
			var _float = _this1.floats.get("smoothness");
			if(_float != null) {
				_float.value = s;
			} else {
				_float = new phoenix__$Shader_Uniform_$Float("smoothness",s,_location);
				_this1.floats.set("smoothness",_float);
			}
			_this1.dirty_floats.push(_float);
		}
		return this.smoothness = s;
	}
	,set_thickness: function(s) {
		if(s < 0) {
			s = 0;
		}
		if(this.state.shader != null && this.sdf && this.unique) {
			var _this = this.state.shader;
			var _this1 = _this.uniforms;
			var _location = snow_modules_opengl_web_GL.gl.getUniformLocation(_this.program,"thickness");
			var _float = _this1.floats.get("thickness");
			if(_float != null) {
				_float.value = s;
			} else {
				_float = new phoenix__$Shader_Uniform_$Float("thickness",s,_location);
				_this1.floats.set("thickness",_float);
			}
			_this1.dirty_floats.push(_float);
		}
		return this.thickness = s;
	}
	,set_outline: function(s) {
		if(s < 0.0) {
			s = 0.0;
		} else if(s > 1.0) {
			s = 1.0;
		} else {
			s = s;
		}
		if(this.state.shader != null && this.sdf && this.unique) {
			var _this = this.state.shader;
			var _this1 = _this.uniforms;
			var _location = snow_modules_opengl_web_GL.gl.getUniformLocation(_this.program,"outline");
			var _float = _this1.floats.get("outline");
			if(_float != null) {
				_float.value = s;
			} else {
				_float = new phoenix__$Shader_Uniform_$Float("outline",s,_location);
				_this1.floats.set("outline",_float);
			}
			_this1.dirty_floats.push(_float);
		}
		return this.outline = s;
	}
	,set_glow_threshold: function(s) {
		if(s < 0) {
			s = 0;
		}
		if(this.state.shader != null && this.sdf && this.unique) {
			var _this = this.state.shader;
			var _this1 = _this.uniforms;
			var _location = snow_modules_opengl_web_GL.gl.getUniformLocation(_this.program,"glow_threshold");
			var _float = _this1.floats.get("glow_threshold");
			if(_float != null) {
				_float.value = s;
			} else {
				_float = new phoenix__$Shader_Uniform_$Float("glow_threshold",s,_location);
				_this1.floats.set("glow_threshold",_float);
			}
			_this1.dirty_floats.push(_float);
		}
		return this.glow_threshold = s;
	}
	,set_glow_amount: function(s) {
		if(s < 0) {
			s = 0;
		}
		if(this.state.shader != null && this.sdf && this.unique) {
			var _this = this.state.shader;
			var _this1 = _this.uniforms;
			var _location = snow_modules_opengl_web_GL.gl.getUniformLocation(_this.program,"glow_amount");
			var _float = _this1.floats.get("glow_amount");
			if(_float != null) {
				_float.value = s;
			} else {
				_float = new phoenix__$Shader_Uniform_$Float("glow_amount",s,_location);
				_this1.floats.set("glow_amount",_float);
			}
			_this1.dirty_floats.push(_float);
		}
		return this.glow_amount = s;
	}
	,set_outline_color: function(c) {
		if(c == null) {
			return this.outline_color = c;
		}
		if(this.state.shader != null && this.sdf && this.unique) {
			var _this = this.state.shader;
			var _this1 = _this.uniforms;
			var _location = snow_modules_opengl_web_GL.gl.getUniformLocation(_this.program,"outline_color");
			var _color = _this1.colors.get("outline_color");
			if(_color != null) {
				_color.value = c;
			} else {
				_color = new phoenix__$Shader_Uniform_$phoenix_$Color("outline_color",c,_location);
				_this1.colors.set("outline_color",_color);
			}
			_this1.dirty_colors.push(_color);
		}
		return this.outline_color = c;
	}
	,set_glow_color: function(c) {
		if(c == null) {
			return this.glow_color = c;
		}
		if(this.state.shader != null && this.sdf && this.unique) {
			var _this = this.state.shader;
			var _this1 = _this.uniforms;
			var _location = snow_modules_opengl_web_GL.gl.getUniformLocation(_this.program,"glow_color");
			var _color = _this1.colors.get("glow_color");
			if(_color != null) {
				_color.value = c;
			} else {
				_color = new phoenix__$Shader_Uniform_$phoenix_$Color("glow_color",c,_location);
				_this1.colors.set("glow_color",_color);
			}
			_this1.dirty_colors.push(_color);
		}
		return this.glow_color = c;
	}
	,flush_uniforms: function() {
		if(this.state.shader != null && this.sdf) {
			var _this = this.state.shader;
			var _value = this.smoothness;
			var _this1 = _this.uniforms;
			var _location = snow_modules_opengl_web_GL.gl.getUniformLocation(_this.program,"smoothness");
			var _float = _this1.floats.get("smoothness");
			if(_float != null) {
				_float.value = _value;
			} else {
				_float = new phoenix__$Shader_Uniform_$Float("smoothness",_value,_location);
				_this1.floats.set("smoothness",_float);
			}
			_this1.dirty_floats.push(_float);
			var _this2 = this.state.shader;
			var _value1 = this.thickness;
			var _this3 = _this2.uniforms;
			var _location1 = snow_modules_opengl_web_GL.gl.getUniformLocation(_this2.program,"thickness");
			var _float1 = _this3.floats.get("thickness");
			if(_float1 != null) {
				_float1.value = _value1;
			} else {
				_float1 = new phoenix__$Shader_Uniform_$Float("thickness",_value1,_location1);
				_this3.floats.set("thickness",_float1);
			}
			_this3.dirty_floats.push(_float1);
			var _this4 = this.state.shader;
			var _value2 = this.outline;
			var _this5 = _this4.uniforms;
			var _location2 = snow_modules_opengl_web_GL.gl.getUniformLocation(_this4.program,"outline");
			var _float2 = _this5.floats.get("outline");
			if(_float2 != null) {
				_float2.value = _value2;
			} else {
				_float2 = new phoenix__$Shader_Uniform_$Float("outline",_value2,_location2);
				_this5.floats.set("outline",_float2);
			}
			_this5.dirty_floats.push(_float2);
			var _this6 = this.state.shader;
			var _value3 = this.glow_threshold;
			var _this7 = _this6.uniforms;
			var _location3 = snow_modules_opengl_web_GL.gl.getUniformLocation(_this6.program,"glow_threshold");
			var _float3 = _this7.floats.get("glow_threshold");
			if(_float3 != null) {
				_float3.value = _value3;
			} else {
				_float3 = new phoenix__$Shader_Uniform_$Float("glow_threshold",_value3,_location3);
				_this7.floats.set("glow_threshold",_float3);
			}
			_this7.dirty_floats.push(_float3);
			var _this8 = this.state.shader;
			var _value4 = this.glow_amount;
			var _this9 = _this8.uniforms;
			var _location4 = snow_modules_opengl_web_GL.gl.getUniformLocation(_this8.program,"glow_amount");
			var _float4 = _this9.floats.get("glow_amount");
			if(_float4 != null) {
				_float4.value = _value4;
			} else {
				_float4 = new phoenix__$Shader_Uniform_$Float("glow_amount",_value4,_location4);
				_this9.floats.set("glow_amount",_float4);
			}
			_this9.dirty_floats.push(_float4);
			var _this10 = this.state.shader;
			var _value5 = this.outline_color;
			var _this11 = _this10.uniforms;
			var _location5 = snow_modules_opengl_web_GL.gl.getUniformLocation(_this10.program,"outline_color");
			var _color = _this11.colors.get("outline_color");
			if(_color != null) {
				_color.value = _value5;
			} else {
				_color = new phoenix__$Shader_Uniform_$phoenix_$Color("outline_color",_value5,_location5);
				_this11.colors.set("outline_color",_color);
			}
			_this11.dirty_colors.push(_color);
			var _this12 = this.state.shader;
			var _value6 = this.glow_color;
			var _this13 = _this12.uniforms;
			var _location6 = snow_modules_opengl_web_GL.gl.getUniformLocation(_this12.program,"glow_color");
			var _color1 = _this13.colors.get("glow_color");
			if(_color1 != null) {
				_color1.value = _value6;
			} else {
				_color1 = new phoenix__$Shader_Uniform_$phoenix_$Color("glow_color",_value6,_location6);
				_this13.colors.set("glow_color",_color1);
			}
			_this13.dirty_colors.push(_color1);
		}
	}
	,__class__: phoenix_geometry_TextGeometry
	,__properties__: $extend(phoenix_geometry_Geometry.prototype.__properties__,{set_dirty_sizing:"set_dirty_sizing",set_glow_color:"set_glow_color",set_glow_amount:"set_glow_amount",set_glow_threshold:"set_glow_threshold",set_outline_color:"set_outline_color",set_outline:"set_outline",set_thickness:"set_thickness",set_smoothness:"set_smoothness",set_align_vertical:"set_align_vertical",set_align:"set_align",set_bounds_wrap:"set_bounds_wrap",set_bounds:"set_bounds",set_letter_snapping:"set_letter_snapping",set_letter_spacing:"set_letter_spacing",set_line_spacing:"set_line_spacing",set_point_size:"set_point_size",set_font:"set_font",set_text:"set_text"})
});
var phoenix_geometry_TextureCoordSet = function() {
	this.uv0 = new phoenix_geometry_TextureCoord();
	this.uv1 = new phoenix_geometry_TextureCoord();
	this.uv2 = new phoenix_geometry_TextureCoord();
	this.uv3 = new phoenix_geometry_TextureCoord();
	this.uv4 = new phoenix_geometry_TextureCoord();
	this.uv5 = new phoenix_geometry_TextureCoord();
	this.uv6 = new phoenix_geometry_TextureCoord();
	this.uv7 = new phoenix_geometry_TextureCoord();
};
$hxClasses["phoenix.geometry.TextureCoordSet"] = phoenix_geometry_TextureCoordSet;
phoenix_geometry_TextureCoordSet.__name__ = true;
phoenix_geometry_TextureCoordSet.prototype = {
	__class__: phoenix_geometry_TextureCoordSet
};
var phoenix_geometry_TextureCoord = function(_u,_v,_w,_t) {
	if(_t == null) {
		_t = 0.0;
	}
	if(_w == null) {
		_w = 0.0;
	}
	if(_v == null) {
		_v = 0.0;
	}
	if(_u == null) {
		_u = 0.0;
	}
	this.t = 0.0;
	this.w = 0.0;
	this.v = 0.0;
	this.u = 0.0;
	this.u = _u;
	this.v = _v;
	this.w = _w;
	this.t = _t;
};
$hxClasses["phoenix.geometry.TextureCoord"] = phoenix_geometry_TextureCoord;
phoenix_geometry_TextureCoord.__name__ = true;
phoenix_geometry_TextureCoord.prototype = {
	__class__: phoenix_geometry_TextureCoord
};
var phoenix_geometry_Vertex = function(_pos,_color,_normal) {
	this.uv = new phoenix_geometry_TextureCoordSet();
	this.pos = _pos;
	this.color = _color == null ? new phoenix_Color() : _color;
	this.normal = _normal == null ? new phoenix_Vector() : _normal;
};
$hxClasses["phoenix.geometry.Vertex"] = phoenix_geometry_Vertex;
phoenix_geometry_Vertex.__name__ = true;
phoenix_geometry_Vertex.prototype = {
	__class__: phoenix_geometry_Vertex
};
var snow_Snow = function(_host) {
	this.had_ready_event = false;
	this.i = 0;
	this.immediate_shutdown = false;
	this.has_shutdown = false;
	this.shutting_down = false;
	this.debug = false;
	this.platform = "unknown";
	this.ready = false;
	this.freeze = false;
	if(_host == null) {
		throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_host was null" + (" ( " + "snow App instance was null!" + " )")));
	}
	this.host = _host;
	this.host.app = this;
	this.config = this.default_config();
	this.sys_event = new snow_types_SystemEvent();
	this.win_event = new snow_types_WindowEvent();
	this.io = new snow_systems_io_IO(this);
	this.input = new snow_systems_input_Input(this);
	this.audio = new snow_systems_audio_Audio(this);
	this.assets = new snow_systems_assets_Assets(this);
	this.extensions = [];
	var _g = 0;
	var _g1 = snow_types_Config.extensions;
	while(_g < _g1.length) {
		var _ext_type = _g1[_g];
		++_g;
		var _class = Type.resolveClass(_ext_type);
		if(_class == null) {
			throw new js__$Boot_HaxeError(snow_types_Error.error("Extension `" + _ext_type + "`: Type not found via Type.resolveClass!"));
		}
		var _instance = Type.createInstance(_class,null);
		if(_instance == null) {
			throw new js__$Boot_HaxeError(snow_types_Error.error("Extension `" + _ext_type + "`: Instance was null on calling new()!"));
		}
		this.extensions.push(_instance);
	}
	this.runtime = new snow_core_web_Runtime(this);
	if(this.os == null) {
		throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("os was null" + (" ( " + "init - Runtime didn't set the app.os value!" + " )")));
	}
	if(this.platform == null) {
		throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("platform was null" + (" ( " + "init - Runtime didn't set the app.platform value!" + " )")));
	}
	this.dispatch_event(1);
	this.host.internal_init();
	snow_api_Promises.step();
	while(snow_Snow.next_queue.length > 0) {
		var count = snow_Snow.next_queue.length;
		var i = 0;
		while(i < count) {
			(snow_Snow.next_queue.shift())();
			++i;
		}
	}
	while(snow_Snow.defer_queue.length > 0) {
		var count1 = snow_Snow.defer_queue.length;
		var i1 = 0;
		while(i1 < count1) {
			(snow_Snow.defer_queue.shift())();
			++i1;
		}
	}
	this.dispatch_event(2);
	snow_api_Promises.step();
	while(snow_Snow.next_queue.length > 0) {
		var count2 = snow_Snow.next_queue.length;
		var i2 = 0;
		while(i2 < count2) {
			(snow_Snow.next_queue.shift())();
			++i2;
		}
	}
	while(snow_Snow.defer_queue.length > 0) {
		var count3 = snow_Snow.defer_queue.length;
		var i3 = 0;
		while(i3 < count3) {
			(snow_Snow.defer_queue.shift())();
			++i3;
		}
	}
	if(this.runtime.run() && !(this.has_shutdown || this.shutting_down)) {
		this.shutdown();
	}
};
$hxClasses["snow.Snow"] = snow_Snow;
snow_Snow.__name__ = true;
snow_Snow.prototype = {
	shutdown: function() {
		if(this.shutting_down) {
			haxe_Log.trace("     i / snow / " + "shutdown / called again, already shutting down - ignoring",{ fileName : "Snow.hx", lineNumber : 158, className : "snow.Snow", methodName : "shutdown"});
			return;
		}
		if(this.has_shutdown != false) {
			throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("has_shutdown == false" + (" ( " + "snow - calling shutdown more than once is disallowed" + " )")));
		}
		this.shutting_down = true;
		this.host.ondestroy();
		this.dispatch_event(7);
		this.io.shutdown();
		this.audio.shutdown();
		this.assets.shutdown();
		this.runtime.shutdown(this.immediate_shutdown);
		this.has_shutdown = true;
	}
	,dispatch_event: function(_type) {
		var _this = this.sys_event;
		_this.type = _type;
		_this.window = null;
		_this.input = null;
		this.onevent(this.sys_event);
	}
	,dispatch_window_event: function(_type,_timestamp,_window_id,_x,_y) {
		var _this = this.win_event;
		_this.type = _type;
		_this.timestamp = _timestamp;
		_this.window_id = _window_id;
		_this.x = _x;
		_this.y = _y;
		var _this1 = this.sys_event;
		_this1.type = 8;
		_this1.window = this.win_event;
		_this1.input = null;
		this.onevent(this.sys_event);
	}
	,dispatch_input_event: function(_event) {
		var _this = this.sys_event;
		_this.type = 9;
		_this.window = null;
		_this.input = _event;
		this.onevent(this.sys_event);
	}
	,onevent: function(_event) {
		this.audio.onevent(_event);
		this.input.onevent(_event);
		this.host.onevent(_event);
		this.i = 0;
		while(this.i < this.extensions.length) {
			this.extensions[this.i].onevent(_event);
			++this.i;
		}
		switch(_event.type) {
		case 2:
			var _gthis = this;
			if(this.had_ready_event != false) {
				throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("had_ready_event == false" + (" ( " + "snow; the ready event should not be fired repeatedly" + " )")));
			}
			this.had_ready_event = true;
			this.setup_configs().then(function(_) {
				_gthis.runtime.ready();
				_gthis.host.ready();
				_gthis.ready = true;
			}).error(function(e) {
				throw new js__$Boot_HaxeError(snow_types_Error.init("snow / cannot recover from error: " + e));
			});
			snow_api_Promises.step();
			while(snow_Snow.next_queue.length > 0) {
				var count = snow_Snow.next_queue.length;
				var i = 0;
				while(i < count) {
					(snow_Snow.next_queue.shift())();
					++i;
				}
			}
			while(snow_Snow.defer_queue.length > 0) {
				var count1 = snow_Snow.defer_queue.length;
				var i1 = 0;
				while(i1 < count1) {
					(snow_Snow.defer_queue.shift())();
					++i1;
				}
			}
			break;
		case 3:
			if(!this.freeze) {
				snow_api_Timer.update();
				snow_api_Promises.step();
				var count2 = snow_Snow.next_queue.length;
				var i2 = 0;
				while(i2 < count2) {
					(snow_Snow.next_queue.shift())();
					++i2;
				}
				if(!this.shutting_down && this.ready) {
					this.host.internal_tick();
				}
				var count3 = snow_Snow.defer_queue.length;
				var i3 = 0;
				while(i3 < count3) {
					(snow_Snow.defer_queue.shift())();
					++i3;
				}
			}
			break;
		case 7:
			haxe_Log.trace("     i / snow / " + "goodbye.",{ fileName : "Snow.hx", lineNumber : 248, className : "snow.Snow", methodName : "onevent"});
			break;
		case 10:
			this.shutdown();
			break;
		case 11:
			this.immediate_shutdown = true;
			this.shutdown();
			break;
		default:
		}
	}
	,setup_configs: function() {
		var _gthis = this;
		if(snow_types_Config.app_config == null || snow_types_Config.app_config == "") {
			this.config = this.host.config(this.config);
			return snow_api_Promise.resolve();
		}
		return new snow_api_Promise(function(resolve,reject) {
			_gthis.default_user_config().then(function(_user_conf) {
				_gthis.config.user = _user_conf;
			}).error(function(error) {
				throw new js__$Boot_HaxeError(snow_types_Error.init("config / failed / default user config JSON failed to parse. Cannot recover. " + error));
			}).then(function() {
				_gthis.config = _gthis.host.config(_gthis.config);
				resolve();
			});
		});
	}
	,default_user_config: function() {
		var _gthis = this;
		return new snow_api_Promise(function(resolve,reject) {
			_gthis.io.data_flow(haxe_io_Path.join([_gthis.assets.root,snow_types_Config.app_config]),snow_systems_assets_AssetJSON.processor).then(resolve).error(function(error) {
				if(error[1] == 2) {
					reject(error);
				} else {
					haxe_Log.trace("     i / snow / " + ("config / user config will be null! / " + Std.string(error)),{ fileName : "Snow.hx", lineNumber : 395, className : "snow.Snow", methodName : "default_user_config"});
					resolve(null);
				}
			});
		});
	}
	,default_config: function() {
		return { user : null, window : this.default_window_config(), render : this.default_render_config(), runtime : null};
	}
	,default_render_config: function() {
		return { depth : 0, stencil : 0, antialiasing : 0, red_bits : 8, green_bits : 8, blue_bits : 8, alpha_bits : 8, default_clear : { r : 0, g : 0, b : 0, a : 1}, opengl : { major : 0, minor : 0, profile : 0}, webgl : { version : 1}};
	}
	,default_window_config: function() {
		return { true_fullscreen : false, fullscreen : false, borderless : false, resizable : true, x : 536805376, y : 536805376, width : 960, height : 640, title : "snow app", no_input : false, background_sleep : 0.0666666666666666657};
	}
	,__class__: snow_Snow
};
var snow_api_DebugError = { __ename__ : true, __constructs__ : ["assertion","null_assertion"] };
snow_api_DebugError.assertion = function(expr) { var $x = ["assertion",0,expr]; $x.__enum__ = snow_api_DebugError; $x.toString = $estr; return $x; };
snow_api_DebugError.null_assertion = function(expr) { var $x = ["null_assertion",1,expr]; $x.__enum__ = snow_api_DebugError; $x.toString = $estr; return $x; };
var snow_api_Emitter = function() {
	this._checking = false;
	this._to_remove = new List();
	this.connected = new List();
	this.bindings = new haxe_ds_IntMap();
};
$hxClasses["snow.api.Emitter"] = snow_api_Emitter;
snow_api_Emitter.__name__ = true;
snow_api_Emitter.prototype = {
	emit: function(event,data) {
		this._check();
		var list = this.bindings.h[event];
		if(list != null && list.length > 0) {
			var _g = 0;
			while(_g < list.length) {
				var handler = list[_g];
				++_g;
				handler(data);
			}
		}
		this._check();
	}
	,_check: function() {
		if(this._checking) {
			return;
		}
		this._checking = true;
		if(this._to_remove.length > 0) {
			var _g_head = this._to_remove.h;
			while(_g_head != null) {
				var val = _g_head.item;
				_g_head = _g_head.next;
				var list = this.bindings.h[val.event];
				HxOverrides.remove(list,val.handler);
				if(list.length == 0) {
					this.bindings.remove(val.event);
				}
			}
			this._to_remove = null;
			this._to_remove = new List();
		}
		this._checking = false;
	}
	,__class__: snow_api_Emitter
};
var snow_api_Promise = function(func) {
	this.was_caught = false;
	var _gthis = this;
	this.state = 0;
	this.reject_reactions = [];
	this.fulfill_reactions = [];
	this.settle_reactions = [];
	snow_api_Promises.queue(function() {
		func($bind(_gthis,_gthis.onfulfill),$bind(_gthis,_gthis.onreject));
		snow_api_Promises.defer(snow_api_Promises.next);
	});
};
$hxClasses["snow.api.Promise"] = snow_api_Promise;
snow_api_Promise.__name__ = true;
snow_api_Promise.all = function(list) {
	return new snow_api_Promise(function(ok,no) {
		var current = 0;
		var total = list.length;
		var fulfill_result = [];
		var reject_result = null;
		var all_state = 0;
		var single_ok = function(index,val) {
			if(all_state != 0) {
				return;
			}
			current += 1;
			fulfill_result[index] = val;
			if(total == current) {
				all_state = 1;
				ok(fulfill_result);
			}
		};
		var single_err = function(val1) {
			if(all_state != 0) {
				return;
			}
			all_state = 2;
			reject_result = val1;
			no(reject_result);
		};
		var index1 = 0;
		var _g = 0;
		while(_g < list.length) {
			var promise = list[_g];
			++_g;
			promise.then((function(a1,f) {
				return function(a2) {
					f[0](a1[0],a2);
				};
			})([index1],[single_ok])).error(single_err);
			++index1;
		}
	});
};
snow_api_Promise.reject = function(reason) {
	return new snow_api_Promise(function(ok,no) {
		no(reason);
	});
};
snow_api_Promise.resolve = function(val) {
	return new snow_api_Promise(function(ok,no) {
		ok(val);
	});
};
snow_api_Promise.prototype = {
	then: function(on_fulfilled,on_rejected) {
		switch(this.state) {
		case 0:
			this.add_fulfill(on_fulfilled);
			this.add_reject(on_rejected);
			return this.new_linked_promise();
		case 1:
			snow_api_Promises.defer(on_fulfilled,this.result);
			return snow_api_Promise.resolve(this.result);
		case 2:
			snow_api_Promises.defer(on_rejected,this.result);
			return snow_api_Promise.reject(this.result);
		}
	}
	,error: function(on_rejected) {
		switch(this.state) {
		case 0:
			this.add_reject(on_rejected);
			return this.new_linked_resolve_empty();
		case 1:
			return snow_api_Promise.resolve(this.result);
		case 2:
			snow_api_Promises.defer(on_rejected,this.result);
			return snow_api_Promise.reject(this.result);
		}
	}
	,add_settle: function(f) {
		if(this.state == 0) {
			this.settle_reactions.push(f);
		} else {
			snow_api_Promises.defer(f,this.result);
		}
	}
	,new_linked_promise: function() {
		var _gthis = this;
		return new snow_api_Promise(function(f,r) {
			_gthis.add_settle(function(_) {
				if(_gthis.state == 1) {
					f(_gthis.result);
				} else {
					r(_gthis.result);
				}
			});
		});
	}
	,new_linked_resolve_empty: function() {
		var _gthis = this;
		return new snow_api_Promise(function(f,r) {
			_gthis.add_settle(function(_) {
				f();
			});
		});
	}
	,add_fulfill: function(f) {
		if(f != null) {
			this.fulfill_reactions.push(f);
		}
	}
	,add_reject: function(f) {
		if(f != null) {
			this.was_caught = true;
			this.reject_reactions.push(f);
		}
	}
	,onfulfill: function(val) {
		this.state = 1;
		this.result = val;
		while(this.fulfill_reactions.length > 0) this.fulfill_reactions.shift()(this.result);
		this.onsettle();
	}
	,onreject: function(reason) {
		this.state = 2;
		this.result = reason;
		while(this.reject_reactions.length > 0) this.reject_reactions.shift()(this.result);
		this.onsettle();
	}
	,onsettle: function() {
		while(this.settle_reactions.length > 0) this.settle_reactions.shift()(this.result);
	}
	,__class__: snow_api_Promise
};
var snow_api_Promises = function() { };
$hxClasses["snow.api.Promises"] = snow_api_Promises;
snow_api_Promises.__name__ = true;
snow_api_Promises.step = function() {
	snow_api_Promises.next();
	while(snow_api_Promises.defers.length > 0) {
		var defer = snow_api_Promises.defers.shift();
		defer.f(defer.a);
	}
};
snow_api_Promises.next = function() {
	if(snow_api_Promises.calls.length > 0) {
		(snow_api_Promises.calls.shift())();
	}
};
snow_api_Promises.defer = function(f,a) {
	if(f == null) {
		return;
	}
	snow_api_Promises.defers.push({ f : f, a : a});
};
snow_api_Promises.queue = function(f) {
	if(f == null) {
		return;
	}
	snow_api_Promises.calls.push(f);
};
var snow_api_Timer = function(_time) {
	this.time = _time;
	snow_api_Timer.running_timers.push(this);
	this.fire_at = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start + this.time;
	this.running = true;
};
$hxClasses["snow.api.Timer"] = snow_api_Timer;
snow_api_Timer.__name__ = true;
snow_api_Timer.update = function() {
	var now = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
	var _g = 0;
	var _g1 = snow_api_Timer.running_timers;
	while(_g < _g1.length) {
		var timer = _g1[_g];
		++_g;
		if(timer.running) {
			if(timer.fire_at < now) {
				timer.fire_at += timer.time;
				timer.run();
			}
		}
	}
};
snow_api_Timer.prototype = {
	run: function() {
	}
	,stop: function() {
		if(this.running) {
			this.running = false;
			HxOverrides.remove(snow_api_Timer.running_timers,this);
		}
	}
	,__class__: snow_api_Timer
};
var snow_modules_interfaces_Audio = function() { };
$hxClasses["snow.modules.interfaces.Audio"] = snow_modules_interfaces_Audio;
snow_modules_interfaces_Audio.__name__ = true;
var snow_core_Extension = function() { };
$hxClasses["snow.core.Extension"] = snow_core_Extension;
snow_core_Extension.__name__ = true;
snow_core_Extension.prototype = {
	__class__: snow_core_Extension
};
var snow_core_Runtime = function() { };
$hxClasses["snow.core.Runtime"] = snow_core_Runtime;
snow_core_Runtime.__name__ = true;
var snow_core_web_Runtime = function(_app) {
	this.p_body_margin = "0";
	this.p_body_overflow = "0";
	this.p_height = 0;
	this.p_width = 0;
	this.p_s_height = "";
	this.p_s_width = "";
	this.p_margin = "0";
	this.p_padding = "0";
	this.gamepads_supported = false;
	this.window_dpr = 1.0;
	this.window_h = 0;
	this.window_w = 0;
	this.window_y = 0;
	this.window_x = 0;
	this.name = "web";
	this.app = _app;
	this.app.platform = "web";
	this.app.os = this.guess_os();
	snow_core_web_Runtime.timestamp_start = window.performance.now() / 1000.0;
	this.app.config.runtime = { window_id : "app", window_parent : window.document.body, prevent_default_context_menu : true, prevent_default_mouse_wheel : true, prevent_default_touches : true, prevent_default_keys : [1073741904,1073741903,1073741906,1073741905,8,9,127,32]};
	var _list = ($_=window.navigator,$bind($_,$_.getGamepads)) != null ? window.navigator.getGamepads() : window.navigator.webkitGetGamepads != null ? window.navigator.webkitGetGamepads() : null;
	if(_list != null) {
		this.gamepads_supported = true;
		this.gamepad_btns_cache = [];
		var _g = 0;
		while(_g < _list.length) {
			var _gamepad = _list[_g];
			++_g;
			if(_gamepad != null) {
				this.gamepad_btns_cache[_gamepad.index] = [];
				var _g1 = 0;
				var _g2 = _gamepad.buttons.length;
				while(_g1 < _g2) {
					++_g1;
					this.gamepad_btns_cache[_gamepad.index].push(0);
				}
			}
		}
	} else {
		haxe_Log.trace("  i / runtime / " + "Gamepads are not supported in this browser :(",{ fileName : "Runtime.hx", lineNumber : 861, className : "snow.core.web.Runtime", methodName : "gamepads_init"});
	}
	haxe_Log.trace("  i / runtime / " + "web / init ok",{ fileName : "Runtime.hx", lineNumber : 67, className : "snow.core.web.Runtime", methodName : "new"});
};
$hxClasses["snow.core.web.Runtime"] = snow_core_web_Runtime;
snow_core_web_Runtime.__name__ = true;
snow_core_web_Runtime.__interfaces__ = [snow_core_Runtime];
snow_core_web_Runtime.timestamp = function() {
	return window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
};
snow_core_web_Runtime.prototype = {
	window_device_pixel_ratio: function() {
		if(window.devicePixelRatio == null) {
			return 1.0;
		} else {
			return window.devicePixelRatio;
		}
	}
	,window_width: function() {
		return this.window.width;
	}
	,window_height: function() {
		return this.window.height;
	}
	,window_grab: function(enable) {
		if(enable) {
			if(($_=this.window,$bind($_,$_.requestPointerLock)) != null) {
				this.window.requestPointerLock();
			} else if(this.window.webkitRequestPointerLock != null) {
				this.window.webkitRequestPointerLock();
			} else if(this.window.mozRequestPointerLock != null) {
				this.window.mozRequestPointerLock();
			} else {
				return false;
			}
		} else if(($_=window.document,$bind($_,$_.exitPointerLock)) != null) {
			window.document.exitPointerLock();
		} else if(window.document.webkitExitPointerLock != null) {
			window.document.webkitExitPointerLock();
		} else if(window.document.mozExitPointerLock != null) {
			window.document.mozExitPointerLock();
		} else {
			return false;
		}
		return true;
	}
	,onresize_handler: function(_) {
		this.window.style.width = "" + Std.string(window.innerWidth) + "px";
		this.window.style.height = "" + Std.string(window.innerHeight) + "px";
	}
	,window_fullscreen: function(enable,true_fullscreen) {
		if(true_fullscreen == null) {
			true_fullscreen = false;
		}
		var _result = true;
		if(enable) {
			this.p_padding = this.window.style.padding;
			this.p_margin = this.window.style.margin;
			this.p_s_width = this.window.style.width;
			this.p_s_height = this.window.style.height;
			this.p_width = this.window.width;
			this.p_height = this.window.height;
			this.p_body_margin = window.document.body.style.margin;
			this.p_body_overflow = window.document.body.style.overflow;
			this.window.style.margin = "0";
			this.window.style.padding = "0";
			this.window.style.width = Std.string(window.innerWidth) + "px";
			this.window.style.height = Std.string(window.innerHeight) + "px";
			this.window_dpr = window.devicePixelRatio == null ? 1.0 : window.devicePixelRatio;
			this.window.width = Math.floor(window.innerWidth * this.window_dpr);
			this.window.height = Math.floor(window.innerHeight * this.window_dpr);
			window.document.body.style.margin = "0";
			window.document.body.style.overflow = "hidden";
			if(true_fullscreen) {
				if(($_=this.window,$bind($_,$_.requestFullscreen)) != null) {
					this.window.requestFullscreen();
				} else if(this.window.requestFullScreen != null) {
					this.window.requestFullScreen(null);
				} else if(this.window.webkitRequestFullscreen != null) {
					this.window.webkitRequestFullscreen();
				} else if(this.window.mozRequestFullScreen != null) {
					this.window.mozRequestFullScreen();
				} else {
					_result = false;
				}
			}
			window.addEventListener("resize",$bind(this,this.onresize_handler));
		} else {
			window.removeEventListener("resize",$bind(this,this.onresize_handler));
			this.window.style.padding = this.p_padding;
			this.window.style.margin = this.p_margin;
			this.window.style.width = this.p_s_width;
			this.window.style.height = this.p_s_height;
			this.window.width = this.p_width;
			this.window.height = this.p_height;
			window.document.body.style.margin = this.p_body_margin;
			window.document.body.style.overflow = this.p_body_overflow;
			if(true_fullscreen) {
				if(($_=window.document,$bind($_,$_.exitFullscreen)) != null) {
					window.document.exitFullscreen();
				} else if(window.document.webkitExitFullscreen != null) {
					window.document.webkitExitFullscreen();
				} else if(window.document.mozCancelFullScreen != null) {
					window.document.mozCancelFullScreen();
				} else {
					_result = false;
				}
			}
		}
		return _result;
	}
	,shutdown: function(_immediate) {
		if(_immediate == null) {
			_immediate = false;
		}
		haxe_Log.trace("  i / runtime / " + "runtime / web / shutdown",{ fileName : "Runtime.hx", lineNumber : 230, className : "snow.core.web.Runtime", methodName : "shutdown"});
		window.document.removeEventListener("visibilitychange",$bind(this,this.on_visibilitychange));
		window.document.removeEventListener("keydown",$bind(this,this.on_keydown));
		window.document.removeEventListener("keyup",$bind(this,this.on_keyup));
		window.document.removeEventListener("keypress",$bind(this,this.on_keypress));
		window.removeEventListener("gamepadconnected",$bind(this,this.on_gamepadconnected));
		window.removeEventListener("gamepaddisconnected",$bind(this,this.on_gamepaddisconnected));
		this.window.remove();
		this.window = null;
		snow_modules_opengl_web_GL.gl = null;
	}
	,run: function() {
		haxe_Log.trace("  i / runtime / " + "web / run",{ fileName : "Runtime.hx", lineNumber : 248, className : "snow.core.web.Runtime", methodName : "run"});
		this.loop_pre_ready();
		return false;
	}
	,ready: function() {
		haxe_Log.trace("  i / runtime / " + "web / ready",{ fileName : "Runtime.hx", lineNumber : 258, className : "snow.core.web.Runtime", methodName : "ready"});
		this.create_window();
	}
	,dispatch_window_ev: function(_type,_x,_y) {
		this.app.dispatch_window_event(_type,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1,_x,_y);
	}
	,setup_events: function() {
		var _gthis = this;
		this.window.addEventListener("mouseleave",function(_ev) {
			_gthis.dispatch_window_ev(11,null,null);
		});
		this.window.addEventListener("mouseenter",function(_ev1) {
			_gthis.dispatch_window_ev(10,null,null);
		});
		window.document.addEventListener("visibilitychange",$bind(this,this.on_visibilitychange));
		window.document.addEventListener("keydown",$bind(this,this.on_keydown));
		window.document.addEventListener("keyup",$bind(this,this.on_keyup));
		window.document.addEventListener("keypress",$bind(this,this.on_keypress));
		this.window.addEventListener("contextmenu",function(_ev2) {
			if(_gthis.app.config.runtime.prevent_default_context_menu) {
				_ev2.preventDefault();
			}
		});
		this.window.addEventListener("mousedown",function(_ev3) {
			_gthis.app.input.dispatch_mouse_down_event(Math.floor(_gthis.window_dpr * (_ev3.pageX - _gthis.window_x)),Math.floor(_gthis.window_dpr * (_ev3.pageY - _gthis.window_y)),_ev3.button + 1,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1);
		});
		this.window.addEventListener("mouseup",function(_ev4) {
			_gthis.app.input.dispatch_mouse_up_event(Math.floor(_gthis.window_dpr * (_ev4.pageX - _gthis.window_x)),Math.floor(_gthis.window_dpr * (_ev4.pageY - _gthis.window_y)),_ev4.button + 1,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1);
		});
		this.window.addEventListener("mousemove",function(_ev5) {
			var _movement_x = _ev5.movementX == null ? 0 : _ev5.movementX;
			var _movement_y = _ev5.movementY == null ? 0 : _ev5.movementY;
			_movement_x = Math.floor(_movement_x * _gthis.window_dpr);
			_movement_y = Math.floor(_movement_y * _gthis.window_dpr);
			_gthis.app.input.dispatch_mouse_move_event(Math.floor(_gthis.window_dpr * (_ev5.pageX - _gthis.window_x)),Math.floor(_gthis.window_dpr * (_ev5.pageY - _gthis.window_y)),_movement_x,_movement_y,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1);
		});
		this.window.addEventListener("wheel",function(_ev6) {
			if(_gthis.app.config.runtime.prevent_default_mouse_wheel) {
				_ev6.preventDefault();
			}
			_gthis.app.input.dispatch_mouse_wheel_event(_ev6.deltaX,_ev6.deltaY,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1);
		});
		this.window.addEventListener("touchstart",function(_ev7) {
			if(_gthis.app.config.runtime.prevent_default_touches) {
				_ev7.preventDefault();
			}
			var _bound = _gthis.window.getBoundingClientRect();
			var _g = 0;
			var _g1 = _ev7.changedTouches;
			while(_g < _g1.length) {
				var touch = _g1[_g];
				++_g;
				var _x = touch.clientX - _bound.left;
				var _y = touch.clientY - _bound.top;
				_x /= _bound.width;
				_y /= _bound.height;
				_gthis.app.input.dispatch_touch_down_event(_x,_y,0,0,touch.identifier,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start);
			}
		});
		this.window.addEventListener("touchend",function(_ev8) {
			if(_gthis.app.config.runtime.prevent_default_touches) {
				_ev8.preventDefault();
			}
			var _bound1 = _gthis.window.getBoundingClientRect();
			var _g2 = 0;
			var _g11 = _ev8.changedTouches;
			while(_g2 < _g11.length) {
				var touch1 = _g11[_g2];
				++_g2;
				var _x1 = touch1.clientX - _bound1.left;
				var _y1 = touch1.clientY - _bound1.top;
				_x1 /= _bound1.width;
				_y1 /= _bound1.height;
				_gthis.app.input.dispatch_touch_up_event(_x1,_y1,0,0,touch1.identifier,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start);
			}
		});
		this.window.addEventListener("touchmove",function(_ev9) {
			if(_gthis.app.config.runtime.prevent_default_touches) {
				_ev9.preventDefault();
			}
			var _bound2 = _gthis.window.getBoundingClientRect();
			var _g3 = 0;
			var _g12 = _ev9.changedTouches;
			while(_g3 < _g12.length) {
				var touch2 = _g12[_g3];
				++_g3;
				var _x2 = touch2.clientX - _bound2.left;
				var _y2 = touch2.clientY - _bound2.top;
				_x2 /= _bound2.width;
				_y2 /= _bound2.height;
				_gthis.app.input.dispatch_touch_move_event(_x2,_y2,0,0,touch2.identifier,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start);
			}
		});
		window.addEventListener("gamepadconnected",$bind(this,this.on_gamepadconnected));
		window.addEventListener("gamepaddisconnected",$bind(this,this.on_gamepaddisconnected));
	}
	,on_visibilitychange: function(_) {
		if(window.document.hidden) {
			this.app.dispatch_window_event(2,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1,null,null);
			this.app.dispatch_window_event(7,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1,null,null);
			this.app.dispatch_window_event(13,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1,null,null);
		} else {
			this.app.dispatch_window_event(1,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1,null,null);
			this.app.dispatch_window_event(9,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1,null,null);
			this.app.dispatch_window_event(12,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1,null,null);
		}
	}
	,on_keydown: function(_ev) {
		var dom_keycode = _ev.keyCode;
		var _keycode = dom_keycode >= 65 && dom_keycode <= 90 ? dom_keycode + 32 : snow_core_web__$Runtime_DOMKeys.dom_key_to_keycode(dom_keycode);
		var _scancode = snow_systems_input_Keycodes.to_scan(_keycode);
		this.app.input.mod_state.none = !_ev.altKey && !_ev.ctrlKey && !_ev.metaKey && !_ev.shiftKey;
		this.app.input.mod_state.lshift = _ev.shiftKey;
		this.app.input.mod_state.rshift = _ev.shiftKey;
		this.app.input.mod_state.lctrl = _ev.ctrlKey;
		this.app.input.mod_state.rctrl = _ev.ctrlKey;
		this.app.input.mod_state.lalt = _ev.altKey;
		this.app.input.mod_state.ralt = _ev.altKey;
		this.app.input.mod_state.lmeta = _ev.metaKey;
		this.app.input.mod_state.rmeta = _ev.metaKey;
		this.app.input.mod_state.num = false;
		this.app.input.mod_state.caps = false;
		this.app.input.mod_state.mode = false;
		this.app.input.mod_state.ctrl = _ev.ctrlKey;
		this.app.input.mod_state.shift = _ev.shiftKey;
		this.app.input.mod_state.alt = _ev.altKey;
		this.app.input.mod_state.meta = _ev.metaKey;
		var _mod_state = this.app.input.mod_state;
		if(this.app.config.runtime.prevent_default_keys.indexOf(_keycode) != -1) {
			_ev.preventDefault();
		}
		this.app.input.dispatch_key_down_event(_keycode,_scancode,_ev.repeat,_mod_state,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1);
	}
	,on_keyup: function(_ev) {
		var dom_keycode = _ev.keyCode;
		var _keycode = dom_keycode >= 65 && dom_keycode <= 90 ? dom_keycode + 32 : snow_core_web__$Runtime_DOMKeys.dom_key_to_keycode(dom_keycode);
		var _scancode = snow_systems_input_Keycodes.to_scan(_keycode);
		this.app.input.mod_state.none = !_ev.altKey && !_ev.ctrlKey && !_ev.metaKey && !_ev.shiftKey;
		this.app.input.mod_state.lshift = _ev.shiftKey;
		this.app.input.mod_state.rshift = _ev.shiftKey;
		this.app.input.mod_state.lctrl = _ev.ctrlKey;
		this.app.input.mod_state.rctrl = _ev.ctrlKey;
		this.app.input.mod_state.lalt = _ev.altKey;
		this.app.input.mod_state.ralt = _ev.altKey;
		this.app.input.mod_state.lmeta = _ev.metaKey;
		this.app.input.mod_state.rmeta = _ev.metaKey;
		this.app.input.mod_state.num = false;
		this.app.input.mod_state.caps = false;
		this.app.input.mod_state.mode = false;
		this.app.input.mod_state.ctrl = _ev.ctrlKey;
		this.app.input.mod_state.shift = _ev.shiftKey;
		this.app.input.mod_state.alt = _ev.altKey;
		this.app.input.mod_state.meta = _ev.metaKey;
		var _mod_state = this.app.input.mod_state;
		if(this.app.config.runtime.prevent_default_keys.indexOf(_keycode) != -1) {
			_ev.preventDefault();
		}
		this.app.input.dispatch_key_up_event(_keycode,_scancode,_ev.repeat,_mod_state,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1);
	}
	,on_keypress: function(_ev) {
		if(_ev.which != 0 && snow_core_web_Runtime.key_press_ignored.indexOf(_ev.keyCode) == -1) {
			var _text = String.fromCharCode(_ev.charCode);
			this.app.input.dispatch_text_event(_text,0,_text.length,2,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1);
		}
	}
	,on_gamepadconnected: function(_ev) {
		var _gamepad = _ev.gamepad;
		this.gamepad_btns_cache[_gamepad.index] = [];
		var _g1 = 0;
		var _g = _gamepad.buttons.length;
		while(_g1 < _g) {
			++_g1;
			this.gamepad_btns_cache[_gamepad.index].push(0);
		}
		this.app.input.dispatch_gamepad_device_event(_ev.gamepad.index,_ev.gamepad.id,1,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start);
	}
	,on_gamepaddisconnected: function(_ev) {
		this.gamepad_btns_cache[_ev.gamepad.index] = null;
		this.app.input.dispatch_gamepad_device_event(_ev.gamepad.index,_ev.gamepad.id,2,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start);
	}
	,create_window: function() {
		var config = this.app.config.window;
		this.window = window.document.createElement("canvas");
		this.window_dpr = window.devicePixelRatio == null ? 1.0 : window.devicePixelRatio;
		this.window.width = Math.floor(config.width * this.window_dpr);
		this.window.height = Math.floor(config.height * this.window_dpr);
		this.window_w = config.width;
		this.window_h = config.height;
		this.window.style.width = config.width + "px";
		this.window.style.height = config.height + "px";
		this.window.style.background = "#000";
		this.window.id = this.app.config.runtime.window_id;
		this.app.config.runtime.window_parent.appendChild(this.window);
		if(config.title != null) {
			window.document.title = config.title;
		}
		if(!this.create_render_context(this.window)) {
			this.create_render_context_failed();
			return;
		}
		this.post_render_context(this.window);
		this.setup_events();
		if(config.fullscreen) {
			this.window_fullscreen(true,config.true_fullscreen);
			this.window_dpr = window.devicePixelRatio == null ? 1.0 : window.devicePixelRatio;
			var _bounds = this.window.getBoundingClientRect();
			var _x = Math.round(_bounds.left + window.pageXOffset - window.document.body.clientTop);
			var _y = Math.round(_bounds.top + window.pageYOffset - window.document.body.clientLeft);
			var _w = Math.round(_bounds.width);
			var _h = Math.round(_bounds.height);
			if(_x != this.window_x || _y != this.window_y) {
				this.window_x = _x;
				this.window_y = _y;
				this.dispatch_window_ev(4,this.window_x,this.window_y);
			}
			if(_w != this.window_w || _h != this.window_h) {
				this.window_w = _w;
				this.window_h = _h;
				this.window.width = Math.floor(this.window_w * this.window_dpr);
				this.window.height = Math.floor(this.window_h * this.window_dpr);
				this.dispatch_window_ev(6,this.window.width,this.window.height);
			}
		}
	}
	,post_render_context: function(window) {
		var color = this.app.config.render.default_clear;
		snow_modules_opengl_web_GL.gl.clearDepth(1.0);
		snow_modules_opengl_web_GL.gl.clearStencil(0);
		snow_modules_opengl_web_GL.gl.clearColor(color.r,color.g,color.b,color.a);
		snow_modules_opengl_web_GL.gl.clear(17664);
	}
	,create_render_context: function(_window) {
		var config = this.app.config.render;
		var attr = config.webgl;
		attr = this.apply_GL_attr(config,attr);
		var _gl = null;
		if(config.webgl.version != 1) {
			_gl = this.window.getContext("webgl" + config.webgl.version);
			if(_gl == null) {
				_gl = this.window.getContext("experimental-webgl" + config.webgl.version);
			}
		} else {
			_gl = js_html__$CanvasElement_CanvasUtil.getContextWebGL(this.window,attr);
		}
		snow_modules_opengl_web_GL.gl = _gl;
		haxe_Log.trace("  i / runtime / " + ("web / GL / context(" + Std.string(_gl != null) + ")"),{ fileName : "Runtime.hx", lineNumber : 652, className : "snow.core.web.Runtime", methodName : "create_render_context"});
		return _gl != null;
	}
	,apply_GL_attr: function(render,attr) {
		if(attr.alpha == null) {
			attr.alpha = false;
		}
		attr.alpha = attr.alpha;
		if(attr.premultipliedAlpha == null) {
			attr.premultipliedAlpha = false;
		}
		attr.premultipliedAlpha = attr.premultipliedAlpha;
		if(attr.antialias == null) {
			attr.antialias = this.app.config.render.antialiasing > 0;
		}
		attr.antialias = attr.antialias;
		if(attr.depth == null) {
			attr.depth = this.app.config.render.depth > 0;
		}
		attr.depth = attr.depth;
		if(attr.stencil == null) {
			attr.stencil = this.app.config.render.stencil > 0;
		}
		attr.stencil = attr.stencil;
		return attr;
	}
	,create_render_context_failed: function() {
		var msg = "WebGL is required to run this!<br/><br/>";
		msg += "visit <a style=\"color:#06b4fb; text-decoration:none;\" href=\"http://get.webgl.org/\">get.webgl.com</a> for info<br/>";
		msg += "and contact the developer of this app";
		var text_el;
		var overlay_el;
		text_el = window.document.createElement("div");
		overlay_el = window.document.createElement("div");
		text_el.style.marginLeft = "auto";
		text_el.style.marginRight = "auto";
		text_el.style.color = "#d3d3d3";
		text_el.style.marginTop = "5em";
		text_el.style.fontSize = "1.4em";
		text_el.style.fontFamily = "helvetica,sans-serif";
		text_el.innerHTML = msg;
		overlay_el.style.top = "0";
		overlay_el.style.left = "0";
		overlay_el.style.width = "100%";
		overlay_el.style.height = "100%";
		overlay_el.style.display = "block";
		overlay_el.style.minWidth = "100%";
		overlay_el.style.minHeight = "100%";
		overlay_el.style.textAlign = "center";
		overlay_el.style.position = "absolute";
		overlay_el.style.background = "rgba(1,1,1,0.90)";
		overlay_el.appendChild(text_el);
		window.document.body.appendChild(overlay_el);
		throw new js__$Boot_HaxeError(snow_types_Error.error("runtime / web / failed to create render context, unable to recover"));
	}
	,request_frame: function() {
		window.requestAnimationFrame($bind(this,this.loop));
	}
	,loop: function(_t) {
		if(_t == null) {
			_t = 0.016;
		}
		if(this.app.has_shutdown) {
			return false;
		}
		if(this.gamepads_supported) {
			var list = ($_=window.navigator,$bind($_,$_.getGamepads)) != null ? window.navigator.getGamepads() : window.navigator.webkitGetGamepads != null ? window.navigator.webkitGetGamepads() : null;
			if(list == null) {
				throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("list was null" + (" ( " + "gamepad list not found, but they were previously?" + " )")));
			}
			var _count = list.length;
			var _idx = 0;
			while(_idx < _count) {
				var _gamepad = list[_idx];
				if(_gamepad == null) {
					++_idx;
					continue;
				}
				var _g1 = 0;
				var _g = _gamepad.axes.length;
				while(_g1 < _g) {
					var _axis_idx = _g1++;
					var _axis = _gamepad.axes[_axis_idx];
					if(_axis != 0) {
						this.app.input.dispatch_gamepad_axis_event(_gamepad.index,_axis_idx,_axis,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start);
					}
				}
				var _prev_btn = this.gamepad_btns_cache[_gamepad.index];
				var _g11 = 0;
				var _g2 = _gamepad.buttons.length;
				while(_g11 < _g2) {
					var _btn_idx = _g11++;
					var _btn = _gamepad.buttons[_btn_idx];
					if(_btn.value != _prev_btn[_btn_idx]) {
						if(_btn.pressed) {
							this.app.input.dispatch_gamepad_button_down_event(_gamepad.index,_btn_idx,_btn.value,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start);
						} else {
							this.app.input.dispatch_gamepad_button_up_event(_gamepad.index,_btn_idx,_btn.value,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start);
						}
						_prev_btn[_btn_idx] = _btn.value;
					}
				}
				++_idx;
			}
		}
		this.window_dpr = window.devicePixelRatio == null ? 1.0 : window.devicePixelRatio;
		var _bounds = this.window.getBoundingClientRect();
		var _x = Math.round(_bounds.left + window.pageXOffset - window.document.body.clientTop);
		var _y = Math.round(_bounds.top + window.pageYOffset - window.document.body.clientLeft);
		var _w = Math.round(_bounds.width);
		var _h = Math.round(_bounds.height);
		if(_x != this.window_x || _y != this.window_y) {
			this.window_x = _x;
			this.window_y = _y;
			this.dispatch_window_ev(4,this.window_x,this.window_y);
		}
		if(_w != this.window_w || _h != this.window_h) {
			this.window_w = _w;
			this.window_h = _h;
			this.window.width = Math.floor(this.window_w * this.window_dpr);
			this.window.height = Math.floor(this.window_h * this.window_dpr);
			this.dispatch_window_ev(6,this.window.width,this.window.height);
		}
		this.app.dispatch_event(3);
		if(!this.app.shutting_down) {
			window.requestAnimationFrame($bind(this,this.loop));
		}
		return true;
	}
	,loop_pre_ready: function(_t) {
		if(_t == null) {
			_t = 0.016;
		}
		this.app.dispatch_event(3);
		if(!this.app.shutting_down) {
			if(!this.app.ready) {
				window.requestAnimationFrame($bind(this,this.loop_pre_ready));
			} else {
				window.requestAnimationFrame($bind(this,this.loop));
			}
		}
		return true;
	}
	,mod_state_from_event: function(_key_event) {
		this.app.input.mod_state.none = !_key_event.altKey && !_key_event.ctrlKey && !_key_event.metaKey && !_key_event.shiftKey;
		this.app.input.mod_state.lshift = _key_event.shiftKey;
		this.app.input.mod_state.rshift = _key_event.shiftKey;
		this.app.input.mod_state.lctrl = _key_event.ctrlKey;
		this.app.input.mod_state.rctrl = _key_event.ctrlKey;
		this.app.input.mod_state.lalt = _key_event.altKey;
		this.app.input.mod_state.ralt = _key_event.altKey;
		this.app.input.mod_state.lmeta = _key_event.metaKey;
		this.app.input.mod_state.rmeta = _key_event.metaKey;
		this.app.input.mod_state.num = false;
		this.app.input.mod_state.caps = false;
		this.app.input.mod_state.mode = false;
		this.app.input.mod_state.ctrl = _key_event.ctrlKey;
		this.app.input.mod_state.shift = _key_event.shiftKey;
		this.app.input.mod_state.alt = _key_event.altKey;
		this.app.input.mod_state.meta = _key_event.metaKey;
		return this.app.input.mod_state;
	}
	,convert_keycode: function(dom_keycode) {
		if(dom_keycode >= 65 && dom_keycode <= 90) {
			return dom_keycode + 32;
		}
		return snow_core_web__$Runtime_DOMKeys.dom_key_to_keycode(dom_keycode);
	}
	,get_window_x: function(_bounds) {
		return Math.round(_bounds.left + window.pageXOffset - window.document.body.clientTop);
	}
	,get_window_y: function(_bounds) {
		return Math.round(_bounds.top + window.pageYOffset - window.document.body.clientLeft);
	}
	,update_window_bounds: function() {
		this.window_dpr = window.devicePixelRatio == null ? 1.0 : window.devicePixelRatio;
		var _bounds = this.window.getBoundingClientRect();
		var _x = Math.round(_bounds.left + window.pageXOffset - window.document.body.clientTop);
		var _y = Math.round(_bounds.top + window.pageYOffset - window.document.body.clientLeft);
		var _w = Math.round(_bounds.width);
		var _h = Math.round(_bounds.height);
		if(_x != this.window_x || _y != this.window_y) {
			this.window_x = _x;
			this.window_y = _y;
			this.dispatch_window_ev(4,this.window_x,this.window_y);
		}
		if(_w != this.window_w || _h != this.window_h) {
			this.window_w = _w;
			this.window_h = _h;
			this.window.width = Math.floor(this.window_w * this.window_dpr);
			this.window.height = Math.floor(this.window_h * this.window_dpr);
			this.dispatch_window_ev(6,this.window.width,this.window.height);
		}
	}
	,gamepads_init_cache: function(_gamepad) {
		this.gamepad_btns_cache[_gamepad.index] = [];
		var _g1 = 0;
		var _g = _gamepad.buttons.length;
		while(_g1 < _g) {
			++_g1;
			this.gamepad_btns_cache[_gamepad.index].push(0);
		}
	}
	,gamepads_init: function() {
		var _list = ($_=window.navigator,$bind($_,$_.getGamepads)) != null ? window.navigator.getGamepads() : window.navigator.webkitGetGamepads != null ? window.navigator.webkitGetGamepads() : null;
		if(_list != null) {
			this.gamepads_supported = true;
			this.gamepad_btns_cache = [];
			var _g = 0;
			while(_g < _list.length) {
				var _gamepad = _list[_g];
				++_g;
				if(_gamepad != null) {
					this.gamepad_btns_cache[_gamepad.index] = [];
					var _g1 = 0;
					var _g2 = _gamepad.buttons.length;
					while(_g1 < _g2) {
						_g1++;
						this.gamepad_btns_cache[_gamepad.index].push(0);
					}
				}
			}
		} else {
			haxe_Log.trace("  i / runtime / " + "Gamepads are not supported in this browser :(",{ fileName : "Runtime.hx", lineNumber : 861, className : "snow.core.web.Runtime", methodName : "gamepads_init"});
		}
	}
	,gamepads_poll: function() {
		var list = ($_=window.navigator,$bind($_,$_.getGamepads)) != null ? window.navigator.getGamepads() : window.navigator.webkitGetGamepads != null ? window.navigator.webkitGetGamepads() : null;
		if(list == null) {
			throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("list was null" + (" ( " + "gamepad list not found, but they were previously?" + " )")));
		}
		var _count = list.length;
		var _idx = 0;
		while(_idx < _count) {
			var _gamepad = list[_idx];
			if(_gamepad == null) {
				++_idx;
				continue;
			}
			var _g1 = 0;
			var _g = _gamepad.axes.length;
			while(_g1 < _g) {
				var _axis_idx = _g1++;
				var _axis = _gamepad.axes[_axis_idx];
				if(_axis != 0) {
					this.app.input.dispatch_gamepad_axis_event(_gamepad.index,_axis_idx,_axis,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start);
				}
			}
			var _prev_btn = this.gamepad_btns_cache[_gamepad.index];
			var _g11 = 0;
			var _g2 = _gamepad.buttons.length;
			while(_g11 < _g2) {
				var _btn_idx = _g11++;
				var _btn = _gamepad.buttons[_btn_idx];
				if(_btn.value != _prev_btn[_btn_idx]) {
					if(_btn.pressed) {
						this.app.input.dispatch_gamepad_button_down_event(_gamepad.index,_btn_idx,_btn.value,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start);
					} else {
						this.app.input.dispatch_gamepad_button_up_event(_gamepad.index,_btn_idx,_btn.value,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start);
					}
					_prev_btn[_btn_idx] = _btn.value;
				}
			}
			++_idx;
		}
	}
	,gamepads_get_list: function() {
		if(($_=window.navigator,$bind($_,$_.getGamepads)) != null) {
			return window.navigator.getGamepads();
		}
		if(window.navigator.webkitGetGamepads != null) {
			return window.navigator.webkitGetGamepads();
		}
		return null;
	}
	,guess_os: function() {
		var _ver = window.navigator.appVersion;
		var _agent = window.navigator.userAgent;
		if(new EReg("mac","gi").match(_ver)) {
			return "mac";
		}
		if(new EReg("win","gi").match(_ver)) {
			return "windows";
		}
		if(new EReg("x11","gi").match(_ver)) {
			return "linux";
		}
		if(new EReg("linux","gi").match(_ver)) {
			return "linux";
		}
		if(new EReg("android","gi").match(_ver)) {
			return "android";
		}
		if(new EReg("ipad","gi").match(_agent)) {
			return "ios";
		}
		if(new EReg("iphone","gi").match(_agent)) {
			return "ios";
		}
		if(new EReg("ipod","gi").match(_agent)) {
			return "ios";
		}
		return "unknown";
	}
	,__class__: snow_core_web_Runtime
};
var snow_core_web__$Runtime_DOMKeys = function() { };
$hxClasses["snow.core.web._Runtime.DOMKeys"] = snow_core_web__$Runtime_DOMKeys;
snow_core_web__$Runtime_DOMKeys.__name__ = true;
snow_core_web__$Runtime_DOMKeys.dom_key_to_keycode = function(_keycode) {
	switch(_keycode) {
	case 16:
		return 1073742049;
	case 17:
		return 1073742048;
	case 18:
		return 1073742050;
	case 20:
		return 1073741881;
	case 33:
		return 1073741899;
	case 34:
		return 1073741902;
	case 35:
		return 1073741901;
	case 36:
		return 1073741898;
	case 37:
		return 1073741904;
	case 38:
		return 1073741906;
	case 39:
		return 1073741903;
	case 40:
		return 1073741905;
	case 44:
		return 1073741894;
	case 45:
		return 1073741897;
	case 46:
		return 127;
	case 91:
		return 1073742051;
	case 93:
		return 1073742055;
	case 96:
		return 1073741922;
	case 97:
		return 1073741913;
	case 98:
		return 1073741914;
	case 99:
		return 1073741915;
	case 100:
		return 1073741916;
	case 101:
		return 1073741917;
	case 102:
		return 1073741918;
	case 103:
		return 1073741919;
	case 104:
		return 1073741920;
	case 105:
		return 1073741921;
	case 106:
		return 1073741909;
	case 107:
		return 1073741911;
	case 109:
		return 1073741910;
	case 110:
		return 1073742044;
	case 111:
		return 1073741908;
	case 112:
		return 1073741882;
	case 113:
		return 1073741883;
	case 114:
		return 1073741884;
	case 115:
		return 1073741885;
	case 116:
		return 1073741886;
	case 117:
		return 1073741887;
	case 118:
		return 1073741888;
	case 119:
		return 1073741889;
	case 120:
		return 1073741890;
	case 121:
		return 1073741891;
	case 122:
		return 1073741892;
	case 123:
		return 1073741893;
	case 124:
		return 1073741928;
	case 125:
		return 1073741929;
	case 126:
		return 1073741930;
	case 127:
		return 1073741931;
	case 128:
		return 1073741932;
	case 129:
		return 1073741933;
	case 130:
		return 1073741934;
	case 131:
		return 1073741935;
	case 132:
		return 1073741936;
	case 133:
		return 1073741937;
	case 134:
		return 1073741938;
	case 135:
		return 1073741939;
	case 144:
		return 1073741907;
	case 160:
		return 94;
	case 161:
		return 33;
	case 162:
		return 34;
	case 163:
		return 35;
	case 164:
		return 36;
	case 165:
		return 37;
	case 166:
		return 38;
	case 167:
		return 95;
	case 168:
		return 40;
	case 169:
		return 41;
	case 170:
		return 42;
	case 171:
		return 43;
	case 172:
		return 92;
	case 173:
		return 45;
	case 174:
		return 91;
	case 175:
		return 93;
	case 176:
		return 96;
	case 181:
		return 1073742086;
	case 182:
		return 1073741953;
	case 183:
		return 1073741952;
	case 188:
		return 44;
	case 190:
		return 46;
	case 191:
		return 47;
	case 192:
		return 96;
	case 219:
		return 91;
	case 220:
		return 92;
	case 221:
		return 93;
	case 222:
		return 39;
	case 224:
		return 1073742051;
	}
	return _keycode;
};
var snow_modules_interfaces_Assets = function() { };
$hxClasses["snow.modules.interfaces.Assets"] = snow_modules_interfaces_Assets;
snow_modules_interfaces_Assets.__name__ = true;
var snow_core_web_assets_Assets = function(_app) {
	this.app = _app;
};
$hxClasses["snow.core.web.assets.Assets"] = snow_core_web_assets_Assets;
snow_core_web_assets_Assets.__name__ = true;
snow_core_web_assets_Assets.__interfaces__ = [snow_modules_interfaces_Assets];
snow_core_web_assets_Assets.prototype = {
	onevent: function(event) {
	}
	,shutdown: function() {
	}
	,image_info_from_load: function(_id,_components) {
		if(_components == null) {
			_components = 4;
		}
		return this.app.io.data_flow(_id,snow_systems_assets_AssetImage.processor);
	}
	,image_info_from_element: function(_id,_elem) {
		var width_pot = this.nearest_power_of_two(_elem.width);
		var height_pot = this.nearest_power_of_two(_elem.height);
		var image_bytes = this.POT_bytes_from_element(_elem.width,_elem.height,width_pot,height_pot,_elem);
		var info = new snow_types_ImageData(this.app,{ id : _id, bpp : 4, width : _elem.width, height : _elem.height, width_actual : width_pot, height_actual : height_pot, bpp_source : 4, pixels : image_bytes});
		image_bytes = null;
		return info;
	}
	,image_info_from_pixels: function(_id,_width,_height,_pixels,_bpp) {
		if(_bpp == null) {
			_bpp = 4;
		}
		return new snow_types_ImageData(this.app,{ id : _id, bpp : 4, width : _width, height : _height, width_actual : _width, height_actual : _height, bpp_source : 4, pixels : _pixels});
	}
	,image_info_from_bytes: function(_id,_bytes,_components) {
		if(_components == null) {
			_components = 4;
		}
		var _gthis = this;
		if(_id == null) {
			throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_id was null"));
		}
		if(_bytes == null) {
			throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_bytes was null"));
		}
		if(_bytes.length == 0) {
			throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("_bytes.length != 0"));
		}
		var ext = haxe_io_Path.extension(_id);
		return new snow_api_Promise(function(resolve,reject) {
			var str = "";
			var i = 0;
			var len = _bytes.length;
			while(i < len) str += String.fromCharCode(_bytes[i++] & 255);
			var b64 = window.btoa(str);
			var _img = new Image();
			_img.onload = function(_) {
				var info = _gthis.image_info_from_element(_id,_img);
				resolve(info);
			};
			_img.onerror = function(e) {
				reject(snow_types_Error.error("failed to load image from bytes, on error: " + e));
			};
			_img.src = "data:image/" + ext + ";base64," + b64;
		});
	}
	,POT_bytes_from_pixels: function(_width,_height,_width_pot,_height_pot,_source) {
		var tmp_canvas = window.document.createElement("canvas");
		tmp_canvas.width = _width_pot;
		tmp_canvas.height = _height_pot;
		var tmp_context = tmp_canvas.getContext("2d",null);
		tmp_context.clearRect(0,0,tmp_canvas.width,tmp_canvas.height);
		var image_bytes = null;
		var _pixels = new Uint8ClampedArray(_source.buffer);
		var _imgdata = tmp_context.createImageData(_width,_height);
		_imgdata.data.set(_pixels);
		try {
			tmp_context.putImageData(_imgdata,0,0);
			image_bytes = tmp_context.getImageData(0,0,tmp_canvas.width,tmp_canvas.height);
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			var tips = "- textures served from file:/// throw security errors\n";
			tips += "- textures served over http:// work for cross origin byte requests";
			haxe_Log.trace("   i / assets / " + tips,{ fileName : "Assets.hx", lineNumber : 183, className : "snow.core.web.assets.Assets", methodName : "POT_bytes_from_pixels"});
			throw js__$Boot_HaxeError.wrap(e);
		}
		tmp_canvas = null;
		tmp_context = null;
		_imgdata = null;
		return new Uint8Array(image_bytes.data);
	}
	,POT_bytes_from_element: function(_width,_height,_width_pot,_height_pot,_source) {
		var tmp_canvas = window.document.createElement("canvas");
		tmp_canvas.width = _width_pot;
		tmp_canvas.height = _height_pot;
		var tmp_context = tmp_canvas.getContext("2d",null);
		tmp_context.clearRect(0,0,tmp_canvas.width,tmp_canvas.height);
		tmp_context.drawImage(_source,0,0,_width,_height);
		var image_bytes = null;
		try {
			image_bytes = tmp_context.getImageData(0,0,tmp_canvas.width,tmp_canvas.height);
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			var tips = "- textures served from file:/// throw security errors\n";
			tips += "- textures served over http:// work for cross origin byte requests";
			haxe_Log.trace("   i / assets / " + tips,{ fileName : "Assets.hx", lineNumber : 221, className : "snow.core.web.assets.Assets", methodName : "POT_bytes_from_element"});
			throw js__$Boot_HaxeError.wrap(e);
		}
		tmp_canvas = null;
		tmp_context = null;
		return new Uint8Array(image_bytes.data);
	}
	,nearest_power_of_two: function(_value) {
		if(!snow_core_web_assets_Assets.POT) {
			return _value;
		}
		--_value;
		_value |= _value >> 1;
		_value |= _value >> 2;
		_value |= _value >> 4;
		_value |= _value >> 8;
		_value |= _value >> 16;
		return ++_value;
	}
	,__class__: snow_core_web_assets_Assets
};
var snow_modules_interfaces_IO = function() { };
$hxClasses["snow.modules.interfaces.IO"] = snow_modules_interfaces_IO;
snow_modules_interfaces_IO.__name__ = true;
var snow_core_web_io_IO = function(_app) {
	this.app = _app;
};
$hxClasses["snow.core.web.io.IO"] = snow_core_web_io_IO;
snow_core_web_io_IO.__name__ = true;
snow_core_web_io_IO.__interfaces__ = [snow_modules_interfaces_IO];
snow_core_web_io_IO.prototype = {
	shutdown: function() {
	}
	,onevent: function(_event) {
	}
	,app_path: function() {
		return "./";
	}
	,app_path_prefs: function() {
		return "./";
	}
	,url_open: function(_url) {
		if(_url != null && _url.length > 0) {
			window.open(_url,"_blank");
		}
	}
	,data_load: function(_path,_options) {
		return new snow_api_Promise(function(resolve,reject) {
			var _binary = true;
			if(_options != null) {
				if(_options.binary != null) {
					_binary = _options.binary;
				}
			}
			var request = new XMLHttpRequest();
			request.open("GET",_path,true);
			if(_binary) {
				request.overrideMimeType("text/plain; charset=x-user-defined");
			} else {
				request.overrideMimeType("text/plain; charset=UTF-8");
			}
			request.responseType = "arraybuffer";
			request.onload = function(data) {
				if(request.status == 200) {
					var this1 = new Uint8Array(request.response);
					resolve(this1);
				} else {
					reject(snow_types_Error.error("request status was " + request.status + " / " + request.statusText));
				}
			};
			request.send();
		});
	}
	,data_save: function(_path,_data,_options) {
		return false;
	}
	,string_save_path: function(_slot) {
		if(_slot == null) {
			_slot = 0;
		}
		var _parts = snow_types_Config.app_ident.split(".");
		var _appname = _parts.pop();
		return haxe_io_Path.normalize(haxe_io_Path.join(["<localstorage>","" + _parts.join(".") + "/" + _appname + "/" + this.app.io.string_save_prefix + "." + _slot]));
	}
	,string_slot_id: function(_slot) {
		if(_slot == null) {
			_slot = 0;
		}
		var _parts = snow_types_Config.app_ident.split(".");
		var _appname = _parts.pop();
		return "" + _parts.join(".") + "/" + _appname + "/" + this.app.io.string_save_prefix + "." + _slot;
	}
	,string_slot_destroy: function(_slot) {
		if(_slot == null) {
			_slot = 0;
		}
		var storage = window.localStorage;
		if(storage == null) {
			haxe_Log.trace("       i / io / " + "localStorage isnt supported in this browser?!",{ fileName : "IO.hx", lineNumber : 119, className : "snow.core.web.io.IO", methodName : "string_slot_destroy"});
			return false;
		}
		var _parts = snow_types_Config.app_ident.split(".");
		var _appname = _parts.pop();
		storage.removeItem("" + _parts.join(".") + "/" + _appname + "/" + this.app.io.string_save_prefix + "." + _slot);
		return false;
	}
	,string_slot_save: function(_slot,_contents) {
		if(_slot == null) {
			_slot = 0;
		}
		var storage = window.localStorage;
		if(storage == null) {
			haxe_Log.trace("       i / io / " + "localStorage isnt supported in this browser?!",{ fileName : "IO.hx", lineNumber : 136, className : "snow.core.web.io.IO", methodName : "string_slot_save"});
			return false;
		}
		var _parts = snow_types_Config.app_ident.split(".");
		var _appname = _parts.pop();
		storage.setItem("" + _parts.join(".") + "/" + _appname + "/" + this.app.io.string_save_prefix + "." + _slot,_contents);
		return true;
	}
	,string_slot_load: function(_slot) {
		if(_slot == null) {
			_slot = 0;
		}
		var storage = window.localStorage;
		if(storage == null) {
			haxe_Log.trace("       i / io / " + "localStorage isnt supported in this browser?!",{ fileName : "IO.hx", lineNumber : 154, className : "snow.core.web.io.IO", methodName : "string_slot_load"});
			return null;
		}
		var _parts = snow_types_Config.app_ident.split(".");
		var _appname = _parts.pop();
		return storage.getItem("" + _parts.join(".") + "/" + _appname + "/" + this.app.io.string_save_prefix + "." + _slot);
	}
	,string_slot_encode: function(_string) {
		return window.btoa(_string);
	}
	,string_slot_decode: function(_string) {
		return window.atob(_string);
	}
	,__class__: snow_core_web_io_IO
};
var snow_modules_opengl_web_GL = function() { };
$hxClasses["snow.modules.opengl.web.GL"] = snow_modules_opengl_web_GL;
snow_modules_opengl_web_GL.__name__ = true;
snow_modules_opengl_web_GL.versionString = function() {
	return "/ " + snow_modules_opengl_web_GL.gl.getParameter(7938) + " / " + snow_modules_opengl_web_GL.gl.getParameter(35724) + " / " + snow_modules_opengl_web_GL.gl.getParameter(7937) + " / " + snow_modules_opengl_web_GL.gl.getParameter(7936) + " /";
};
var snow_modules_webaudio_Audio = function(_app) {
	this.active = false;
	this.handle_seq = 0;
	this.app = _app;
	this.instances = new haxe_ds_IntMap();
	try {
		this.context = new AudioContext();
	} catch( err ) {
		try {
			this.context = new window.webkitAudioContext();
		} catch( err1 ) {
			haxe_Log.trace("    i / audio / " + "WebAudio: no AudioContext could be created! No audio loading or playback will be available.",{ fileName : "Audio.hx", lineNumber : 59, className : "snow.modules.webaudio.Audio", methodName : "new"});
			return;
		}
	}
	if(this.context == null) {
		throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("context was null" + (" ( " + "Audio / webaudio / no AudioContext could be created, is the Web Audio API supported?" + " )")));
	}
	var info = "channelCount: " + this.context.destination.channelCount + ", " + ("channelCountMode: \"" + this.context.destination.channelCountMode + "\", ") + ("channelInterpretation: \"" + this.context.destination.channelInterpretation + "\", ") + ("maxChannelCount: " + this.context.destination.maxChannelCount + ", ") + ("numberOfInputs: " + this.context.destination.numberOfInputs + ", ") + ("numberOfOutputs: " + this.context.destination.numberOfOutputs);
	haxe_Log.trace("    i / audio / " + ("webaudio: " + Std.string(this.context) + " / sampleRate: " + this.context.sampleRate + " / destination: " + info),{ fileName : "Audio.hx", lineNumber : 74, className : "snow.modules.webaudio.Audio", methodName : "new"});
	this.active = true;
};
$hxClasses["snow.modules.webaudio.Audio"] = snow_modules_webaudio_Audio;
snow_modules_webaudio_Audio.__name__ = true;
snow_modules_webaudio_Audio.__interfaces__ = [snow_modules_interfaces_Audio];
snow_modules_webaudio_Audio.prototype = {
	shutdown: function() {
		this.context.close();
	}
	,onevent: function(event) {
	}
	,snd_of: function(_handle) {
		return this.instances.h[_handle];
	}
	,play_buffer: function(_data) {
		var _node = this.context.createBufferSource();
		_node.buffer = _data.buffer;
		return _node;
	}
	,play_buffer_again: function(_handle,_snd,_start_time) {
		_snd.buffer_node = this.play_buffer(_snd.source.data);
		_snd.buffer_node.connect(_snd.pan_node);
		_snd.buffer_node.loop = _snd.loop;
		_snd.pan_node.connect(_snd.gain_node);
		_snd.gain_node.connect(this.context.destination);
		_snd.buffer_node.start(0,_start_time);
		var f = $bind(this,this.destroy_snd);
		var a1 = _snd;
		var tmp = function() {
			f(a1);
		};
		_snd.buffer_node.onended = tmp;
	}
	,play_instance: function(_handle,_source,_inst,_data,_buffer_node,_volume,_loop) {
		var _gthis = this;
		var _gain = this.context.createGain();
		var _pan = this.context.createPanner();
		var _node = null;
		_gain.gain.value = _volume;
		_pan.panningModel = "equalpower";
		_pan.setPosition(Math.cos(-1.5707),0,Math.sin(1.5707));
		if(_buffer_node != null) {
			_node = _buffer_node;
			_buffer_node.loop = _loop;
		}
		if(_data.media_node != null) {
			_node = _data.media_node;
			_data.media_elem.loop = _loop;
		}
		_node.connect(_pan);
		_pan.connect(_gain);
		_gain.connect(this.context.destination);
		var _data1 = _data.media_node;
		var _data2 = _data.media_elem;
		var _snd = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
		var _snd1 = { handle : _handle, source : _source, instance : _inst, buffer_node : _buffer_node, media_node : _data1, media_elem : _data2, gain_node : _gain, pan_node : _pan, state : 1, time_start : _snd, loop : _loop, pan : 0};
		this.instances.h[_handle] = _snd1;
		if(_buffer_node != null) {
			_buffer_node.start(0);
			var f = $bind(this,this.destroy_snd);
			var a1 = _snd1;
			_buffer_node.onended = function() {
				f(a1);
			};
		}
		if(_data.media_node != null) {
			_data.media_elem.play();
			_data.media_node.addEventListener("ended",function() {
				_gthis.app.audio.emit_Int(0,_handle);
				_snd1.state = 2;
			});
		}
	}
	,play: function(_source,_volume,_paused) {
		var _data = _source.data;
		var _handle = this.handle_seq;
		var _inst = _source.instance(_handle);
		if(_source.data.is_stream) {
			_data.media_elem.play();
			_data.media_elem.volume = 1.0;
			this.play_instance(_handle,_source,_inst,_data,null,_volume,false);
		} else {
			this.play_instance(_handle,_source,_inst,_data,this.play_buffer(_data),_volume,false);
		}
		this.handle_seq++;
		return _handle;
	}
	,loop: function(_source,_volume,_paused) {
		var _data = _source.data;
		var _handle = this.handle_seq;
		var _inst = _source.instance(_handle);
		if(_source.data.is_stream) {
			_data.media_elem.play();
			_data.media_elem.volume = 1.0;
			this.play_instance(_handle,_source,_inst,_data,null,_volume,true);
		} else {
			this.play_instance(_handle,_source,_inst,_data,this.play_buffer(_data),_volume,true);
		}
		this.handle_seq++;
		return _handle;
	}
	,stop_buffer: function(_snd) {
		_snd.buffer_node.stop();
		_snd.buffer_node.disconnect();
		_snd.gain_node.disconnect();
		_snd.pan_node.disconnect();
		_snd.buffer_node = null;
	}
	,pause: function(_handle) {
		var _snd = this.instances.get(_handle);
		if(_snd == null) {
			return;
		}
		_snd.time_pause = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start - _snd.time_start;
		_snd.state = 0;
		if(_snd.buffer_node != null) {
			this.stop_buffer(_snd);
		} else if(_snd.media_node != null) {
			_snd.media_elem.pause();
		}
	}
	,unpause: function(_handle) {
		var _snd = this.instances.get(_handle);
		if(_snd == null) {
			return;
		}
		if(_snd.state != 0) {
			return;
		}
		if(_snd.media_node == null) {
			this.play_buffer_again(_handle,_snd,_snd.time_pause);
		} else {
			_snd.media_elem.play();
		}
		_snd.state = 1;
	}
	,destroy_snd: function(_snd) {
		if(_snd.buffer_node != null) {
			_snd.buffer_node.stop();
			_snd.buffer_node.disconnect();
			_snd.buffer_node = null;
		}
		if(_snd.media_node != null) {
			_snd.media_elem.pause();
			_snd.media_elem.currentTime = 0;
			_snd.media_node.disconnect();
			_snd.media_elem = null;
			_snd.media_node = null;
		}
		if(_snd.gain_node != null) {
			_snd.gain_node.disconnect();
			_snd.gain_node = null;
		}
		if(_snd.pan_node != null) {
			_snd.pan_node.disconnect();
			_snd.pan_node = null;
		}
		this.instances.remove(_snd.handle);
		_snd = null;
	}
	,stop: function(_handle) {
		var _snd = this.instances.get(_handle);
		if(_snd == null) {
			return;
		}
		if(_snd.buffer_node != null) {
			_snd.buffer_node.stop();
			_snd.buffer_node.disconnect();
			_snd.buffer_node = null;
		}
		if(_snd.media_node != null) {
			_snd.media_elem.pause();
			_snd.media_elem.currentTime = 0;
			_snd.media_node.disconnect();
			_snd.media_elem = null;
			_snd.media_node = null;
		}
		if(_snd.gain_node != null) {
			_snd.gain_node.disconnect();
			_snd.gain_node = null;
		}
		if(_snd.pan_node != null) {
			_snd.pan_node.disconnect();
			_snd.pan_node = null;
		}
		this.instances.remove(_snd.handle);
		_snd.state = 2;
	}
	,volume: function(_handle,_volume) {
		var _snd = this.instances.get(_handle);
		if(_snd == null) {
			return;
		}
		_snd.gain_node.gain.value = _volume;
	}
	,pan: function(_handle,_pan) {
		var _snd = this.instances.get(_handle);
		if(_snd == null) {
			return;
		}
		_snd.pan = _pan;
		_snd.pan_node.setPosition(Math.cos((_pan - 1) * 1.5707),0,Math.sin((_pan + 1) * 1.5707));
	}
	,pitch: function(_handle,_pitch) {
		var _snd = this.instances.get(_handle);
		if(_snd == null) {
			return;
		}
		if(_snd.buffer_node != null) {
			_snd.buffer_node.playbackRate.value = _pitch;
		} else if(_snd.media_node != null) {
			_snd.media_elem.playbackRate = _pitch;
		}
	}
	,position: function(_handle,_time) {
		var _snd = this.instances.get(_handle);
		if(_snd == null) {
			return;
		}
		if(_snd.buffer_node != null) {
			this.stop_buffer(_snd);
			this.play_buffer_again(_handle,_snd,_time);
		} else {
			_snd.media_elem.currentTime = _time;
		}
	}
	,volume_of: function(_handle) {
		var _snd = this.instances.get(_handle);
		if(_snd == null) {
			return 0.0;
		}
		return _snd.gain_node.gain.value;
	}
	,pan_of: function(_handle) {
		var _snd = this.instances.get(_handle);
		if(_snd == null) {
			return 0.0;
		}
		return _snd.pan;
	}
	,pitch_of: function(_handle) {
		var _snd = this.instances.get(_handle);
		if(_snd == null) {
			return 0.0;
		}
		var _result = 1.0;
		if(_snd.buffer_node != null) {
			_result = _snd.buffer_node.playbackRate.value;
		} else if(_snd.media_node != null) {
			_result = _snd.media_elem.playbackRate;
		}
		return _result;
	}
	,position_of: function(_handle) {
		if(this.instances.get(_handle) == null) {
			return 0.0;
		}
		return 0.0;
	}
	,state_of: function(_handle) {
		var _snd = this.instances.get(_handle);
		if(_snd == null) {
			return -1;
		}
		return _snd.state;
	}
	,loop_of: function(_handle) {
		var _snd = this.instances.get(_handle);
		if(_snd == null) {
			return false;
		}
		return _snd.loop;
	}
	,instance_of: function(_handle) {
		var _snd = this.instances.get(_handle);
		if(_snd == null) {
			return null;
		}
		return _snd.instance;
	}
	,suspend: function() {
		this.context.suspend();
	}
	,resume: function() {
		this.context.resume();
	}
	,data_from_load: function(_path,_is_stream,_format) {
		if(_is_stream == null) {
			_is_stream = false;
		}
		if(!this.active) {
			return snow_api_Promise.reject("WebAudio context unavailable");
		}
		if(_format == null) {
			switch(haxe_io_Path.extension(_path)) {
			case "ogg":
				_format = 2;
				break;
			case "pcm":
				_format = 4;
				break;
			case "wav":
				_format = 3;
				break;
			default:
				_format = 0;
			}
		}
		if(_is_stream) {
			return this.data_from_load_stream(_path,_format);
		}
		return this.data_from_load_sound(_path,_format);
	}
	,data_from_bytes: function(_id,_bytes,_format) {
		var _gthis = this;
		if(!this.active) {
			return snow_api_Promise.reject("WebAudio context unavailable");
		}
		return new snow_api_Promise(function(resolve,reject) {
			_gthis.data_from_bytes_direct(_id,_bytes,_format,resolve,reject);
		});
	}
	,data_from_bytes_direct: function(_id,_bytes,_format,resolve,reject) {
		var _gthis = this;
		this.context.decodeAudioData(_bytes.buffer,function(_buffer) {
			var _data = new snow_modules_webaudio__$Audio_AudioDataWebAudio(_gthis.app,_buffer,null,null,{ id : _id, is_stream : false, format : _format, samples : null, length : _buffer.length, channels : _buffer.numberOfChannels, rate : _buffer.sampleRate | 0});
			resolve(_data);
			return;
		},function() {
			reject("failed to decode audio for `" + _id + "`");
			return;
		});
	}
	,data_from_load_sound: function(_path,_format) {
		var _gthis = this;
		return new snow_api_Promise(function(resolve,reject) {
			_gthis.app.io.module.data_load(_path,null).then(function(_bytes) {
				_gthis.data_from_bytes_direct(_path,_bytes,_format,resolve,reject);
			});
		});
	}
	,data_from_load_stream: function(_path,_format) {
		var _gthis = this;
		return new snow_api_Promise(function(resolve,reject) {
			var _element = new Audio(_path);
			_element.autoplay = false;
			_element.controls = false;
			_element.preload = "auto";
			_element.onerror = function(err) {
				var _error;
				switch(_element.error.code) {
				case 1:
					_error = "MEDIA_ERR_ABORTED";
					break;
				case 2:
					_error = "MEDIA_ERR_NETWORK";
					break;
				case 3:
					_error = "MEDIA_ERR_DECODE";
					break;
				case 4:
					_error = "MEDIA_ERR_SRC_NOT_SUPPORTED";
					break;
				case 5:
					_error = "MEDIA_ERR_ENCRYPTED";
					break;
				default:
					_error = "unknown error";
				}
				return reject("failed to load `" + _path + "` as stream : `" + _error + "`");
			};
			_element.onloadedmetadata = function(_) {
				var _node = _gthis.context.createMediaElementSource(_element);
				var _rate = _gthis.context.sampleRate | 0;
				var _channels = _node.channelCount;
				var _data = new snow_modules_webaudio__$Audio_AudioDataWebAudio(_gthis.app,null,_node,_element,{ id : _path, is_stream : true, format : _format, samples : null, length : _element.duration * (_rate * _channels * 2) | 0, channels : _channels, rate : _rate});
				return resolve(_data);
			};
		});
	}
	,__class__: snow_modules_webaudio_Audio
};
var snow_types_AudioData = function(_app,_options) {
	this.is_stream = false;
	this.format = 0;
	this.bits_per_sample = 16;
	this.channels = 1;
	this.length = 0;
	this.rate = 44100;
	this.id = "AudioData";
	this.app = _app;
	if(_options.id == null) {
		_options.id = this.id;
	}
	this.id = _options.id;
	if(_options.rate == null) {
		_options.rate = this.rate;
	}
	this.rate = _options.rate;
	if(_options.length == null) {
		_options.length = this.length;
	}
	this.length = _options.length;
	if(_options.format == null) {
		_options.format = this.format;
	}
	this.format = _options.format;
	if(_options.channels == null) {
		_options.channels = this.channels;
	}
	this.channels = _options.channels;
	if(_options.bits_per_sample == null) {
		_options.bits_per_sample = this.bits_per_sample;
	}
	this.bits_per_sample = _options.bits_per_sample;
	if(_options.is_stream == null) {
		_options.is_stream = this.is_stream;
	}
	this.is_stream = _options.is_stream;
	if(_options.samples == null) {
		_options.samples = this.samples;
	}
	this.samples = _options.samples;
	_options = null;
};
$hxClasses["snow.types.AudioData"] = snow_types_AudioData;
snow_types_AudioData.__name__ = true;
snow_types_AudioData.prototype = {
	destroy: function() {
		this.id = null;
		this.samples = null;
	}
	,__class__: snow_types_AudioData
};
var snow_modules_webaudio__$Audio_AudioDataWebAudio = function(_app,_buffer,_media_node,_media_elem,_opt) {
	this.buffer = _buffer;
	this.media_node = _media_node;
	this.media_elem = _media_elem;
	snow_types_AudioData.call(this,_app,_opt);
};
$hxClasses["snow.modules.webaudio._Audio.AudioDataWebAudio"] = snow_modules_webaudio__$Audio_AudioDataWebAudio;
snow_modules_webaudio__$Audio_AudioDataWebAudio.__name__ = true;
snow_modules_webaudio__$Audio_AudioDataWebAudio.__super__ = snow_types_AudioData;
snow_modules_webaudio__$Audio_AudioDataWebAudio.prototype = $extend(snow_types_AudioData.prototype,{
	destroy: function() {
		this.buffer = null;
		this.media_node = null;
		this.media_elem = null;
	}
	,__class__: snow_modules_webaudio__$Audio_AudioDataWebAudio
});
var snow_systems_assets_Asset = function(_system,_id,_type) {
	if(_type == null) {
		_type = 0;
	}
	this.loaded = false;
	if(_id == null) {
		throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_id was null"));
	}
	if(_system == null) {
		throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_system was null"));
	}
	this.system = _system;
	this.type = _type;
	this.id = _id;
};
$hxClasses["snow.systems.assets.Asset"] = snow_systems_assets_Asset;
snow_systems_assets_Asset.__name__ = true;
snow_systems_assets_Asset.prototype = {
	__class__: snow_systems_assets_Asset
};
var snow_systems_assets_AssetImage = function(_system,_id,_image) {
	snow_systems_assets_Asset.call(this,_system,_id,4);
	this.set_image(_image);
};
$hxClasses["snow.systems.assets.AssetImage"] = snow_systems_assets_AssetImage;
snow_systems_assets_AssetImage.__name__ = true;
snow_systems_assets_AssetImage.load = function(_system,_id) {
	if(_id == null) {
		throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_id was null"));
	}
	if(_system == null) {
		throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_system was null"));
	}
	return new snow_systems_assets_AssetImage(_system,_id,null).reload();
};
snow_systems_assets_AssetImage.load_from_bytes = function(_system,_id,_bytes) {
	if(_id == null) {
		throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_id was null"));
	}
	if(_bytes == null) {
		throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_bytes was null"));
	}
	if(_system == null) {
		throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_system was null"));
	}
	return new snow_systems_assets_AssetImage(_system,_id,null).reload_from_bytes(_bytes);
};
snow_systems_assets_AssetImage.provider = function(_app,_path) {
	return _app.assets.module.image_info_from_load(_path);
};
snow_systems_assets_AssetImage.processor = function(_app,_id,_data) {
	if(_data == null) {
		return snow_api_Promise.reject(snow_types_Error.error("AssetImage processor: data was null"));
	}
	return _app.assets.module.image_info_from_bytes(_id,_data);
};
snow_systems_assets_AssetImage.__super__ = snow_systems_assets_Asset;
snow_systems_assets_AssetImage.prototype = $extend(snow_systems_assets_Asset.prototype,{
	reload: function() {
		var _gthis = this;
		this.loaded = false;
		return new snow_api_Promise(function(resolve,reject) {
			_gthis.system.app.io.data_flow(haxe_io_Path.join([_gthis.system.root,_gthis.id]),null,snow_systems_assets_AssetImage.provider).then(function(_image) {
				_gthis.set_image(_image);
				resolve(_gthis);
			}).error(reject);
		});
	}
	,reload_from_bytes: function(_bytes) {
		var _gthis = this;
		this.loaded = false;
		return new snow_api_Promise(function(resolve,reject) {
			_gthis.system.module.image_info_from_bytes(_gthis.id,_bytes).then(function(_image) {
				_gthis.set_image(_image);
				resolve(_gthis);
			}).error(reject);
		});
	}
	,set_image: function(_image) {
		this.loaded = _image != null;
		return this.image = _image;
	}
	,__class__: snow_systems_assets_AssetImage
	,__properties__: {set_image:"set_image"}
});
var snow_systems_assets_AssetAudio = function(_system,_id,_audio) {
	snow_systems_assets_Asset.call(this,_system,_id,5);
	this.set_audio(_audio);
};
$hxClasses["snow.systems.assets.AssetAudio"] = snow_systems_assets_AssetAudio;
snow_systems_assets_AssetAudio.__name__ = true;
snow_systems_assets_AssetAudio.load = function(_system,_id,_is_stream) {
	if(_is_stream == null) {
		_is_stream = false;
	}
	if(_id == null) {
		throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_id was null"));
	}
	if(_system == null) {
		throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_system was null"));
	}
	return new snow_systems_assets_AssetAudio(_system,_id,null).reload(_is_stream);
};
snow_systems_assets_AssetAudio.__super__ = snow_systems_assets_Asset;
snow_systems_assets_AssetAudio.prototype = $extend(snow_systems_assets_Asset.prototype,{
	reload: function(_is_stream) {
		if(_is_stream == null) {
			_is_stream = false;
		}
		var _gthis = this;
		this.loaded = false;
		return new snow_api_Promise(function(resolve,reject) {
			_gthis.system.app.audio.module.data_from_load(haxe_io_Path.join([_gthis.system.root,_gthis.id]),_is_stream).then(function(_audio) {
				_gthis.set_audio(_audio);
				resolve(_gthis);
			}).error(reject);
		});
	}
	,destroy: function() {
		this.audio.destroy();
		this.set_audio(null);
	}
	,set_audio: function(_audio) {
		this.loaded = _audio != null;
		return this.audio = _audio;
	}
	,__class__: snow_systems_assets_AssetAudio
	,__properties__: {set_audio:"set_audio"}
});
var snow_systems_assets_AssetBytes = function(_system,_id,_bytes) {
	snow_systems_assets_Asset.call(this,_system,_id,1);
	this.set_bytes(_bytes);
};
$hxClasses["snow.systems.assets.AssetBytes"] = snow_systems_assets_AssetBytes;
snow_systems_assets_AssetBytes.__name__ = true;
snow_systems_assets_AssetBytes.load = function(_system,_id) {
	return new snow_systems_assets_AssetBytes(_system,_id,null).reload();
};
snow_systems_assets_AssetBytes.__super__ = snow_systems_assets_Asset;
snow_systems_assets_AssetBytes.prototype = $extend(snow_systems_assets_Asset.prototype,{
	reload: function() {
		var _gthis = this;
		return new snow_api_Promise(function(resolve,reject) {
			_gthis.system.app.io.data_flow(haxe_io_Path.join([_gthis.system.root,_gthis.id])).then(function(_bytes) {
				_gthis.set_bytes(_bytes);
				resolve(_gthis);
			}).error(reject);
		});
	}
	,destroy: function() {
		this.set_bytes(null);
	}
	,set_bytes: function(_bytes) {
		this.loaded = _bytes != null;
		return this.bytes = _bytes;
	}
	,__class__: snow_systems_assets_AssetBytes
	,__properties__: {set_bytes:"set_bytes"}
});
var snow_systems_assets_AssetText = function(_system,_id,_text) {
	snow_systems_assets_Asset.call(this,_system,_id,2);
	this.set_text(_text);
};
$hxClasses["snow.systems.assets.AssetText"] = snow_systems_assets_AssetText;
snow_systems_assets_AssetText.__name__ = true;
snow_systems_assets_AssetText.load = function(_system,_id) {
	return new snow_systems_assets_AssetText(_system,_id,null).reload();
};
snow_systems_assets_AssetText.processor = function(_app,_id,_data) {
	if(_data == null) {
		return snow_api_Promise.reject(snow_types_Error.error("AssetText processor: data was null"));
	}
	var _string = new haxe_io_Bytes(new Uint8Array(_data.buffer)).toString();
	_data = null;
	return snow_api_Promise.resolve(_string);
};
snow_systems_assets_AssetText.__super__ = snow_systems_assets_Asset;
snow_systems_assets_AssetText.prototype = $extend(snow_systems_assets_Asset.prototype,{
	reload: function() {
		var _gthis = this;
		return new snow_api_Promise(function(resolve,reject) {
			_gthis.system.app.io.data_flow(haxe_io_Path.join([_gthis.system.root,_gthis.id]),snow_systems_assets_AssetText.processor).then(function(_text) {
				_gthis.set_text(_text);
				resolve(_gthis);
			}).error(reject);
		});
	}
	,destroy: function() {
		this.set_text(null);
	}
	,set_text: function(_text) {
		this.loaded = _text != null;
		return this.text = _text;
	}
	,__class__: snow_systems_assets_AssetText
	,__properties__: {set_text:"set_text"}
});
var snow_systems_assets_AssetJSON = function(_system,_id,_json) {
	snow_systems_assets_Asset.call(this,_system,_id,3);
	this.set_json(_json);
};
$hxClasses["snow.systems.assets.AssetJSON"] = snow_systems_assets_AssetJSON;
snow_systems_assets_AssetJSON.__name__ = true;
snow_systems_assets_AssetJSON.load = function(_system,_id) {
	return new snow_systems_assets_AssetJSON(_system,_id,null).reload();
};
snow_systems_assets_AssetJSON.processor = function(_app,_id,_data) {
	if(_data == null) {
		return snow_api_Promise.reject(snow_types_Error.error("AssetJSON: data was null"));
	}
	return new snow_api_Promise(function(resolve,reject) {
		var _data_json = null;
		try {
			_data_json = JSON.parse(new haxe_io_Bytes(new Uint8Array(_data.buffer)).toString());
			_data = null;
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			_data = null;
			return reject(snow_types_Error.parse(e));
		}
		return resolve(_data_json);
	});
};
snow_systems_assets_AssetJSON.__super__ = snow_systems_assets_Asset;
snow_systems_assets_AssetJSON.prototype = $extend(snow_systems_assets_Asset.prototype,{
	reload: function() {
		var _gthis = this;
		return new snow_api_Promise(function(resolve,reject) {
			_gthis.system.app.io.data_flow(haxe_io_Path.join([_gthis.system.root,_gthis.id]),snow_systems_assets_AssetJSON.processor).then(function(_json) {
				_gthis.set_json(_json);
				resolve(_gthis);
			}).error(reject);
		});
	}
	,destroy: function() {
		this.set_json(null);
	}
	,set_json: function(_json) {
		this.loaded = _json != null;
		return this.json = _json;
	}
	,__class__: snow_systems_assets_AssetJSON
	,__properties__: {set_json:"set_json"}
});
var snow_systems_assets_Assets = function(_app) {
	this.root = "";
	this.app = _app;
	this.module = new snow_core_web_assets_Assets(this.app);
};
$hxClasses["snow.systems.assets.Assets"] = snow_systems_assets_Assets;
snow_systems_assets_Assets.__name__ = true;
snow_systems_assets_Assets.prototype = {
	shutdown: function() {
	}
	,__class__: snow_systems_assets_Assets
};
var snow_systems_audio_Audio = function(_app) {
	this.active = false;
	this.app = _app;
	this.module = new snow_modules_webaudio_Audio(this.app);
	this.emitter = new snow_api_Emitter();
	this.active = this.module.active;
};
$hxClasses["snow.systems.audio.Audio"] = snow_systems_audio_Audio;
snow_systems_audio_Audio.__name__ = true;
snow_systems_audio_Audio.prototype = {
	emit_Int: function(_event,_data) {
		this.emitter.emit(_event,_data);
	}
	,emit_snow_systems_audio_AudioSource: function(_event,_data) {
		this.emitter.emit(_event,_data);
	}
	,suspend: function() {
		if(!this.active) {
			return;
		}
		this.active = false;
		this.module.suspend();
	}
	,resume: function() {
		if(this.active || !this.module.active) {
			return;
		}
		this.active = true;
		this.module.resume();
	}
	,onevent: function(_event) {
		if(_event.type == 8) {
			switch(_event.window.type) {
			case 7:
				this.suspend();
				break;
			case 9:
				this.resume();
				break;
			default:
			}
		}
	}
	,shutdown: function() {
		this.active = false;
		this.module.shutdown();
	}
	,__class__: snow_systems_audio_Audio
};
var snow_systems_audio_AudioInstance = function(_source,_handle) {
	this.destroyed = false;
	this.source = _source;
	this.handle = _handle;
};
$hxClasses["snow.systems.audio.AudioInstance"] = snow_systems_audio_AudioInstance;
snow_systems_audio_AudioInstance.__name__ = true;
snow_systems_audio_AudioInstance.prototype = {
	destroy: function() {
		if(this.destroyed != false) {
			throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("destroyed == false" + (" ( " + "snow / Audio / Instance being destroyed more than once" + " )")));
		}
		this.source.app.audio.emit_Int(1,this.handle);
		this.source.instance_killed(this);
		this.destroyed = true;
		this.source = null;
		this.handle = -1;
	}
	,__class__: snow_systems_audio_AudioInstance
};
var snow_systems_audio_AudioSource = function(_app,_data) {
	this.app = _app;
	this.data = _data;
	this.instances = [];
};
$hxClasses["snow.systems.audio.AudioSource"] = snow_systems_audio_AudioSource;
snow_systems_audio_AudioSource.__name__ = true;
snow_systems_audio_AudioSource.prototype = {
	instance: function(_handle) {
		var _instance = new snow_systems_audio_AudioInstance(this,_handle);
		if(this.instances.indexOf(_instance) == -1) {
			this.instances.push(_instance);
		}
		return _instance;
	}
	,bytes_to_seconds: function(_bytes) {
		return _bytes / (this.data.rate * this.data.channels * (this.data.bits_per_sample == 16 ? 2 : 1));
	}
	,duration: function() {
		return this.bytes_to_seconds(this.data.length);
	}
	,destroy: function() {
		var c = this.instances.length;
		var i = 0;
		haxe_Log.trace("i / audiosource / " + ("destroy " + this.data.id + ", stream=" + Std.string(this.data.is_stream) + ", instances=" + c),{ fileName : "AudioSource.hx", lineNumber : 79, className : "snow.systems.audio.AudioSource", methodName : "destroy"});
		this.app.audio.emit_snow_systems_audio_AudioSource(2,this);
		while(i < c) {
			var _instance = this.instances.pop();
			_instance.destroy();
			_instance = null;
			++i;
		}
		this.data.destroy();
		this.data = null;
		this.instances = null;
		this.app = null;
	}
	,instance_killed: function(_instance) {
		HxOverrides.remove(this.instances,_instance);
	}
	,__class__: snow_systems_audio_AudioSource
};
var snow_systems_input_Input = function(_app) {
	this.touch_count = 0;
	this.gamepad_init_count = 16;
	this.app = _app;
	this.event = new snow_types_InputEvent();
	this.key_event = new snow_types_KeyEvent();
	this.text_event = new snow_types_TextEvent();
	this.mouse_event = new snow_types_MouseEvent();
	this.touch_event = new snow_types_TouchEvent();
	this.gamepad_event = new snow_types_GamepadEvent();
	this.mod_state = new snow_types_ModState();
	this.mod_state.none = true;
	this.key_code_pressed = new haxe_ds_IntMap();
	this.key_code_down = new haxe_ds_IntMap();
	this.key_code_released = new haxe_ds_IntMap();
	this.scan_code_pressed = new haxe_ds_IntMap();
	this.scan_code_down = new haxe_ds_IntMap();
	this.scan_code_released = new haxe_ds_IntMap();
	this.mouse_button_pressed = new haxe_ds_IntMap();
	this.mouse_button_down = new haxe_ds_IntMap();
	this.mouse_button_released = new haxe_ds_IntMap();
	this.gamepad_button_pressed = new haxe_ds_IntMap();
	this.gamepad_button_down = new haxe_ds_IntMap();
	this.gamepad_button_released = new haxe_ds_IntMap();
	this.gamepad_axis_values = new haxe_ds_IntMap();
	var _g1 = 0;
	var _g = this.gamepad_init_count;
	while(_g1 < _g) {
		var i = _g1++;
		this.gamepad_button_pressed.h[i] = new haxe_ds_IntMap();
		this.gamepad_button_down.h[i] = new haxe_ds_IntMap();
		this.gamepad_button_released.h[i] = new haxe_ds_IntMap();
		this.gamepad_axis_values.h[i] = new haxe_ds_IntMap();
	}
	this.touches_down = new haxe_ds_IntMap();
};
$hxClasses["snow.systems.input.Input"] = snow_systems_input_Input;
snow_systems_input_Input.__name__ = true;
snow_systems_input_Input.prototype = {
	dispatch_key_down_event: function(keycode,scancode,repeat,mod,timestamp,window_id) {
		if(!repeat) {
			this.key_code_pressed.h[keycode] = false;
			this.key_code_down.h[keycode] = true;
			this.scan_code_pressed.h[scancode] = false;
			this.scan_code_down.h[scancode] = true;
		}
		var _this = this.key_event;
		_this.type = 1;
		_this.keycode = keycode;
		_this.scancode = scancode;
		_this.repeat = repeat;
		_this.mod = mod;
		var _this1 = this.event;
		_this1.type = 1;
		_this1.key = null;
		_this1.text = null;
		_this1.mouse = null;
		_this1.touch = null;
		_this1.gamepad = null;
		_this1.window_id = window_id;
		_this1.timestamp = timestamp;
		_this1.key = this.key_event;
		this.app.dispatch_input_event(this.event);
		this.app.host.onkeydown(keycode,scancode,repeat,mod,timestamp,window_id);
	}
	,dispatch_key_up_event: function(keycode,scancode,repeat,mod,timestamp,window_id) {
		this.key_code_released.h[keycode] = false;
		this.key_code_down.remove(keycode);
		this.scan_code_released.h[scancode] = false;
		this.scan_code_down.remove(scancode);
		var _this = this.key_event;
		_this.type = 2;
		_this.keycode = keycode;
		_this.scancode = scancode;
		_this.repeat = repeat;
		_this.mod = mod;
		var _this1 = this.event;
		_this1.type = 1;
		_this1.key = null;
		_this1.text = null;
		_this1.mouse = null;
		_this1.touch = null;
		_this1.gamepad = null;
		_this1.window_id = window_id;
		_this1.timestamp = timestamp;
		_this1.key = this.key_event;
		this.app.dispatch_input_event(this.event);
		this.app.host.onkeyup(keycode,scancode,repeat,mod,timestamp,window_id);
	}
	,dispatch_text_event: function(text,start,length,type,timestamp,window_id) {
		var _this = this.text_event;
		_this.type = type;
		_this.text = text;
		_this.start = start;
		_this.length = length;
		var _this1 = this.event;
		_this1.type = 2;
		_this1.key = null;
		_this1.text = null;
		_this1.mouse = null;
		_this1.touch = null;
		_this1.gamepad = null;
		_this1.window_id = window_id;
		_this1.timestamp = timestamp;
		_this1.text = this.text_event;
		this.app.dispatch_input_event(this.event);
		this.app.host.ontextinput(text,start,length,type,timestamp,window_id);
	}
	,dispatch_mouse_move_event: function(x,y,xrel,yrel,timestamp,window_id) {
		var _this = this.mouse_event;
		_this.type = 1;
		_this.x = x;
		_this.y = y;
		_this.x_rel = xrel;
		_this.y_rel = yrel;
		_this.button = 0;
		_this.wheel_x = 0;
		_this.wheel_y = 0;
		var _this1 = this.event;
		_this1.type = 3;
		_this1.key = null;
		_this1.text = null;
		_this1.mouse = null;
		_this1.touch = null;
		_this1.gamepad = null;
		_this1.window_id = window_id;
		_this1.timestamp = timestamp;
		_this1.mouse = this.mouse_event;
		this.app.dispatch_input_event(this.event);
		this.app.host.onmousemove(x,y,xrel,yrel,timestamp,window_id);
	}
	,dispatch_mouse_down_event: function(x,y,button,timestamp,window_id) {
		this.mouse_button_pressed.h[button] = false;
		this.mouse_button_down.h[button] = true;
		var _this = this.mouse_event;
		_this.type = 2;
		_this.x = x;
		_this.y = y;
		_this.x_rel = 0;
		_this.y_rel = 0;
		_this.button = button;
		_this.wheel_x = 0;
		_this.wheel_y = 0;
		var _this1 = this.event;
		_this1.type = 3;
		_this1.key = null;
		_this1.text = null;
		_this1.mouse = null;
		_this1.touch = null;
		_this1.gamepad = null;
		_this1.window_id = window_id;
		_this1.timestamp = timestamp;
		_this1.mouse = this.mouse_event;
		this.app.dispatch_input_event(this.event);
		this.app.host.onmousedown(x,y,button,timestamp,window_id);
	}
	,dispatch_mouse_up_event: function(x,y,button,timestamp,window_id) {
		this.mouse_button_released.h[button] = false;
		this.mouse_button_down.remove(button);
		var _this = this.mouse_event;
		_this.type = 3;
		_this.x = x;
		_this.y = y;
		_this.x_rel = 0;
		_this.y_rel = 0;
		_this.button = button;
		_this.wheel_x = 0;
		_this.wheel_y = 0;
		var _this1 = this.event;
		_this1.type = 3;
		_this1.key = null;
		_this1.text = null;
		_this1.mouse = null;
		_this1.touch = null;
		_this1.gamepad = null;
		_this1.window_id = window_id;
		_this1.timestamp = timestamp;
		_this1.mouse = this.mouse_event;
		this.app.dispatch_input_event(this.event);
		this.app.host.onmouseup(x,y,button,timestamp,window_id);
	}
	,dispatch_mouse_wheel_event: function(x,y,timestamp,window_id) {
		var _this = this.mouse_event;
		_this.type = 4;
		_this.x = 0;
		_this.y = 0;
		_this.x_rel = 0;
		_this.y_rel = 0;
		_this.button = 0;
		_this.wheel_x = x;
		_this.wheel_y = y;
		var _this1 = this.event;
		_this1.type = 3;
		_this1.key = null;
		_this1.text = null;
		_this1.mouse = null;
		_this1.touch = null;
		_this1.gamepad = null;
		_this1.window_id = window_id;
		_this1.timestamp = timestamp;
		_this1.mouse = this.mouse_event;
		this.app.dispatch_input_event(this.event);
		this.app.host.onmousewheel(x,y,timestamp,window_id);
	}
	,dispatch_touch_down_event: function(x,y,dx,dy,touch_id,timestamp) {
		if(!this.touches_down.h.hasOwnProperty(touch_id)) {
			this.touch_count++;
			this.touches_down.h[touch_id] = true;
		}
		var _this = this.touch_event;
		_this.type = 2;
		_this.touch_id = touch_id;
		_this.x = x;
		_this.y = y;
		_this.dx = dx;
		_this.dy = dy;
		var _this1 = this.event;
		_this1.type = 4;
		_this1.key = null;
		_this1.text = null;
		_this1.mouse = null;
		_this1.touch = null;
		_this1.gamepad = null;
		_this1.window_id = 0;
		_this1.timestamp = timestamp;
		_this1.touch = this.touch_event;
		this.app.dispatch_input_event(this.event);
		this.app.host.ontouchdown(x,y,dx,dy,touch_id,timestamp);
	}
	,dispatch_touch_up_event: function(x,y,dx,dy,touch_id,timestamp) {
		var _this = this.touch_event;
		_this.type = 3;
		_this.touch_id = touch_id;
		_this.x = x;
		_this.y = y;
		_this.dx = dx;
		_this.dy = dy;
		var _this1 = this.event;
		_this1.type = 4;
		_this1.key = null;
		_this1.text = null;
		_this1.mouse = null;
		_this1.touch = null;
		_this1.gamepad = null;
		_this1.window_id = 0;
		_this1.timestamp = timestamp;
		_this1.touch = this.touch_event;
		this.app.dispatch_input_event(this.event);
		this.app.host.ontouchup(x,y,dx,dy,touch_id,timestamp);
		if(this.touches_down.remove(touch_id)) {
			this.touch_count--;
		}
	}
	,dispatch_touch_move_event: function(x,y,dx,dy,touch_id,timestamp) {
		var _this = this.touch_event;
		_this.type = 1;
		_this.touch_id = touch_id;
		_this.x = x;
		_this.y = y;
		_this.dx = dx;
		_this.dy = dy;
		var _this1 = this.event;
		_this1.type = 4;
		_this1.key = null;
		_this1.text = null;
		_this1.mouse = null;
		_this1.touch = null;
		_this1.gamepad = null;
		_this1.window_id = 0;
		_this1.timestamp = timestamp;
		_this1.touch = this.touch_event;
		this.app.dispatch_input_event(this.event);
		this.app.host.ontouchmove(x,y,dx,dy,touch_id,timestamp);
	}
	,dispatch_gamepad_axis_event: function(gamepad,axis,value,timestamp) {
		if(!this.gamepad_axis_values.h.hasOwnProperty(gamepad)) {
			throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("gamepad_axis_values.exists(gamepad)" + (" ( " + ("gamepad with id " + gamepad + " not pre-inited? Is gamepad_init_count too low, or the gamepad id not sequential from 0?") + " )")));
		}
		this.gamepad_axis_values.h[gamepad].h[axis] = value;
		var _this = this.gamepad_event;
		_this.button = null;
		_this.device_id = null;
		_this.device_event = null;
		_this.axis = axis;
		_this.value = value;
		_this.type = 1;
		_this.gamepad = gamepad;
		var _this1 = this.event;
		_this1.type = 5;
		_this1.key = null;
		_this1.text = null;
		_this1.mouse = null;
		_this1.touch = null;
		_this1.gamepad = null;
		_this1.window_id = 0;
		_this1.timestamp = timestamp;
		_this1.gamepad = this.gamepad_event;
		this.app.dispatch_input_event(this.event);
		this.app.host.ongamepadaxis(gamepad,axis,value,timestamp);
	}
	,dispatch_gamepad_button_down_event: function(gamepad,button,value,timestamp) {
		if(!this.gamepad_button_pressed.h.hasOwnProperty(gamepad)) {
			throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("gamepad_button_pressed.exists(gamepad)" + (" ( " + ("gamepad with id " + gamepad + " not pre-inited? Is gamepad_init_count too low, or the gamepad id not sequential from 0?") + " )")));
		}
		if(!this.gamepad_button_down.h.hasOwnProperty(gamepad)) {
			throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("gamepad_button_down.exists(gamepad)" + (" ( " + ("gamepad with id " + gamepad + " not pre-inited? Is gamepad_init_count too low, or the gamepad id not sequential from 0?") + " )")));
		}
		this.gamepad_button_pressed.h[gamepad].h[button] = false;
		this.gamepad_button_down.h[gamepad].h[button] = true;
		var _this = this.gamepad_event;
		_this.axis = null;
		_this.device_id = null;
		_this.device_event = null;
		_this.type = 2;
		_this.value = value;
		_this.button = button;
		_this.gamepad = gamepad;
		var _this1 = this.event;
		_this1.type = 5;
		_this1.key = null;
		_this1.text = null;
		_this1.mouse = null;
		_this1.touch = null;
		_this1.gamepad = null;
		_this1.window_id = 0;
		_this1.timestamp = timestamp;
		_this1.gamepad = this.gamepad_event;
		this.app.dispatch_input_event(this.event);
		this.app.host.ongamepaddown(gamepad,button,value,timestamp);
	}
	,dispatch_gamepad_button_up_event: function(gamepad,button,value,timestamp) {
		if(!this.gamepad_button_released.h.hasOwnProperty(gamepad)) {
			throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("gamepad_button_released.exists(gamepad)" + (" ( " + ("gamepad with id " + gamepad + " not pre-inited? Is gamepad_init_count too low, or the gamepad id not sequential from 0?") + " )")));
		}
		if(!this.gamepad_button_down.h.hasOwnProperty(gamepad)) {
			throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("gamepad_button_down.exists(gamepad)" + (" ( " + ("gamepad with id " + gamepad + " not pre-inited? Is gamepad_init_count too low, or the gamepad id not sequential from 0?") + " )")));
		}
		this.gamepad_button_released.h[gamepad].h[button] = false;
		this.gamepad_button_down.h[gamepad].remove(button);
		var _this = this.gamepad_event;
		_this.axis = null;
		_this.device_id = null;
		_this.device_event = null;
		_this.type = 3;
		_this.value = value;
		_this.button = button;
		_this.gamepad = gamepad;
		var _this1 = this.event;
		_this1.type = 5;
		_this1.key = null;
		_this1.text = null;
		_this1.mouse = null;
		_this1.touch = null;
		_this1.gamepad = null;
		_this1.window_id = 0;
		_this1.timestamp = timestamp;
		_this1.gamepad = this.gamepad_event;
		this.app.dispatch_input_event(this.event);
		this.app.host.ongamepadup(gamepad,button,value,timestamp);
	}
	,dispatch_gamepad_device_event: function(gamepad,id,type,timestamp) {
		var _this = this.gamepad_event;
		_this.axis = null;
		_this.value = null;
		_this.button = null;
		_this.device_id = id;
		_this.device_event = type;
		_this.gamepad = gamepad;
		_this.type = 4;
		var _this1 = this.event;
		_this1.type = 5;
		_this1.key = null;
		_this1.text = null;
		_this1.mouse = null;
		_this1.touch = null;
		_this1.gamepad = null;
		_this1.window_id = 0;
		_this1.timestamp = timestamp;
		_this1.gamepad = this.gamepad_event;
		this.app.dispatch_input_event(this.event);
		this.app.host.ongamepaddevice(gamepad,id,type,timestamp);
	}
	,onevent: function(_event) {
		if(_event.type == 3) {
			this._update_keystate();
			this._update_gamepadstate();
			this._update_mousestate();
		}
	}
	,_update_mousestate: function() {
		var _code = this.mouse_button_pressed.keys();
		while(_code.hasNext()) {
			var _code1 = _code.next();
			if(this.mouse_button_pressed.h[_code1]) {
				this.mouse_button_pressed.remove(_code1);
			} else {
				this.mouse_button_pressed.h[_code1] = true;
			}
		}
		var _code2 = this.mouse_button_released.keys();
		while(_code2.hasNext()) {
			var _code3 = _code2.next();
			if(this.mouse_button_released.h[_code3]) {
				this.mouse_button_released.remove(_code3);
			} else {
				this.mouse_button_released.h[_code3] = true;
			}
		}
	}
	,_update_gamepadstate: function() {
		var _gamepad_pressed = this.gamepad_button_pressed.iterator();
		while(_gamepad_pressed.hasNext()) {
			var _gamepad_pressed1 = _gamepad_pressed.next();
			var _button = _gamepad_pressed1.keys();
			while(_button.hasNext()) {
				var _button1 = _button.next();
				if(_gamepad_pressed1.h[_button1]) {
					_gamepad_pressed1.remove(_button1);
				} else {
					_gamepad_pressed1.h[_button1] = true;
				}
			}
		}
		var _gamepad_released = this.gamepad_button_released.iterator();
		while(_gamepad_released.hasNext()) {
			var _gamepad_released1 = _gamepad_released.next();
			var _button2 = _gamepad_released1.keys();
			while(_button2.hasNext()) {
				var _button3 = _button2.next();
				if(_gamepad_released1.h[_button3]) {
					_gamepad_released1.remove(_button3);
				} else {
					_gamepad_released1.h[_button3] = true;
				}
			}
		}
	}
	,_update_keystate: function() {
		var _code = this.key_code_pressed.keys();
		while(_code.hasNext()) {
			var _code1 = _code.next();
			if(this.key_code_pressed.h[_code1]) {
				this.key_code_pressed.remove(_code1);
			} else {
				this.key_code_pressed.h[_code1] = true;
			}
		}
		var _code2 = this.key_code_released.keys();
		while(_code2.hasNext()) {
			var _code3 = _code2.next();
			if(this.key_code_released.h[_code3]) {
				this.key_code_released.remove(_code3);
			} else {
				this.key_code_released.h[_code3] = true;
			}
		}
		var _code4 = this.scan_code_pressed.keys();
		while(_code4.hasNext()) {
			var _code5 = _code4.next();
			if(this.scan_code_pressed.h[_code5]) {
				this.scan_code_pressed.remove(_code5);
			} else {
				this.scan_code_pressed.h[_code5] = true;
			}
		}
		var _code6 = this.scan_code_released.keys();
		while(_code6.hasNext()) {
			var _code7 = _code6.next();
			if(this.scan_code_released.h[_code7]) {
				this.scan_code_released.remove(_code7);
			} else {
				this.scan_code_released.h[_code7] = true;
			}
		}
	}
	,__class__: snow_systems_input_Input
};
var snow_systems_input_Keycodes = function() { };
$hxClasses["snow.systems.input.Keycodes"] = snow_systems_input_Keycodes;
snow_systems_input_Keycodes.__name__ = true;
snow_systems_input_Keycodes.to_scan = function(keycode) {
	if((keycode & 1073741824) != 0) {
		return keycode & -1073741825;
	}
	switch(keycode) {
	case 8:
		return 42;
	case 9:
		return 43;
	case 13:
		return 40;
	case 27:
		return 41;
	case 32:
		return 44;
	case 47:
		return 56;
	case 48:
		return 39;
	case 49:
		return 30;
	case 50:
		return 31;
	case 51:
		return 32;
	case 52:
		return 33;
	case 53:
		return 34;
	case 54:
		return 35;
	case 55:
		return 36;
	case 56:
		return 37;
	case 57:
		return 38;
	case 59:
		return 51;
	case 61:
		return 46;
	case 91:
		return 47;
	case 92:
		return 49;
	case 93:
		return 48;
	case 96:
		return 53;
	case 97:
		return 4;
	case 98:
		return 5;
	case 99:
		return 6;
	case 100:
		return 7;
	case 101:
		return 8;
	case 102:
		return 9;
	case 103:
		return 10;
	case 104:
		return 11;
	case 105:
		return 12;
	case 106:
		return 13;
	case 107:
		return 14;
	case 108:
		return 15;
	case 109:
		return 16;
	case 110:
		return 17;
	case 111:
		return 18;
	case 112:
		return 19;
	case 113:
		return 20;
	case 114:
		return 21;
	case 115:
		return 22;
	case 116:
		return 23;
	case 117:
		return 24;
	case 118:
		return 25;
	case 119:
		return 26;
	case 120:
		return 27;
	case 121:
		return 28;
	case 122:
		return 29;
	}
	return 0;
};
var snow_systems_io_IO = function(_app) {
	this.string_save_prefix = "slot";
	this.app = _app;
	this.module = new snow_core_web_io_IO(this.app);
};
$hxClasses["snow.systems.io.IO"] = snow_systems_io_IO;
snow_systems_io_IO.__name__ = true;
snow_systems_io_IO.prototype = {
	data_flow: function(_id,_processor,_provider) {
		var _gthis = this;
		if(_provider == null) {
			_provider = $bind(this,this.default_provider);
		}
		return new snow_api_Promise(function(resolve,reject) {
			_provider(_gthis.app,_id).then(function(data) {
				if(_processor != null) {
					_processor(_gthis.app,_id,data).then(resolve,reject);
				} else {
					resolve(data);
				}
			}).error(reject);
		});
	}
	,default_provider: function(_app,_id) {
		return this.module.data_load(_id,null);
	}
	,shutdown: function() {
	}
	,__class__: snow_systems_io_IO
};
var snow_types_Config = function() { };
$hxClasses["snow.types.Config"] = snow_types_Config;
snow_types_Config.__name__ = true;
var snow_types_Error = { __ename__ : true, __constructs__ : ["error","init","parse"] };
snow_types_Error.error = function(value) { var $x = ["error",0,value]; $x.__enum__ = snow_types_Error; $x.toString = $estr; return $x; };
snow_types_Error.init = function(value) { var $x = ["init",1,value]; $x.__enum__ = snow_types_Error; $x.toString = $estr; return $x; };
snow_types_Error.parse = function(value) { var $x = ["parse",2,value]; $x.__enum__ = snow_types_Error; $x.toString = $estr; return $x; };
var snow_types_ImageData = function(_app,_options) {
	this.bpp_source = 4;
	this.bpp = 4;
	this.height_actual = 0;
	this.width_actual = 0;
	this.height = 0;
	this.width = 0;
	this.id = "ImageData";
	this.app = _app;
	if(_options.id == null) {
		_options.id = this.id;
	}
	this.id = _options.id;
	this.width = _options.width;
	this.height = _options.height;
	this.width_actual = _options.width_actual;
	this.height_actual = _options.height_actual;
	this.bpp = _options.bpp;
	this.bpp_source = _options.bpp_source;
	if(_options.pixels == null) {
		_options.pixels = this.pixels;
	}
	this.pixels = _options.pixels;
	_options = null;
};
$hxClasses["snow.types.ImageData"] = snow_types_ImageData;
snow_types_ImageData.__name__ = true;
snow_types_ImageData.prototype = {
	__class__: snow_types_ImageData
};
var snow_types_SystemEvent = function() {
};
$hxClasses["snow.types.SystemEvent"] = snow_types_SystemEvent;
snow_types_SystemEvent.__name__ = true;
snow_types_SystemEvent.prototype = {
	__class__: snow_types_SystemEvent
};
var snow_types_WindowEvent = function() {
	this.window_id = -1;
	this.timestamp = 0.0;
	this.type = 0;
};
$hxClasses["snow.types.WindowEvent"] = snow_types_WindowEvent;
snow_types_WindowEvent.__name__ = true;
snow_types_WindowEvent.prototype = {
	__class__: snow_types_WindowEvent
};
var snow_types_KeyEvent = function() {
};
$hxClasses["snow.types.KeyEvent"] = snow_types_KeyEvent;
snow_types_KeyEvent.__name__ = true;
snow_types_KeyEvent.prototype = {
	__class__: snow_types_KeyEvent
};
var snow_types_TextEvent = function() {
};
$hxClasses["snow.types.TextEvent"] = snow_types_TextEvent;
snow_types_TextEvent.__name__ = true;
snow_types_TextEvent.prototype = {
	__class__: snow_types_TextEvent
};
var snow_types_MouseEvent = function() {
};
$hxClasses["snow.types.MouseEvent"] = snow_types_MouseEvent;
snow_types_MouseEvent.__name__ = true;
snow_types_MouseEvent.prototype = {
	__class__: snow_types_MouseEvent
};
var snow_types_TouchEvent = function() {
};
$hxClasses["snow.types.TouchEvent"] = snow_types_TouchEvent;
snow_types_TouchEvent.__name__ = true;
snow_types_TouchEvent.prototype = {
	__class__: snow_types_TouchEvent
};
var snow_types_GamepadEvent = function() {
};
$hxClasses["snow.types.GamepadEvent"] = snow_types_GamepadEvent;
snow_types_GamepadEvent.__name__ = true;
snow_types_GamepadEvent.prototype = {
	__class__: snow_types_GamepadEvent
};
var snow_types_InputEvent = function() {
	this.window_id = -1;
	this.timestamp = 0.0;
};
$hxClasses["snow.types.InputEvent"] = snow_types_InputEvent;
snow_types_InputEvent.__name__ = true;
snow_types_InputEvent.prototype = {
	__class__: snow_types_InputEvent
};
var snow_types_ModState = function() {
	this.meta = false;
	this.alt = false;
	this.shift = false;
	this.ctrl = false;
	this.mode = false;
	this.caps = false;
	this.num = false;
	this.rmeta = false;
	this.lmeta = false;
	this.ralt = false;
	this.lalt = false;
	this.rctrl = false;
	this.lctrl = false;
	this.rshift = false;
	this.lshift = false;
	this.none = false;
};
$hxClasses["snow.types.ModState"] = snow_types_ModState;
snow_types_ModState.__name__ = true;
snow_types_ModState.prototype = {
	__class__: snow_types_ModState
};
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
$hxClasses["Math"] = Math;
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = true;
$hxClasses["Array"] = Array;
Array.__name__ = true;
var Int = $hxClasses["Int"] = { __name__ : ["Int"]};
var Dynamic = $hxClasses["Dynamic"] = { __name__ : ["Dynamic"]};
var Float = $hxClasses["Float"] = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = $hxClasses["Class"] = { __name__ : ["Class"]};
var Enum = { };
haxe_Resource.content = [{ name : "default.frag.textured.gl3.glsl", data : "I3ZlcnNpb24gMzMwIGNvcmUKCnVuaWZvcm0gc2FtcGxlcjJEIHRleDA7CmluIHZlYzIgdGNvb3JkOwppbiB2ZWM0IGNvbG9yOwpvdXQgdmVjNCBmcmFnOwoKdm9pZCBtYWluKCkgewogICAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUodGV4MCwgdGNvb3JkKTsKICAgIGZyYWcgPSBjb2xvciAqIHRleGNvbG9yOwp9"},{ name : "version", data : "MS4wLjAtYWxwaGEuMw"},{ name : "default.vert.gl3.glsl", data : "I3ZlcnNpb24gMzMwIGNvcmUKCmxheW91dChsb2NhdGlvbiA9IDApIGluIHZlYzMgdmVydGV4UG9zaXRpb247CmxheW91dChsb2NhdGlvbiA9IDEpIGluIHZlYzIgdmVydGV4VENvb3JkOwpsYXlvdXQobG9jYXRpb24gPSAyKSBpbiB2ZWM0IHZlcnRleENvbG9yOwpsYXlvdXQobG9jYXRpb24gPSAzKSBpbiB2ZWMzIHZlcnRleE5vcm1hbDsKCm91dCB2ZWMyIHRjb29yZDsKb3V0IHZlYzQgY29sb3I7Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKdW5pZm9ybSBtYXQ0IG1vZGVsVmlld01hdHJpeDsKCnZvaWQgbWFpbih2b2lkKSB7CgogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogbW9kZWxWaWV3TWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRjb29yZCA9IHZlcnRleFRDb29yZDsKICAgIGNvbG9yID0gdmVydGV4Q29sb3I7Cgp9"},{ name : "default.vert.glsl", data : "YXR0cmlidXRlIHZlYzMgdmVydGV4UG9zaXRpb247CmF0dHJpYnV0ZSB2ZWMyIHZlcnRleFRDb29yZDsKYXR0cmlidXRlIHZlYzQgdmVydGV4Q29sb3I7CmF0dHJpYnV0ZSB2ZWMzIHZlcnRleE5vcm1hbDsKCnZhcnlpbmcgdmVjMiB0Y29vcmQ7CnZhcnlpbmcgdmVjNCBjb2xvcjsKCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uTWF0cml4Owp1bmlmb3JtIG1hdDQgbW9kZWxWaWV3TWF0cml4OwoKdm9pZCBtYWluKHZvaWQpIHsKCiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiBtb2RlbFZpZXdNYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgdGNvb3JkID0gdmVydGV4VENvb3JkOwogICAgY29sb3IgPSB2ZXJ0ZXhDb2xvcjsKICAgICAgICAvL2htbSEgSSB0aGluayBzaGFkZXJzIGFyZSBjb21waWxlZCBvcHRpbWlzZWQsIHJlbW92aW5nIHVudXNlZCB2YWx1ZXMgd2hpY2ggbWVhbnMKICAgICAgICAvL3RoYXQgdGhlIHNoYWRlcnMgZ2V0VmVydGV4Tm9ybWFsIGF0dHJpYnV0ZSByZXR1cm5zIGludmFsaWQgKC0xKSB2YWx1ZXMhCiAgICB2ZWMzIG4gPSB2ZXJ0ZXhOb3JtYWw7CiAgICBnbF9Qb2ludFNpemUgPSAxLjA7Cgp9"},{ name : "default.frag.bitmapfont.gl3.glsl", data : "I3ZlcnNpb24gMzMwIGNvcmUKCiNkZWZpbmUgT1VUTElORSAxCiNkZWZpbmUgR0xPVyAxCiNkZWZpbmUgU1VQRVJTQU1QTEUgMQoKdW5pZm9ybSBzYW1wbGVyMkQgdGV4MDsKaW4gdmVjMiB0Y29vcmQ7CmluIHZlYzQgY29sb3I7Cm91dCB2ZWM0IGZyYWc7Cgp1bmlmb3JtIGZsb2F0IHNtb290aG5lc3M7CnVuaWZvcm0gZmxvYXQgdGhpY2tuZXNzOwoKdW5pZm9ybSB2ZWM0IG91dGxpbmVfY29sb3I7CnVuaWZvcm0gZmxvYXQgb3V0bGluZTsKCnVuaWZvcm0gdmVjNCBnbG93X2NvbG9yOwp1bmlmb3JtIGZsb2F0IGdsb3dfdGhyZXNob2xkOwp1bmlmb3JtIGZsb2F0IGdsb3dfYW1vdW50OwoKCmZsb2F0IGVkZ2UoZmxvYXQgdmFsdWUsIGZsb2F0IGFtb3VudCwgZmxvYXQgdCkgewogICAgcmV0dXJuIHNtb290aHN0ZXAodmFsdWUgLSBhbW91bnQsIHZhbHVlICsgYW1vdW50LCB0KTsKfQoKZmxvYXQgZ2V0KHZlYzIgdXYsIGZsb2F0IHdpZHRoKSB7CiAgICBmbG9hdCB0ZXhhID0gdGV4dHVyZSh0ZXgwLCB1dikuYTsKICAgIHJldHVybiBzbW9vdGhzdGVwKDAuNSAtIHdpZHRoLCAwLjUgKyB3aWR0aCwgdGV4YSk7Cn0KCnZvaWQgbWFpbigpIHsKCi8vYmFzaWMgc2RmCgogICAgZmxvYXQgZGlzdCA9IHRleHR1cmUodGV4MCwgdGNvb3JkKS5hOwogICAgICAgIC8vZndpZHRoIGtlZXBzIHdpZHRoIHNpbWlsYXIgZGVzcGl0ZSBzY2FsaW5nLCBzZWUgYmVsb3cgZm9yIG9wdGlvbnMKICAgIGZsb2F0IHNtb290aGFtdCA9IHNtb290aG5lc3MgKiBmd2lkdGgoZGlzdCk7CiAgICAvLyBmbG9hdCBzbW9vdGhhbXQgPSBzbW9vdGhuZXNzICogbGVuZ3RoKHZlYzIoZEZkeChkaXN0KSwgZEZkeShkaXN0KSkpOwoKICAgICAgICAvL2NhbGN1bGF0ZSB0aGUgZWRnZSBzbW9vdGhpbmcKICAgIGZsb2F0IGFscGhhID0gZWRnZSgxLjAgLSB0aGlja25lc3MsIHNtb290aGFtdCwgZGlzdCk7CgovL3N1cGVyIHNhbXBsaW5nCgogICAgICAgICNpZiBTVVBFUlNBTVBMRSA9PSAxCgogICAgICAgICAgICAgICAgLy90aGVzZSB2YWx1ZXMgY2FuIGJlIGV4cG9zZWQgbGF0ZXIKICAgICAgICAgICAgICAgIC8vdGhlIGN1cnJlbnQgYmVpbmcgMC4yNS9zcXJ0KDIpCiAgICAgICAgICAgIGZsb2F0IGZhY3RvciA9IDAuMTc2Nzc2Njk1MzsKICAgICAgICAgICAgZmxvYXQgc2FtcGxlYW10ID0gMC41OwogICAgICAgICAgICAgICAgLy90aGlzIGlzIGEgc2ltcGxlIGJveCBmaWx0ZXIgYXJvdW5kIHRoZSBwb2ludCwKICAgICAgICAgICAgICAgIC8vd2UgdXNlIGEgc2VwYXJhdGUgd2lkdGggZm9yIG5vdwogICAgICAgICAgICBmbG9hdCBzYW1wbGV3ID0gc2FtcGxlYW10ICogZndpZHRoKGRpc3QpOwogICAgICAgICAgICB2ZWMyIHNhbXBsZW9mZnNldCA9IGZhY3RvciAqIChkRmR4KHRjb29yZCkgKyBkRmR5KHRjb29yZCkpOwogICAgICAgICAgICB2ZWM0IGZsdHIgPSB2ZWM0KHRjb29yZCAtIHNhbXBsZW9mZnNldCwgdGNvb3JkICsgc2FtcGxlb2Zmc2V0KTsKCiAgICAgICAgICAgIGZsb2F0IHRvdGFsID0gZ2V0KCBmbHRyLnh5LCBzYW1wbGV3ICkgKyBnZXQoIGZsdHIuencsIHNhbXBsZXcgKSArCiAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0KCBmbHRyLnh3LCBzYW1wbGV3ICkgKyBnZXQoIGZsdHIuenksIHNhbXBsZXcgKTsKCiAgICAgICAgICAgIGFscGhhID0gKGFscGhhICsgMC41ICogdG90YWwpIC8gMy4wOwoKICAgICAgICAjZW5kaWYgLy9TVVBFUlNBTVBMRQoKICAgICAgICAvL3RoZSBiYXNlIGNvbG9yICsgc2NhbGVkIGJ5IHRoZSBuZXcgYWxwaGEKICAgIHZlYzQgZmluYWxDb2xvciA9IHZlYzQoY29sb3IucmdiLCBjb2xvci5hICogYWxwaGEpOwoKLy9vdXRsaW5lCgogICAgI2lmIE9VVExJTkUgPT0gMQoKICAgICAgICAgICAgLy93aXAKICAgICAgICBpZihvdXRsaW5lID4gMC4wKSB7CgogICAgICAgICAgICAvL3JhbmdlIG9mIDEuMCB+IDAuMSwgd2UgZ2V0IDAgfiAxCiAgICAgICAgICAgIGZsb2F0IF9vdXRsaW5lID0gMC45IC0gKG91dGxpbmUgKiAwLjkpOwogICAgICAgICAgICBmbG9hdCBfb3V0bGluZV9hID0gZWRnZShfb3V0bGluZSwgc21vb3RoYW10LCBkaXN0KTsKICAgICAgICAgICAgdmVjNCBfb3V0bGluZV9jID0gdmVjNChvdXRsaW5lX2NvbG9yLnJnYiwgb3V0bGluZV9jb2xvci5hICogX291dGxpbmVfYSk7CgogICAgICAgICAgICBmaW5hbENvbG9yID0gbWl4KF9vdXRsaW5lX2MsIGZpbmFsQ29sb3IsIGFscGhhKTsKCiAgICAgICAgfSAvL291dGxpbmUgPiAwLjAKCiAgICAjZW5kaWYgLy9PVVRMSU5FCgovLyBnbG93CgogICAgI2lmIEdMT1cgPT0gMQoKICAgICAgICAgICAgLy93aXAKICAgICAgICBpZihnbG93X2Ftb3VudCA+IDAuMCkgewoKICAgICAgICAgICAgLy86dG9kbzogZXhwb3NlIG9mZnNldCBmb3IgZGlyZWN0aW9uYWwgc2hhZG93CiAgICAgICAgICAgIC8vIHZlYzIgX2dsb3dfb2ZmcyA9IHZlYzIoMCwwKTsKICAgICAgICAgICAgLy8gZmxvYXQgX2dsb3dfZGlzdCA9IHRleHR1cmUodGV4MCwgdGNvb3JkIC0gX2dsb3dfb2Zmc2V0KS5hOwoKICAgICAgICAgICAgZmxvYXQgX2dsb3dfYW10ID0gMS4wIC0gZ2xvd19hbW91bnQ7CiAgICAgICAgICAgIGZsb2F0IF9nbG93X2xpbWl0ID0gKF9nbG93X2FtdCAqIGdsb3dfdGhyZXNob2xkKTsKICAgICAgICAgICAgZmxvYXQgX2dsb3dfYSA9IGVkZ2UoX2dsb3dfYW10LCBfZ2xvd19saW1pdCwgZGlzdCk7CiAgICAgICAgICAgIHZlYzQgIF9nbG93X2MgPSB2ZWM0KGdsb3dfY29sb3IucmdiLCBnbG93X2NvbG9yLmEgKiBfZ2xvd19hKTsKCiAgICAgICAgICAgIGZpbmFsQ29sb3IgPSBtaXgoX2dsb3dfYywgZmluYWxDb2xvciwgZmluYWxDb2xvci5hKTsKCiAgICAgICAgfSAvL2dsb3dfYW1vdW50ID4gMAoKICAgICNlbmRpZiAvL0dMT1cKCi8vZG9uZQoKICAgIGZyYWcgPSBmaW5hbENvbG9yOwoKCn0gLy9tYWluCg"},{ name : "build", data : "K2EwZTlkODM2NDg"},{ name : "default.frag.glsl", data : "dmFyeWluZyB2ZWMyIHRjb29yZDsKdmFyeWluZyB2ZWM0IGNvbG9yOwoKdm9pZCBtYWluKCkgewogICAgZ2xfRnJhZ0NvbG9yID0gY29sb3I7Cn0"},{ name : "default.fnt", data : ""},{ name : "default.png", data : ""},{ name : "default.frag.gl3.glsl", data : "I3ZlcnNpb24gMzMwIGNvcmUKCmluIHZlYzQgY29sb3I7CmluIHZlYzIgdGNvb3JkOwoKb3V0IHZlYzQgZnJhZzsKCnZvaWQgbWFpbigpewogICAgZnJhZyA9IGNvbG9yOwp9Cg"},{ name : "default.frag.textured.glsl", data : "dW5pZm9ybSBzYW1wbGVyMkQgdGV4MDsKdmFyeWluZyB2ZWMyIHRjb29yZDsKdmFyeWluZyB2ZWM0IGNvbG9yOwoKdm9pZCBtYWluKCkgewogICAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUyRCh0ZXgwLCB0Y29vcmQpOwogICAgZ2xfRnJhZ0NvbG9yID0gY29sb3IgKiB0ZXhjb2xvcjsKfQ"},{ name : "default.frag.bitmapfont.glsl", data : "I2RlZmluZSBPVVRMSU5FIDEKI2RlZmluZSBHTE9XIDEKI2RlZmluZSBTVVBFUlNBTVBMRSAxCgp1bmlmb3JtIHNhbXBsZXIyRCB0ZXgwOwp2YXJ5aW5nIHZlYzIgdGNvb3JkOwp2YXJ5aW5nIHZlYzQgY29sb3I7Cgp1bmlmb3JtIGZsb2F0IHNtb290aG5lc3M7CnVuaWZvcm0gZmxvYXQgdGhpY2tuZXNzOwoKdW5pZm9ybSB2ZWM0IG91dGxpbmVfY29sb3I7CnVuaWZvcm0gZmxvYXQgb3V0bGluZTsKCnVuaWZvcm0gdmVjNCBnbG93X2NvbG9yOwp1bmlmb3JtIGZsb2F0IGdsb3dfdGhyZXNob2xkOwp1bmlmb3JtIGZsb2F0IGdsb3dfYW1vdW50OwoKCmZsb2F0IGVkZ2UoZmxvYXQgdmFsdWUsIGZsb2F0IGFtb3VudCwgZmxvYXQgdCkgewogICAgcmV0dXJuIHNtb290aHN0ZXAodmFsdWUgLSBhbW91bnQsIHZhbHVlICsgYW1vdW50LCB0KTsKfQoKZmxvYXQgZ2V0KHZlYzIgdXYsIGZsb2F0IHdpZHRoKSB7CiAgICBmbG9hdCB0ZXhhID0gdGV4dHVyZTJEKHRleDAsIHV2KS5hOwogICAgcmV0dXJuIHNtb290aHN0ZXAoMC41IC0gd2lkdGgsIDAuNSArIHdpZHRoLCB0ZXhhKTsKfQoKdm9pZCBtYWluKCkgewoKLy9iYXNpYyBzZGYKCiAgICBmbG9hdCBkaXN0ID0gdGV4dHVyZTJEKHRleDAsIHRjb29yZCkuYTsKICAgICAgICAvL2Z3aWR0aCBrZWVwcyB3aWR0aCBzaW1pbGFyIGRlc3BpdGUgc2NhbGluZywgc2VlIGJlbG93IGZvciBvcHRpb25zCiAgICBmbG9hdCBzbW9vdGhhbXQgPSBzbW9vdGhuZXNzICogZndpZHRoKGRpc3QpOwogICAgLy8gZmxvYXQgc21vb3RoYW10ID0gc21vb3RobmVzcyAqIGxlbmd0aCh2ZWMyKGRGZHgoZGlzdCksIGRGZHkoZGlzdCkpKTsKCiAgICAgICAgLy9jYWxjdWxhdGUgdGhlIGVkZ2Ugc21vb3RoaW5nCiAgICBmbG9hdCBhbHBoYSA9IGVkZ2UoMS4wIC0gdGhpY2tuZXNzLCBzbW9vdGhhbXQsIGRpc3QpOwoKLy9zdXBlciBzYW1wbGluZwoKICAgICAgICAjaWYgU1VQRVJTQU1QTEUgPT0gMQoKICAgICAgICAgICAgICAgIC8vdGhlc2UgdmFsdWVzIGNhbiBiZSBleHBvc2VkIGxhdGVyCiAgICAgICAgICAgICAgICAvL3RoZSBjdXJyZW50IGJlaW5nIDAuMjUvc3FydCgyKQogICAgICAgICAgICBmbG9hdCBmYWN0b3IgPSAwLjE3Njc3NjY5NTM7CiAgICAgICAgICAgIGZsb2F0IHNhbXBsZWFtdCA9IDAuNTsKICAgICAgICAgICAgICAgIC8vdGhpcyBpcyBhIHNpbXBsZSBib3ggZmlsdGVyIGFyb3VuZCB0aGUgcG9pbnQsCiAgICAgICAgICAgICAgICAvL3dlIHVzZSBhIHNlcGFyYXRlIHdpZHRoIGZvciBub3cKICAgICAgICAgICAgZmxvYXQgc2FtcGxldyA9IHNhbXBsZWFtdCAqIGZ3aWR0aChkaXN0KTsKICAgICAgICAgICAgdmVjMiBzYW1wbGVvZmZzZXQgPSBmYWN0b3IgKiAoZEZkeCh0Y29vcmQpICsgZEZkeSh0Y29vcmQpKTsKICAgICAgICAgICAgdmVjNCBmbHRyID0gdmVjNCh0Y29vcmQgLSBzYW1wbGVvZmZzZXQsIHRjb29yZCArIHNhbXBsZW9mZnNldCk7CgogICAgICAgICAgICBmbG9hdCB0b3RhbCA9IGdldCggZmx0ci54eSwgc2FtcGxldyApICsgZ2V0KCBmbHRyLnp3LCBzYW1wbGV3ICkgKwogICAgICAgICAgICAgICAgICAgICAgICAgIGdldCggZmx0ci54dywgc2FtcGxldyApICsgZ2V0KCBmbHRyLnp5LCBzYW1wbGV3ICk7CgogICAgICAgICAgICBhbHBoYSA9IChhbHBoYSArIDAuNSAqIHRvdGFsKSAvIDMuMDsKCiAgICAgICAgI2VuZGlmIC8vU1VQRVJTQU1QTEUKCiAgICAgICAgLy90aGUgYmFzZSBjb2xvciArIHNjYWxlZCBieSB0aGUgbmV3IGFscGhhCiAgICB2ZWM0IGZpbmFsQ29sb3IgPSB2ZWM0KGNvbG9yLnJnYiwgY29sb3IuYSAqIGFscGhhKTsKCi8vb3V0bGluZQoKICAgICNpZiBPVVRMSU5FID09IDEKCiAgICAgICAgICAgIC8vd2lwCiAgICAgICAgaWYob3V0bGluZSA+IDAuMCkgewoKICAgICAgICAgICAgLy9yYW5nZSBvZiAxLjAgfiAwLjEsIHdlIGdldCAwIH4gMQogICAgICAgICAgICBmbG9hdCBfb3V0bGluZSA9IDAuOSAtIChvdXRsaW5lICogMC45KTsKICAgICAgICAgICAgZmxvYXQgX291dGxpbmVfYSA9IGVkZ2UoX291dGxpbmUsIHNtb290aGFtdCwgZGlzdCk7CiAgICAgICAgICAgIHZlYzQgX291dGxpbmVfYyA9IHZlYzQob3V0bGluZV9jb2xvci5yZ2IsIG91dGxpbmVfY29sb3IuYSAqIF9vdXRsaW5lX2EpOwoKICAgICAgICAgICAgZmluYWxDb2xvciA9IG1peChfb3V0bGluZV9jLCBmaW5hbENvbG9yLCBhbHBoYSk7CgogICAgICAgIH0gLy9vdXRsaW5lID4gMC4wCgogICAgI2VuZGlmIC8vT1VUTElORQoKLy8gZ2xvdwoKICAgICNpZiBHTE9XID09IDEKCiAgICAgICAgICAgIC8vd2lwCiAgICAgICAgaWYoZ2xvd19hbW91bnQgPiAwLjApIHsKCiAgICAgICAgICAgIC8vOnRvZG86IGV4cG9zZSBvZmZzZXQgZm9yIGRpcmVjdGlvbmFsIHNoYWRvdwogICAgICAgICAgICAvLyB2ZWMyIF9nbG93X29mZnMgPSB2ZWMyKDAsMCk7CiAgICAgICAgICAgIC8vIGZsb2F0IF9nbG93X2Rpc3QgPSB0ZXh0dXJlMkQodGV4MCwgdGNvb3JkIC0gX2dsb3dfb2Zmc2V0KS5hOwoKICAgICAgICAgICAgZmxvYXQgX2dsb3dfYW10ID0gMS4wIC0gZ2xvd19hbW91bnQ7CiAgICAgICAgICAgIGZsb2F0IF9nbG93X2xpbWl0ID0gKF9nbG93X2FtdCAqIGdsb3dfdGhyZXNob2xkKTsKICAgICAgICAgICAgZmxvYXQgX2dsb3dfYSA9IGVkZ2UoX2dsb3dfYW10LCBfZ2xvd19saW1pdCwgZGlzdCk7CiAgICAgICAgICAgIHZlYzQgIF9nbG93X2MgPSB2ZWM0KGdsb3dfY29sb3IucmdiLCBnbG93X2NvbG9yLmEgKiBfZ2xvd19hKTsKCiAgICAgICAgICAgIGZpbmFsQ29sb3IgPSBtaXgoX2dsb3dfYywgZmluYWxDb2xvciwgZmluYWxDb2xvci5hKTsKCiAgICAgICAgfSAvL2dsb3dfYW1vdW50ID4gMAoKICAgICNlbmRpZiAvL0dMT1cKCi8vZG9uZQoKICAgIGdsX0ZyYWdDb2xvciA9IGZpbmFsQ29sb3I7CgoKfSAvL21haW4K"}];
var __map_reserved = {}
hxPixels_PixelFormat.ARGB = new hxPixels_PixelFormat(0,1,2,3,"ARGB");
hxPixels_PixelFormat.RGBA = new hxPixels_PixelFormat(3,0,1,2,"RGBA");
hxPixels_PixelFormat.BGRA = new hxPixels_PixelFormat(3,2,1,0,"BGRA");
var ArrayBuffer = $global.ArrayBuffer || js_html_compat_ArrayBuffer;
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_html_compat_ArrayBuffer.sliceImpl;
}
var Float32Array = $global.Float32Array || js_html_compat_Float32Array._new;
var Uint8Array = $global.Uint8Array || js_html_compat_Uint8Array._new;
_$Mandelbrot_Mandelbrot_$Impl_$.count = 10000;
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_crypto_Base64.BYTES = haxe_io_Bytes.ofString(haxe_crypto_Base64.CHARS);
haxe_ds_ObjectMap.count = 0;
js_Boot.__toStr = ({ }).toString;
js_html_compat_Float32Array.BYTES_PER_ELEMENT = 4;
js_html_compat_Uint8Array.BYTES_PER_ELEMENT = 1;
luxe_Debug.debug_batch_tag = "batcher.debug_batcher";
luxe_Debug.trace_callbacks = [];
luxe_Debug.shut_down = false;
luxe_Debug.tracing = false;
luxe_Tag.update = "update dt";
luxe_Tag.tick = "tick dt";
luxe_Tag.game_update = "game.update";
luxe_Tag.render = "core.render";
luxe_Tag.debug = "core.debug";
luxe_Tag.updates = "core.updates";
luxe_Tag.events = "core.events";
luxe_Tag.audio = "core.audio";
luxe_Tag.input = "core.input";
luxe_Tag.timer = "core.timer";
luxe_Tag.scene = "core.scene";
luxe_Physics.tag_physics = "physics";
luxe_debug_ProfilerDebugView.color_red = new phoenix_Color().rgb(13369344);
luxe_debug_ProfilerDebugView.color_green = new phoenix_Color().rgb(2263108);
luxe_debug_ProfilerDebugView.color_normal = new phoenix_Color().rgb(15790320);
luxe_tween_actuators_SimpleActuator.actuators = [];
luxe_tween_actuators_SimpleActuator.actuatorsLength = 0;
luxe_tween_actuators_SimpleActuator.addedEvent = false;
luxe_tween_actuators_SimpleActuator.update_timer = 0;
luxe_tween_actuators_SimpleActuator.current_time = 0;
luxe_tween_Actuate.defaultActuator = luxe_tween_actuators_SimpleActuator;
luxe_tween_Actuate.defaultEase = luxe_tween_easing_Quad.get_easeOut();
luxe_tween_Actuate.targetLibraries = new haxe_ds_ObjectMap();
phoenix_Batcher._sequence_key = -1;
phoenix_Batcher.all = [];
phoenix_Texture.default_filter = 9729;
phoenix_Texture.default_clamp = 33071;
phoenix_geometry_Geometry._sequence_key = -1;
phoenix_geometry_TextGeometry.tab_regex = new EReg("\t","gim");
snow_Snow.next_queue = [];
snow_Snow.defer_queue = [];
snow_api_Promises.calls = [];
snow_api_Promises.defers = [];
snow_api_Timer.running_timers = [];
snow_core_web_Runtime.web_window_id = 1;
snow_core_web_Runtime.timestamp_start = 0.0;
snow_core_web_Runtime.key_press_ignored = [8,13];
snow_core_web__$Runtime_DOMKeys.dom_shift = 16;
snow_core_web__$Runtime_DOMKeys.dom_ctrl = 17;
snow_core_web__$Runtime_DOMKeys.dom_alt = 18;
snow_core_web__$Runtime_DOMKeys.dom_capslock = 20;
snow_core_web__$Runtime_DOMKeys.dom_pageup = 33;
snow_core_web__$Runtime_DOMKeys.dom_pagedown = 34;
snow_core_web__$Runtime_DOMKeys.dom_end = 35;
snow_core_web__$Runtime_DOMKeys.dom_home = 36;
snow_core_web__$Runtime_DOMKeys.dom_left = 37;
snow_core_web__$Runtime_DOMKeys.dom_up = 38;
snow_core_web__$Runtime_DOMKeys.dom_right = 39;
snow_core_web__$Runtime_DOMKeys.dom_down = 40;
snow_core_web__$Runtime_DOMKeys.dom_printscr = 44;
snow_core_web__$Runtime_DOMKeys.dom_insert = 45;
snow_core_web__$Runtime_DOMKeys.dom_delete = 46;
snow_core_web__$Runtime_DOMKeys.dom_lmeta = 91;
snow_core_web__$Runtime_DOMKeys.dom_rmeta = 93;
snow_core_web__$Runtime_DOMKeys.dom_kp_0 = 96;
snow_core_web__$Runtime_DOMKeys.dom_kp_1 = 97;
snow_core_web__$Runtime_DOMKeys.dom_kp_2 = 98;
snow_core_web__$Runtime_DOMKeys.dom_kp_3 = 99;
snow_core_web__$Runtime_DOMKeys.dom_kp_4 = 100;
snow_core_web__$Runtime_DOMKeys.dom_kp_5 = 101;
snow_core_web__$Runtime_DOMKeys.dom_kp_6 = 102;
snow_core_web__$Runtime_DOMKeys.dom_kp_7 = 103;
snow_core_web__$Runtime_DOMKeys.dom_kp_8 = 104;
snow_core_web__$Runtime_DOMKeys.dom_kp_9 = 105;
snow_core_web__$Runtime_DOMKeys.dom_kp_multiply = 106;
snow_core_web__$Runtime_DOMKeys.dom_kp_plus = 107;
snow_core_web__$Runtime_DOMKeys.dom_kp_minus = 109;
snow_core_web__$Runtime_DOMKeys.dom_kp_decimal = 110;
snow_core_web__$Runtime_DOMKeys.dom_kp_divide = 111;
snow_core_web__$Runtime_DOMKeys.dom_kp_numlock = 144;
snow_core_web__$Runtime_DOMKeys.dom_f1 = 112;
snow_core_web__$Runtime_DOMKeys.dom_f2 = 113;
snow_core_web__$Runtime_DOMKeys.dom_f3 = 114;
snow_core_web__$Runtime_DOMKeys.dom_f4 = 115;
snow_core_web__$Runtime_DOMKeys.dom_f5 = 116;
snow_core_web__$Runtime_DOMKeys.dom_f6 = 117;
snow_core_web__$Runtime_DOMKeys.dom_f7 = 118;
snow_core_web__$Runtime_DOMKeys.dom_f8 = 119;
snow_core_web__$Runtime_DOMKeys.dom_f9 = 120;
snow_core_web__$Runtime_DOMKeys.dom_f10 = 121;
snow_core_web__$Runtime_DOMKeys.dom_f11 = 122;
snow_core_web__$Runtime_DOMKeys.dom_f12 = 123;
snow_core_web__$Runtime_DOMKeys.dom_f13 = 124;
snow_core_web__$Runtime_DOMKeys.dom_f14 = 125;
snow_core_web__$Runtime_DOMKeys.dom_f15 = 126;
snow_core_web__$Runtime_DOMKeys.dom_f16 = 127;
snow_core_web__$Runtime_DOMKeys.dom_f17 = 128;
snow_core_web__$Runtime_DOMKeys.dom_f18 = 129;
snow_core_web__$Runtime_DOMKeys.dom_f19 = 130;
snow_core_web__$Runtime_DOMKeys.dom_f20 = 131;
snow_core_web__$Runtime_DOMKeys.dom_f21 = 132;
snow_core_web__$Runtime_DOMKeys.dom_f22 = 133;
snow_core_web__$Runtime_DOMKeys.dom_f23 = 134;
snow_core_web__$Runtime_DOMKeys.dom_f24 = 135;
snow_core_web__$Runtime_DOMKeys.dom_caret = 160;
snow_core_web__$Runtime_DOMKeys.dom_exclaim = 161;
snow_core_web__$Runtime_DOMKeys.dom_quotedbl = 162;
snow_core_web__$Runtime_DOMKeys.dom_hash = 163;
snow_core_web__$Runtime_DOMKeys.dom_dollar = 164;
snow_core_web__$Runtime_DOMKeys.dom_percent = 165;
snow_core_web__$Runtime_DOMKeys.dom_ampersand = 166;
snow_core_web__$Runtime_DOMKeys.dom_underscore = 167;
snow_core_web__$Runtime_DOMKeys.dom_leftparen = 168;
snow_core_web__$Runtime_DOMKeys.dom_rightparen = 169;
snow_core_web__$Runtime_DOMKeys.dom_asterisk = 170;
snow_core_web__$Runtime_DOMKeys.dom_plus = 171;
snow_core_web__$Runtime_DOMKeys.dom_pipe = 172;
snow_core_web__$Runtime_DOMKeys.dom_minus = 173;
snow_core_web__$Runtime_DOMKeys.dom_leftbrace = 174;
snow_core_web__$Runtime_DOMKeys.dom_rightbrace = 175;
snow_core_web__$Runtime_DOMKeys.dom_tilde = 176;
snow_core_web__$Runtime_DOMKeys.dom_audiomute = 181;
snow_core_web__$Runtime_DOMKeys.dom_volumedown = 182;
snow_core_web__$Runtime_DOMKeys.dom_volumeup = 183;
snow_core_web__$Runtime_DOMKeys.dom_comma = 188;
snow_core_web__$Runtime_DOMKeys.dom_period = 190;
snow_core_web__$Runtime_DOMKeys.dom_slash = 191;
snow_core_web__$Runtime_DOMKeys.dom_backquote = 192;
snow_core_web__$Runtime_DOMKeys.dom_leftbracket = 219;
snow_core_web__$Runtime_DOMKeys.dom_rightbracket = 221;
snow_core_web__$Runtime_DOMKeys.dom_backslash = 220;
snow_core_web__$Runtime_DOMKeys.dom_quote = 222;
snow_core_web__$Runtime_DOMKeys.dom_meta = 224;
snow_core_web_assets_Assets.POT = true;
snow_modules_webaudio_Audio.half_pi = 1.5707;
snow_types_Config.app_config = "config.json";
snow_types_Config.app_ident = "net.nanjizal.LuxeMandelbrot";
snow_types_Config.extensions = [];
luxe_Game.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
